{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=264", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=262", "results": [{"name": "py-decoratortools", "portdir": "python/py-decoratortools", "version": "1.8", "license": "(PSF or ZPL)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/DecoratorTools", "description": "Class, Function, and Assignment Decorators, Metaclasses, and Related Tools", "long_description": "Class, Function, and Assignment Decorators, Metaclasses, and Related Tools", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py27-decoratortools"]}], "depends_on": []}, {"name": "py27-decoratortools", "portdir": "python/py-decoratortools", "version": "1.8", "license": "(PSF or ZPL)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/DecoratorTools", "description": "Class, Function, and Assignment Decorators, Metaclasses, and Related Tools", "long_description": "Class, Function, and Assignment Decorators, Metaclasses, and Related Tools", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python27", "py27-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py-decoratortools", "py27-pyprotocols", "py27-turbogears"]}]}, {"name": "fzy", "portdir": "devel/fzy", "version": "1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/jhawthorn/fzy", "description": "A better fuzzy finder", "long_description": "fzy tries to find the result the user intended. It does this by favouring matches on consecutive letters and starts of words. This allows matching using acronyms or different parts of the path.", "active": true, "categories": ["devel"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": []}, {"name": "py-demjson", "portdir": "python/py-demjson", "version": "2.2.4", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://deron.meranda.us/python/demjson/", "description": "encoder, decoder, and lint/validator for JSON compliant with RFC 4627", "long_description": "encoder, decoder, and lint/validator for JSON (JavaScript Object Notation) compliant with RFC 4627. This module provides classes and functions for encoding or decoding data represented in the language-neutral JSON format. This implementation tries to be as compliant to the JSON specification (RFC 4627) as possible, while still providing many optional extensions to allow less restrictive JavaScript syntax. It includes complete Unicode support, including UTF-32, BOM, and surrogate pair processing. It can also support JavaScript's NaN and Infinity numeric types as well as its 'undefined' type. It also includes a lint-like JSON syntax validator which tests JSON text for strict compliance to the standard.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-demjson"]}], "depends_on": []}, {"name": "py27-demjson", "portdir": "python/py-demjson", "version": "2.2.4", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://deron.meranda.us/python/demjson/", "description": "encoder, decoder, and lint/validator for JSON compliant with RFC 4627", "long_description": "encoder, decoder, and lint/validator for JSON (JavaScript Object Notation) compliant with RFC 4627. This module provides classes and functions for encoding or decoding data represented in the language-neutral JSON format. This implementation tries to be as compliant to the JSON specification (RFC 4627) as possible, while still providing many optional extensions to allow less restrictive JavaScript syntax. It includes complete Unicode support, including UTF-32, BOM, and surrogate pair processing. It can also support JavaScript's NaN and Infinity numeric types as well as its 'undefined' type. It also includes a lint-like JSON syntax validator which tests JSON text for strict compliance to the standard.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-orbited"]}]}, {"name": "py36-demjson", "portdir": "python/py-demjson", "version": "2.2.4", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://deron.meranda.us/python/demjson/", "description": "encoder, decoder, and lint/validator for JSON compliant with RFC 4627", "long_description": "encoder, decoder, and lint/validator for JSON (JavaScript Object Notation) compliant with RFC 4627. This module provides classes and functions for encoding or decoding data represented in the language-neutral JSON format. This implementation tries to be as compliant to the JSON specification (RFC 4627) as possible, while still providing many optional extensions to allow less restrictive JavaScript syntax. It includes complete Unicode support, including UTF-32, BOM, and surrogate pair processing. It can also support JavaScript's NaN and Infinity numeric types as well as its 'undefined' type. It also includes a lint-like JSON syntax validator which tests JSON text for strict compliance to the standard.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": []}, {"name": "py27-descartes", "portdir": "python/py-descartes", "version": "1.1.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/sgillies/descartes/", "description": "Use geometric objects as matplotlib paths and patches", "long_description": "Use geometric objects as matplotlib paths and patches", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-matplotlib", "py27-numpy"]}], "depends_on": []}, {"name": "py35-descartes", "portdir": "python/py-descartes", "version": "1.1.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/sgillies/descartes/", "description": "Use geometric objects as matplotlib paths and patches", "long_description": "Use geometric objects as matplotlib paths and patches", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-matplotlib", "py35-numpy"]}], "depends_on": []}, {"name": "py39-aiosignal", "portdir": "python/py-aiosignal", "version": "1.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiosignal", "description": "manage callbacks in asyncio projects", "long_description": "A project to manage callbacks in asyncio projects.", "active": true, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-frozenlist"]}], "depends_on": [{"type": "lib", "ports": ["py-aiosignal", "py39-aiohttp"]}]}, {"name": "py38-apipkg", "portdir": "python/py-apipkg", "version": "1.5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/apipkg", "description": "namespace control and lazy-import mechanism", "long_description": "namespace control and lazy-import mechanism", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools", "py38-setuptools_scm"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-execnet"]}]}, {"name": "didder", "portdir": "graphics/didder", "version": "1.1.0", "license": "GPL-3.0", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/makeworld-the-better-one/didder", "description": "An extensive, fast, and accurate command-line image dithering tool.", "long_description": "didder is an extensive, fast, and accurate command-line image dithering tool. It is designed to work well for both power users as well as pipeline scripting.", "active": true, "categories": ["graphics"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "py35-execnet", "portdir": "python/py-execnet", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/execnet", "description": "rapid multi-Python deployment", "long_description": "rapid multi-Python deployment", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools_scm"]}, {"type": "lib", "ports": ["python35", "py35-apipkg"]}], "depends_on": [{"type": "lib", "ports": ["py35-pytest-xdist"]}]}, {"name": "py36-execnet", "portdir": "python/py-execnet", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/execnet", "description": "rapid multi-Python deployment", "long_description": "rapid multi-Python deployment", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools_scm"]}, {"type": "lib", "ports": ["python36", "py36-apipkg"]}], "depends_on": [{"type": "lib", "ports": ["py36-pytest-xdist"]}]}, {"name": "py310-aiosignal", "portdir": "python/py-aiosignal", "version": "1.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiosignal", "description": "manage callbacks in asyncio projects", "long_description": "A project to manage callbacks in asyncio projects.", "active": true, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools"]}, {"type": "lib", "ports": ["python310", "py310-frozenlist"]}], "depends_on": [{"type": "lib", "ports": ["py310-aiohttp"]}]}, {"name": "py37-demjson", "portdir": "python/py-demjson", "version": "2.2.4", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://deron.meranda.us/python/demjson/", "description": "encoder, decoder, and lint/validator for JSON compliant with RFC 4627", "long_description": "encoder, decoder, and lint/validator for JSON (JavaScript Object Notation) compliant with RFC 4627. This module provides classes and functions for encoding or decoding data represented in the language-neutral JSON format. This implementation tries to be as compliant to the JSON specification (RFC 4627) as possible, while still providing many optional extensions to allow less restrictive JavaScript syntax. It includes complete Unicode support, including UTF-32, BOM, and surrogate pair processing. It can also support JavaScript's NaN and Infinity numeric types as well as its 'undefined' type. It also includes a lint-like JSON syntax validator which tests JSON text for strict compliance to the standard.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py37-requests-unixsocket", "portdir": "python/py-requests-unixsocket", "version": "0.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "HTTP via a UNIX domain socket", "long_description": "This module uses py-requests to talk HTTP via a UNIX domain socket.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-pbr", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-requests"]}], "depends_on": []}, {"name": "py38-demjson", "portdir": "python/py-demjson", "version": "2.2.4", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://deron.meranda.us/python/demjson/", "description": "encoder, decoder, and lint/validator for JSON compliant with RFC 4627", "long_description": "encoder, decoder, and lint/validator for JSON (JavaScript Object Notation) compliant with RFC 4627. This module provides classes and functions for encoding or decoding data represented in the language-neutral JSON format. This implementation tries to be as compliant to the JSON specification (RFC 4627) as possible, while still providing many optional extensions to allow less restrictive JavaScript syntax. It includes complete Unicode support, including UTF-32, BOM, and surrogate pair processing. It can also support JavaScript's NaN and Infinity numeric types as well as its 'undefined' type. It also includes a lint-like JSON syntax validator which tests JSON text for strict compliance to the standard.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py-demjson"]}]}, {"name": "py-deprecated", "portdir": "python/py-deprecated", "version": "1.2.12", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tantale/deprecated", "description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "long_description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-deprecated"]}], "depends_on": []}, {"name": "py36-deprecated", "portdir": "python/py-deprecated", "version": "1.2.12", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tantale/deprecated", "description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "long_description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-wrapt"]}], "depends_on": [{"type": "lib", "ports": ["py36-test-runner"]}]}, {"name": "py37-deprecated", "portdir": "python/py-deprecated", "version": "1.2.12", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tantale/deprecated", "description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "long_description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-wrapt"]}], "depends_on": [{"type": "lib", "ports": ["py37-mapclassify", "py37-test-runner"]}]}, {"name": "py38-deprecated", "portdir": "python/py-deprecated", "version": "1.2.12", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tantale/deprecated", "description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "long_description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-wrapt"]}], "depends_on": [{"type": "lib", "ports": ["py38-test-runner"]}]}, {"name": "py39-deprecated", "portdir": "python/py-deprecated", "version": "1.2.12", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tantale/deprecated", "description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "long_description": "Python @deprecated decorator to deprecate old python classes, functions or methods.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-wrapt"]}], "depends_on": [{"type": "lib", "ports": ["py39-mapclassify", "py-deprecated"]}]}, {"name": "mscompress", "portdir": "archivers/mscompress", "version": "20180118", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/erikolofsson/mscompress", "description": "compress.exe/expand.exe compatible (de)compressor", "long_description": "compress.exe/expand.exe compatible (de)compressor", "active": true, "categories": ["archivers"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["autoconf", "automake", "libtool", "clang-9.0"]}], "depends_on": []}, {"name": "py37-execnet", "portdir": "python/py-execnet", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/execnet", "description": "rapid multi-Python deployment", "long_description": "rapid multi-Python deployment", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools_scm"]}, {"type": "lib", "ports": ["python37", "py37-apipkg"]}], "depends_on": [{"type": "lib", "ports": ["py37-pytest-xdist"]}, {"type": "run", "ports": ["py37-pytest-shutil"]}]}, {"name": "py-des", "portdir": "python/py-des", "version": "2.0.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://whitemans.ca/des.html", "description": "Pure python implementation of DES and TRIPLE DES encryption algorithm", "long_description": "This algorithm is a pure python implementation of the DES and Triple DES algorithms. Triple DES is either DES-EDE3 with a 24 byte key, or DES-EDE2 with a 16 byte key.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py39-des"]}], "depends_on": []}, {"name": "py27-des", "portdir": "python/py-des", "version": "2.0.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://whitemans.ca/des.html", "description": "Pure python implementation of DES and TRIPLE DES encryption algorithm", "long_description": "This algorithm is a pure python implementation of the DES and Triple DES algorithms. Triple DES is either DES-EDE3 with a 24 byte key, or DES-EDE2 with a 16 byte key.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py38-des", "portdir": "python/py-des", "version": "2.0.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://whitemans.ca/des.html", "description": "Pure python implementation of DES and TRIPLE DES encryption algorithm", "long_description": "This algorithm is a pure python implementation of the DES and Triple DES algorithms. Triple DES is either DES-EDE3 with a 24 byte key, or DES-EDE2 with a 16 byte key.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": []}, {"name": "py39-des", "portdir": "python/py-des", "version": "2.0.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://whitemans.ca/des.html", "description": "Pure python implementation of DES and TRIPLE DES encryption algorithm", "long_description": "This algorithm is a pure python implementation of the DES and Triple DES algorithms. Triple DES is either DES-EDE3 with a 24 byte key, or DES-EDE2 with a 16 byte key.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-des"]}]}, {"name": "py-descartes", "portdir": "python/py-descartes", "version": "1.1.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/sgillies/descartes/", "description": "Use geometric objects as matplotlib paths and patches", "long_description": "Use geometric objects as matplotlib paths and patches", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-descartes"]}], "depends_on": []}, {"name": "py38-execnet", "portdir": "python/py-execnet", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/execnet", "description": "rapid multi-Python deployment", "long_description": "rapid multi-Python deployment", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools_scm"]}, {"type": "lib", "ports": ["python38", "py38-apipkg"]}], "depends_on": [{"type": "lib", "ports": ["py38-pytest-xdist"]}, {"type": "run", "ports": ["py38-pytest-shutil"]}]}, {"name": "py39-execnet", "portdir": "python/py-execnet", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/execnet", "description": "rapid multi-Python deployment", "long_description": "rapid multi-Python deployment", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools_scm"]}, {"type": "lib", "ports": ["python39", "py39-apipkg"]}], "depends_on": [{"type": "lib", "ports": ["py-execnet", "py39-pytest-xdist"]}]}, {"name": "py38-requests-unixsocket", "portdir": "python/py-requests-unixsocket", "version": "0.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "HTTP via a UNIX domain socket", "long_description": "This module uses py-requests to talk HTTP via a UNIX domain socket.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-pbr", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-requests"]}], "depends_on": []}, {"name": "py36-descartes", "portdir": "python/py-descartes", "version": "1.1.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/sgillies/descartes/", "description": "Use geometric objects as matplotlib paths and patches", "long_description": "Use geometric objects as matplotlib paths and patches", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-matplotlib", "py36-numpy"]}], "depends_on": []}, {"name": "py37-descartes", "portdir": "python/py-descartes", "version": "1.1.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/sgillies/descartes/", "description": "Use geometric objects as matplotlib paths and patches", "long_description": "Use geometric objects as matplotlib paths and patches", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-matplotlib", "py37-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-descartes"]}]}, {"name": "py-dicom", "portdir": "python/py-dicom", "version": "0.9.9.post1", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydicom/pydicom", "description": "Python Module for working with DICOM files", "long_description": "pydicom is a pure python package for working with DICOM files. It was made for inspecting and modifying DICOM files in an easy pythonic way. The modifications can be written again to a new file. As a pure python package, it should run anywhere python runs without any other requirements. NOTE: Superseded by py-pydicom; retained for backward compatibility.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-dicom"]}], "depends_on": []}, {"name": "py27-dicom", "portdir": "python/py-dicom", "version": "0.9.9.post1", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydicom/pydicom", "description": "Python Module for working with DICOM files", "long_description": "pydicom is a pure python package for working with DICOM files. It was made for inspecting and modifying DICOM files in an easy pythonic way. The modifications can be written again to a new file. As a pure python package, it should run anywhere python runs without any other requirements. NOTE: Superseded by py-pydicom; retained for backward compatibility.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-sphinx"]}, {"type": "lib", "ports": ["python27", "py27-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-dicom"]}]}, {"name": "py-dijitso", "portdir": "python/py-dijitso", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/dijitso", "description": "A Python module for distributed just-in-time shared library building", "long_description": "This module was written to improve a core component of the FEniCS framework, namely the just in time compilation of C++ code that is generated from Python modules, but is only called from within a C++ library, and thus do not need wrapping in a nice Python interface.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-dijitso"]}], "depends_on": []}, {"name": "py36-dijitso", "portdir": "python/py-dijitso", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/dijitso", "description": "A Python module for distributed just-in-time shared library building", "long_description": "This module was written to improve a core component of the FEniCS framework, namely the just in time compilation of C++ code that is generated from Python modules, but is only called from within a C++ library, and thus do not need wrapping in a nice Python interface.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-numpy", "py36-six"]}], "depends_on": [{"type": "lib", "ports": ["py36-ffc", "py36-dolfin"]}]}, {"name": "py37-dijitso", "portdir": "python/py-dijitso", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/dijitso", "description": "A Python module for distributed just-in-time shared library building", "long_description": "This module was written to improve a core component of the FEniCS framework, namely the just in time compilation of C++ code that is generated from Python modules, but is only called from within a C++ library, and thus do not need wrapping in a nice Python interface.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-numpy", "py37-six"]}], "depends_on": [{"type": "lib", "ports": ["py37-ffc"]}]}, {"name": "py38-dijitso", "portdir": "python/py-dijitso", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/dijitso", "description": "A Python module for distributed just-in-time shared library building", "long_description": "This module was written to improve a core component of the FEniCS framework, namely the just in time compilation of C++ code that is generated from Python modules, but is only called from within a C++ library, and thus do not need wrapping in a nice Python interface.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-numpy", "py38-six"]}], "depends_on": [{"type": "lib", "ports": ["py38-ffc", "py-dijitso"]}]}, {"name": "py39-requests-unixsocket", "portdir": "python/py-requests-unixsocket", "version": "0.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "HTTP via a UNIX domain socket", "long_description": "This module uses py-requests to talk HTTP via a UNIX domain socket.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-pbr", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-requests"]}], "depends_on": [{"type": "lib", "ports": ["py-requests-unixsocket"]}]}, {"name": "libgeotiff", "portdir": "graphics/libgeotiff", "version": "1.7.0", "license": "X11", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://geotiff.osgeo.org/", "description": "Library and tools for dealing with GeoTIFF", "long_description": "This software provides support for the Tag Image File Format (TIFF) Geo extensions.", "active": true, "categories": ["graphics"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["proj7", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["zlib", "proj8", "libjpeg-turbo", "tiff"]}], "depends_on": [{"type": "lib", "ports": ["PDAL", "orfeotoolbox", "vxl", "gnudatalanguage", "grads", "magicspp", "vapor", "xastir", "liblas"]}]}, {"name": "py310-execnet", "portdir": "python/py-execnet", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/execnet", "description": "rapid multi-Python deployment", "long_description": "rapid multi-Python deployment", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools_scm"]}, {"type": "lib", "ports": ["python310", "py310-apipkg"]}], "depends_on": [{"type": "lib", "ports": ["py310-pytest-xdist"]}]}, {"name": "py-dispatcher", "portdir": "python/py-dispatcher", "version": "2.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PyDispatcher", "description": "python dispatcher mechanism for creating event models", "long_description": "PyDispatcher provides the Python programmer with a multiple-producer-multiple-consumer signal-registration and routing infrastructure for use in multiple contexts.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "dh", "github": "donkopotamus", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-dispatcher"]}], "depends_on": []}, {"name": "py27-dispatcher", "portdir": "python/py-dispatcher", "version": "2.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PyDispatcher", "description": "python dispatcher mechanism for creating event models", "long_description": "PyDispatcher provides the Python programmer with a multiple-producer-multiple-consumer signal-registration and routing infrastructure for use in multiple contexts.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "dh", "github": "donkopotamus", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-sqlobject", "py27-scrapy"]}]}, {"name": "py35-dispatcher", "portdir": "python/py-dispatcher", "version": "2.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PyDispatcher", "description": "python dispatcher mechanism for creating event models", "long_description": "PyDispatcher provides the Python programmer with a multiple-producer-multiple-consumer signal-registration and routing infrastructure for use in multiple contexts.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "dh", "github": "donkopotamus", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-dispatcher", "portdir": "python/py-dispatcher", "version": "2.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PyDispatcher", "description": "python dispatcher mechanism for creating event models", "long_description": "PyDispatcher provides the Python programmer with a multiple-producer-multiple-consumer signal-registration and routing infrastructure for use in multiple contexts.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "dh", "github": "donkopotamus", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-scrapy"]}]}, {"name": "py38-discordpy", "portdir": "python/py-discordpy", "version": "1.7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Rapptz/discord.py", "description": "API wrapper for Discord written in Python", "long_description": "discord.py is an API wrapper for Discord written in Python. This was written to allow easier writing of bots or chat logs.", "active": true, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-aiohttp"]}], "depends_on": []}, {"name": "py39-discordpy", "portdir": "python/py-discordpy", "version": "1.7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Rapptz/discord.py", "description": "API wrapper for Discord written in Python", "long_description": "discord.py is an API wrapper for Discord written in Python. This was written to allow easier writing of bots or chat logs.", "active": true, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-aiohttp"]}], "depends_on": [{"type": "lib", "ports": ["py-discordpy"]}]}, {"name": "py37-dispatcher", "portdir": "python/py-dispatcher", "version": "2.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PyDispatcher", "description": "python dispatcher mechanism for creating event models", "long_description": "PyDispatcher provides the Python programmer with a multiple-producer-multiple-consumer signal-registration and routing infrastructure for use in multiple contexts.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "dh", "github": "donkopotamus", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-sqlobject", "py37-scrapy"]}]}]}