{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=266", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=264", "results": [{"name": "py36-django-htmlmin", "portdir": "python/py-django-htmlmin", "version": "0.10.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cobrateam/django-htmlmin", "description": "html minify for django", "long_description": "django-html in an HTML minifier for Python with full support for HTML 5. It supports Django, Flask and any other Python web framework. It also provides a command line tool that can be used for static websites or deployment scripts.", "active": true, "categories": ["python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["py36-setuptools", "clang-9.0"]}, {"type": "lib", "ports": ["py36-django", "py36-html5lib", "python36", "py36-six", "py36-beautifulsoup4"]}, {"type": "run", "ports": ["django-htmlmin_select"]}], "depends_on": [{"type": "lib", "ports": ["py-django-htmlmin"]}]}, {"name": "py-django-nose", "portdir": "python/py-django-nose", "version": "1.4.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/django-nose/django-nose", "description": "Django test runner that uses nose", "long_description": "Django test runner that uses nose", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-django-nose"]}], "depends_on": []}, {"name": "py37-django-nose", "portdir": "python/py-django-nose", "version": "1.4.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/django-nose/django-nose", "description": "Django test runner that uses nose", "long_description": "Django test runner that uses nose", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-django", "py37-nose"]}], "depends_on": [{"type": "lib", "ports": ["py-django-nose"]}]}, {"name": "py34-django-nose", "portdir": "python/py-django-nose", "version": "1.4.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": "py35-django-nose", "homepage": "https://github.com/django-nose/django-nose", "description": "Obsolete port, replaced by py35-django-nose", "long_description": "This port has been replaced by py35-django-nose.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": [null]}, {"type": "fetch", "ports": [null]}, {"type": "lib", "ports": [null]}, {"type": "patch", "ports": [null]}, {"type": "run", "ports": [null]}, {"type": "test", "ports": [null]}], "depends_on": []}, {"name": "py-djvubind", "portdir": "python/py-djvubind", "version": "1.2.1", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/djvubind/", "description": "A tool to create highly compressed djvu files with positional ocr, metadata, and bookmarks", "long_description": "Djvubind facilitates creating high-quality djvu files, especially digital versions of scanned books. It functions as a wrapper that combines the djvulibre tools, minidjvu, and tesseract to provide a simple, single command creation of a djvu file.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "raphael", "github": "raphael-st", "ports_count": 18}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-djvubind"]}], "depends_on": []}, {"name": "py35-djvubind", "portdir": "python/py-djvubind", "version": "1.2.1", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/djvubind/", "description": "A tool to create highly compressed djvu files with positional ocr, metadata, and bookmarks", "long_description": "Djvubind facilitates creating high-quality djvu files, especially digital versions of scanned books. It functions as a wrapper that combines the djvulibre tools, minidjvu, and tesseract to provide a simple, single command creation of a djvu file.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "raphael", "github": "raphael-st", "ports_count": 18}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["djvulibre", "minidjvu", "ImageMagick", "cuneiform", "tesseract", "python35"]}], "depends_on": []}, {"name": "py-dload", "portdir": "python/py-dload", "version": "0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/x011/dload", "description": "A multipurpose downloader for python > 3.6", "long_description": "A multipurpose downloader for python > 3.6", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-dload"]}], "depends_on": []}, {"name": "py37-dload", "portdir": "python/py-dload", "version": "0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/x011/dload", "description": "A multipurpose downloader for python > 3.6", "long_description": "A multipurpose downloader for python > 3.6", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-pip"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py38-dload", "portdir": "python/py-dload", "version": "0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/x011/dload", "description": "A multipurpose downloader for python > 3.6", "long_description": "A multipurpose downloader for python > 3.6", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-pip"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": []}, {"name": "py39-dload", "portdir": "python/py-dload", "version": "0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/x011/dload", "description": "A multipurpose downloader for python > 3.6", "long_description": "A multipurpose downloader for python > 3.6", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-pip"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-dload"]}]}, {"name": "py-dm-sonnet", "portdir": "python/py-dm-sonnet", "version": "2.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/deepmind/sonnet", "description": "Sonnet is a library for building neural networks in TensorFlow.", "long_description": "Sonnet is a library built on top of TensorFlow 2 designed to provide simple, composable abstractions for machine learning research.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-dm-sonnet"]}], "depends_on": []}, {"name": "py37-dm-sonnet", "portdir": "python/py-dm-sonnet", "version": "2.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/deepmind/sonnet", "description": "Sonnet is a library for building neural networks in TensorFlow.", "long_description": "Sonnet is a library built on top of TensorFlow 2 designed to provide simple, composable abstractions for machine learning research.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-tensorflow"]}], "depends_on": [{"type": "run", "ports": ["py37-magenta"]}]}, {"name": "py38-dm-sonnet", "portdir": "python/py-dm-sonnet", "version": "2.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/deepmind/sonnet", "description": "Sonnet is a library for building neural networks in TensorFlow.", "long_description": "Sonnet is a library built on top of TensorFlow 2 designed to provide simple, composable abstractions for machine learning research.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-tensorflow"]}], "depends_on": [{"type": "run", "ports": ["py38-magenta"]}]}, {"name": "py39-dm-sonnet", "portdir": "python/py-dm-sonnet", "version": "2.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/deepmind/sonnet", "description": "Sonnet is a library for building neural networks in TensorFlow.", "long_description": "Sonnet is a library built on top of TensorFlow 2 designed to provide simple, composable abstractions for machine learning research.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-tensorflow"]}], "depends_on": [{"type": "lib", "ports": ["py-dm-sonnet"]}, {"type": "run", "ports": ["py39-magenta"]}]}, {"name": "py-dm-tree", "portdir": "python/py-dm-tree", "version": "0.1.5", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/deepmind/tree", "description": "Deepmind tree is a library for working with nested data structures.", "long_description": "Deepmind tree is a library for working with nested data structures. In a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each leaf preserving the overall structure.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-dm-tree"]}], "depends_on": []}, {"name": "py37-dm-tree", "portdir": "python/py-dm-tree", "version": "0.1.5", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/deepmind/tree", "description": "Deepmind tree is a library for working with nested data structures.", "long_description": "Deepmind tree is a library for working with nested data structures. In a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each leaf preserving the overall structure.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["native"], "dependencies": [{"type": "build", "ports": ["bazel-3.7", "clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["openjdk11", "python37"]}, {"type": "run", "ports": ["py37-six"]}, {"type": "test", "ports": ["py37-absl", "py37-attrs", "py37-numpy", "py37-wrapt"]}], "depends_on": [{"type": "run", "ports": ["py37-tensorflow-probability"]}]}, {"name": "py38-dm-tree", "portdir": "python/py-dm-tree", "version": "0.1.5", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/deepmind/tree", "description": "Deepmind tree is a library for working with nested data structures.", "long_description": "Deepmind tree is a library for working with nested data structures. In a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each leaf preserving the overall structure.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["native"], "dependencies": [{"type": "build", "ports": ["bazel-3.7", "clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["openjdk11", "python38"]}, {"type": "run", "ports": ["py38-six"]}, {"type": "test", "ports": ["py38-absl", "py38-attrs", "py38-numpy", "py38-wrapt"]}], "depends_on": [{"type": "run", "ports": ["py38-tensorflow-probability"]}]}, {"name": "py39-dm-tree", "portdir": "python/py-dm-tree", "version": "0.1.5", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/deepmind/tree", "description": "Deepmind tree is a library for working with nested data structures.", "long_description": "Deepmind tree is a library for working with nested data structures. In a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each leaf preserving the overall structure.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["native"], "dependencies": [{"type": "build", "ports": ["bazel-3.7", "clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["openjdk11", "python39"]}, {"type": "run", "ports": ["py39-six"]}, {"type": "test", "ports": ["py39-absl", "py39-attrs", "py39-numpy", "py39-wrapt"]}], "depends_on": [{"type": "lib", "ports": ["py-dm-tree"]}, {"type": "run", "ports": ["py39-tensorflow-probability"]}]}, {"name": "py36-dnspython", "portdir": "python/py-dnspython", "version": "2.1.0", "license": "ISC", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.dnspython.org/", "description": "DNS toolkit for Python", "long_description": "dnspython is a DNS toolkit for Python. It supports almost all record types. It can be used for queries, zone transfers, and dynamic updates. It supports TSIG authenticated messages and EDNS0.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py36-requests", "py36-requests-toolbelt", "py36-sniffio", "py36-trio", "python36", "py36-cryptography", "py36-idna"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py36-eventlet"]}, {"type": "run", "ports": ["py36-dns-lexicon"]}]}, {"name": "py37-dnspython", "portdir": "python/py-dnspython", "version": "2.1.0", "license": "ISC", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.dnspython.org/", "description": "DNS toolkit for Python", "long_description": "dnspython is a DNS toolkit for Python. It supports almost all record types. It can be used for queries, zone transfers, and dynamic updates. It supports TSIG authenticated messages and EDNS0.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py37-requests", "py37-requests-toolbelt", "py37-sniffio", "py37-trio", "python37", "py37-cryptography", "py37-idna"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py37-eventlet", "py37-ipwhois"]}, {"type": "run", "ports": ["py37-dns-lexicon"]}]}, {"name": "py38-dnspython", "portdir": "python/py-dnspython", "version": "2.1.0", "license": "ISC", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.dnspython.org/", "description": "DNS toolkit for Python", "long_description": "dnspython is a DNS toolkit for Python. It supports almost all record types. It can be used for queries, zone transfers, and dynamic updates. It supports TSIG authenticated messages and EDNS0.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py38-requests", "py38-requests-toolbelt", "py38-sniffio", "py38-trio", "python38", "py38-cryptography", "py38-idna"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py38-eventlet", "linkchecker"]}, {"type": "run", "ports": ["dnsviz", "py38-dns-lexicon"]}]}, {"name": "py39-dnspython", "portdir": "python/py-dnspython", "version": "2.1.0", "license": "ISC", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.dnspython.org/", "description": "DNS toolkit for Python", "long_description": "dnspython is a DNS toolkit for Python. It supports almost all record types. It can be used for queries, zone transfers, and dynamic updates. It supports TSIG authenticated messages and EDNS0.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py39-requests", "py39-requests-toolbelt", "py39-sniffio", "py39-trio", "python39", "py39-cryptography", "py39-idna"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py39-eventlet", "py-dnspython"]}, {"type": "run", "ports": ["py39-dns-lexicon"]}]}, {"name": "py-dockerpty", "portdir": "python/py-dockerpty", "version": "0.4.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/d11wtq/dockerpty", "description": "Pseudo-tty handler for docker Python client", "long_description": "Provides the functionality needed to operate the pseudo-tty (PTY) allocated to a docker container, using the Python client.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-dockerpty"]}], "depends_on": []}, {"name": "py27-dockerpty", "portdir": "python/py-dockerpty", "version": "0.4.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/d11wtq/dockerpty", "description": "Pseudo-tty handler for docker Python client", "long_description": "Provides the functionality needed to operate the pseudo-tty (PTY) allocated to a docker container, using the Python client.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-docker", "py27-six"]}], "depends_on": []}, {"name": "py37-dockerpty", "portdir": "python/py-dockerpty", "version": "0.4.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/d11wtq/dockerpty", "description": "Pseudo-tty handler for docker Python client", "long_description": "Provides the functionality needed to operate the pseudo-tty (PTY) allocated to a docker container, using the Python client.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-docker", "py37-six"]}], "depends_on": []}, {"name": "py38-dockerpty", "portdir": "python/py-dockerpty", "version": "0.4.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/d11wtq/dockerpty", "description": "Pseudo-tty handler for docker Python client", "long_description": "Provides the functionality needed to operate the pseudo-tty (PTY) allocated to a docker container, using the Python client.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-docker", "py38-six"]}], "depends_on": []}, {"name": "py39-dockerpty", "portdir": "python/py-dockerpty", "version": "0.4.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/d11wtq/dockerpty", "description": "Pseudo-tty handler for docker Python client", "long_description": "Provides the functionality needed to operate the pseudo-tty (PTY) allocated to a docker container, using the Python client.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-docker", "py39-six"]}], "depends_on": [{"type": "lib", "ports": ["docker-compose", "py-dockerpty"]}]}, {"name": "py-dockerpy-creds", "portdir": "python/py-dockerpy-creds", "version": "0.4.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/shin-/dockerpy-creds", "description": "Python bindings for the docker credentials store API", "long_description": "Python bindings for the docker credentials store API", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "zdw", "github": "", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-dockerpy-creds"]}], "depends_on": []}, {"name": "py27-dockerpy-creds", "portdir": "python/py-dockerpy-creds", "version": "0.4.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/shin-/dockerpy-creds", "description": "Python bindings for the docker credentials store API", "long_description": "Python bindings for the docker credentials store API", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "zdw", "github": "", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-six"]}], "depends_on": []}, {"name": "rekall", "portdir": "security/rekall", "version": "1.7.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.rekall-forensic.com/", "description": "collection of tools for the extraction of digital artifacts from volatile memory (RAM) samples", "long_description": "The Rekall Framework is a completely open collection of tools, implemented in Python under the GNU General Public License, for the extraction of digital artifacts from volatile memory (RAM) samples. The extraction techniques are performed completely independent of the system being investigated but offer visibilty into the runtime state of the system. The framework is intended to introduce people to the techniques and complexities associated with extracting digital artifacts from volatile memory samples and provide a platform for further work into this exciting area of research.", "active": true, "categories": ["security"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py35-dockerpy-creds", "portdir": "python/py-dockerpy-creds", "version": "0.4.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/shin-/dockerpy-creds", "description": "Python bindings for the docker credentials store API", "long_description": "Python bindings for the docker credentials store API", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "zdw", "github": "", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-six"]}], "depends_on": []}, {"name": "py27-docker", "portdir": "python/py-docker", "version": "5.0.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/docker/docker-py", "description": "An API client for docker written in Python", "long_description": "An API client for docker written in Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-paramiko", "py27-requests", "py27-six", "py27-websocket-client", "python27", "py27-ipaddress"]}, {"type": "test", "ports": ["py27-flake8", "py27-mock", "py27-pytest", "py27-pytest-cov", "py27-pytest-timeout"]}], "depends_on": [{"type": "lib", "ports": ["py27-dockerpty"]}]}, {"name": "py36-dockerpy-creds", "portdir": "python/py-dockerpy-creds", "version": "0.4.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/shin-/dockerpy-creds", "description": "Python bindings for the docker credentials store API", "long_description": "Python bindings for the docker credentials store API", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "zdw", "github": "", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-six"]}], "depends_on": []}, {"name": "py37-dockerpy-creds", "portdir": "python/py-dockerpy-creds", "version": "0.4.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/shin-/dockerpy-creds", "description": "Python bindings for the docker credentials store API", "long_description": "Python bindings for the docker credentials store API", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "zdw", "github": "", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-six"]}], "depends_on": []}, {"name": "py38-dockerpy-creds", "portdir": "python/py-dockerpy-creds", "version": "0.4.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/shin-/dockerpy-creds", "description": "Python bindings for the docker credentials store API", "long_description": "Python bindings for the docker credentials store API", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "zdw", "github": "", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-six"]}], "depends_on": [{"type": "lib", "ports": ["py-dockerpy-creds"]}]}, {"name": "py-docopt", "portdir": "python/py-docopt", "version": "0.6.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://docopt.org", "description": "Pythonic argument parser, that will make you smile", "long_description": "Pythonic argument parser, that will make you smile", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-docopt"]}], "depends_on": []}, {"name": "py27-docopt", "portdir": "python/py-docopt", "version": "0.6.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://docopt.org", "description": "Pythonic argument parser, that will make you smile", "long_description": "Pythonic argument parser, that will make you smile", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-breadability", "py27-ckanapi", "py27-dap", "py27-hdfs", "py27-sumy", "terminal_markdown_viewer"]}]}, {"name": "py35-docopt", "portdir": "python/py-docopt", "version": "0.6.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://docopt.org", "description": "Pythonic argument parser, that will make you smile", "long_description": "Pythonic argument parser, that will make you smile", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": [{"type": "lib", "ports": ["py35-breadability", "py35-ckanapi", "py35-hdfs", "py35-sumy"]}]}, {"name": "py36-docopt", "portdir": "python/py-docopt", "version": "0.6.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://docopt.org", "description": "Pythonic argument parser, that will make you smile", "long_description": "Pythonic argument parser, that will make you smile", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-breadability", "py36-ckanapi", "py36-hdfs", "py36-sumy"]}]}, {"name": "py37-docopt", "portdir": "python/py-docopt", "version": "0.6.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://docopt.org", "description": "Pythonic argument parser, that will make you smile", "long_description": "Pythonic argument parser, that will make you smile", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-breadability", "py37-dap", "py37-hdfs", "py37-sumy"]}]}, {"name": "py38-docopt", "portdir": "python/py-docopt", "version": "0.6.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://docopt.org", "description": "Pythonic argument parser, that will make you smile", "long_description": "Pythonic argument parser, that will make you smile", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-dap", "py38-hdfs"]}]}, {"name": "py39-docopt", "portdir": "python/py-docopt", "version": "0.6.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://docopt.org", "description": "Pythonic argument parser, that will make you smile", "long_description": "Pythonic argument parser, that will make you smile", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["docker-compose", "py-docopt", "py39-hdfs", "mackup"]}]}, {"name": "py-docx", "portdir": "python/py-docx", "version": "0.8.10", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-openxml/python-docx", "description": "Create and update Microsoft Word .docx files", "long_description": "Create and update Microsoft Word .docx files", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-docx"]}], "depends_on": []}, {"name": "sops", "portdir": "security/sops", "version": "3.7.1", "license": "MPL-2", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/mozilla/sops", "description": "Simple and flexible tool for managing secrets", "long_description": "Simple and flexible tool for managing secrets. sops is an editor of encrypted files that supports YAML, JSON, ENV, INI and BINARY formats and encrypts with AWS KMS, GCP KMS, Azure Key Vault and PGP.", "active": true, "categories": ["security"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "py-doctest-ignore-unicode", "portdir": "python/py-doctest-ignore-unicode", "version": "0.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/doctest-ignore-unicode", "description": "Add flag to ignore unicode literal prefixes in doctests", "long_description": "Add flag to ignore unicode literal prefixes in doctests", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-doctest-ignore-unicode"]}], "depends_on": []}, {"name": "py35-doctest-ignore-unicode", "portdir": "python/py-doctest-ignore-unicode", "version": "0.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/doctest-ignore-unicode", "description": "Add flag to ignore unicode literal prefixes in doctests", "long_description": "Add flag to ignore unicode literal prefixes in doctests", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35", "py35-setuptools"]}], "depends_on": [{"type": "test", "ports": ["py35-pygraphviz", "py35-rdflib"]}]}, {"name": "py36-doctest-ignore-unicode", "portdir": "python/py-doctest-ignore-unicode", "version": "0.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/doctest-ignore-unicode", "description": "Add flag to ignore unicode literal prefixes in doctests", "long_description": "Add flag to ignore unicode literal prefixes in doctests", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-setuptools"]}], "depends_on": [{"type": "test", "ports": ["py36-pygraphviz", "py36-rdflib"]}]}, {"name": "py37-doctest-ignore-unicode", "portdir": "python/py-doctest-ignore-unicode", "version": "0.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/doctest-ignore-unicode", "description": "Add flag to ignore unicode literal prefixes in doctests", "long_description": "Add flag to ignore unicode literal prefixes in doctests", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}], "depends_on": [{"type": "test", "ports": ["py37-rdflib"]}]}, {"name": "py38-doctest-ignore-unicode", "portdir": "python/py-doctest-ignore-unicode", "version": "0.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/doctest-ignore-unicode", "description": "Add flag to ignore unicode literal prefixes in doctests", "long_description": "Add flag to ignore unicode literal prefixes in doctests", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-setuptools"]}], "depends_on": [{"type": "test", "ports": ["py38-rdflib"]}]}, {"name": "py39-doctest-ignore-unicode", "portdir": "python/py-doctest-ignore-unicode", "version": "0.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/doctest-ignore-unicode", "description": "Add flag to ignore unicode literal prefixes in doctests", "long_description": "Add flag to ignore unicode literal prefixes in doctests", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py-doctest-ignore-unicode"]}, {"type": "test", "ports": ["py39-rdflib"]}]}]}