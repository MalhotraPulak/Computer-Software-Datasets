{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=303", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=301", "results": [{"name": "py35-nclib", "portdir": "python/py-nclib", "version": "0.8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nclib.readthedocs.io/", "description": "A Python socket library that wants to be your friend", "long_description": "nclib provides easy-to-use interfaces for connecting to and listening on TCP and UDP sockets, a better socket class (the Netcat object), mechanisms to launch processes with their input/output streams connected to sockets, TCP and UDP server classes for writing simple Python daemons and a script to easily daemonize command-line programs.", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "f30", "github": "F30", "ports_count": 10}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-nclib", "portdir": "python/py-nclib", "version": "0.8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nclib.readthedocs.io/", "description": "A Python socket library that wants to be your friend", "long_description": "nclib provides easy-to-use interfaces for connecting to and listening on TCP and UDP sockets, a better socket class (the Netcat object), mechanisms to launch processes with their input/output streams connected to sockets, TCP and UDP server classes for writing simple Python daemons and a script to easily daemonize command-line programs.", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "f30", "github": "F30", "ports_count": 10}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": []}, {"name": "py37-nclib", "portdir": "python/py-nclib", "version": "0.8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nclib.readthedocs.io/", "description": "A Python socket library that wants to be your friend", "long_description": "nclib provides easy-to-use interfaces for connecting to and listening on TCP and UDP sockets, a better socket class (the Netcat object), mechanisms to launch processes with their input/output streams connected to sockets, TCP and UDP server classes for writing simple Python daemons and a script to easily daemonize command-line programs.", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "f30", "github": "F30", "ports_count": 10}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py38-nclib", "portdir": "python/py-nclib", "version": "0.8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nclib.readthedocs.io/", "description": "A Python socket library that wants to be your friend", "long_description": "nclib provides easy-to-use interfaces for connecting to and listening on TCP and UDP sockets, a better socket class (the Netcat object), mechanisms to launch processes with their input/output streams connected to sockets, TCP and UDP server classes for writing simple Python daemons and a script to easily daemonize command-line programs.", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "f30", "github": "F30", "ports_count": 10}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py-nclib"]}]}, {"name": "py38-nose-exclude", "portdir": "python/py-nose-exclude", "version": "0.5.0", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/kgrandis/nose-exclude", "description": "Exclude specific directories from nosetests runs", "long_description": "Nose plugin that allows you to easily specify directories to be excluded from testing.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-nose", "py38-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py-nose-exclude"]}]}, {"name": "py-ndg_httpsclient", "portdir": "python/py-ndg_httpsclient", "version": "0.5.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ndg-httpsclient", "description": "This is a HTTPS client implementation for httplib and urllib2 based on PyOpenSSL.", "long_description": "This is a HTTPS client implementation for httplib and urllib2 based on PyOpenSSL. PyOpenSSL provides a more fully featured SSL implementation over the default provided with Python and importantly enables full verification of the SSL peer.", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-ndg_httpsclient"]}], "depends_on": []}, {"name": "py-netaddr", "portdir": "python/py-netaddr", "version": "0.8.0", "license": "BSD and MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/drkjam/netaddr/", "description": "A network address manipulation library for Python", "long_description": "A network address manipulation library for Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-netaddr"]}], "depends_on": []}, {"name": "py27-netaddr", "portdir": "python/py-netaddr", "version": "0.7.20", "license": "BSD and MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/drkjam/netaddr/", "description": "A network address manipulation library for Python", "long_description": "A network address manipulation library for Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py27-cidrize", "py27-rad"]}]}, {"name": "py35-netaddr", "portdir": "python/py-netaddr", "version": "0.7.20", "license": "BSD and MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/drkjam/netaddr/", "description": "A network address manipulation library for Python", "long_description": "A network address manipulation library for Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": []}, {"name": "py36-netaddr", "portdir": "python/py-netaddr", "version": "0.8.0", "license": "BSD and MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/drkjam/netaddr/", "description": "A network address manipulation library for Python", "long_description": "A network address manipulation library for Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "run", "ports": ["py36-oslo-config", "py36-oslo-utils"]}]}, {"name": "py37-networkit", "portdir": "python/py-networkit", "version": "9.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://networkit.iti.kit.edu/", "description": "NetworKit is a toolbox for high-performance network analysis", "long_description": "NetworKit is a toolbox for high-performance network analysis", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py37-setuptools", "cmake", "clang-9.0", "py37-cython"]}, {"type": "lib", "ports": ["libomp", "python37", "py37-numpy", "py37-scipy"]}], "depends_on": []}, {"name": "py37-netaddr", "portdir": "python/py-netaddr", "version": "0.8.0", "license": "BSD and MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/drkjam/netaddr/", "description": "A network address manipulation library for Python", "long_description": "A network address manipulation library for Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py37-cidrize"]}, {"type": "run", "ports": ["py37-oslo-config", "py37-oslo-utils"]}]}, {"name": "py-netifaces", "portdir": "python/py-netifaces", "version": "0.11.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://alastairs-place.net/projects/netifaces/", "description": "an easy way to get the address(es) of the machine\u2019s network interfaces from Python", "long_description": "an easy way to get the address(es) of the machine\u2019s network interfaces from Python", "active": true, "categories": ["python"], "maintainers": [{"name": "ryandesign", "github": "ryandesign", "ports_count": 1396}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-netifaces"]}], "depends_on": []}, {"name": "py38-netaddr", "portdir": "python/py-netaddr", "version": "0.8.0", "license": "BSD and MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/drkjam/netaddr/", "description": "A network address manipulation library for Python", "long_description": "A network address manipulation library for Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py38-cidrize", "py38-rad"]}, {"type": "run", "ports": ["py38-oslo-config", "py38-oslo-utils"]}]}, {"name": "groovy", "portdir": "lang/groovy", "version": "3.0.9", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://groovy-lang.org/", "description": "Groovy -- a Java-based scripting language", "long_description": "Groovy... * is an agile and dynamic language for the Java Virtual Machine * builds upon the strengths of Java but has additional power features inspired by languages like Python, Ruby and Smalltalk * makes modern programming features available to Java developers with almost-zero learning curve * provides the ability to statically type check and statically compile your code for robustness and performance * supports Domain-Specific Languages and other compact syntax so your code becomes easy to read and maintain * makes writing shell and build scripts easy with its powerful processing primitives, OO abilities and an Ant DSL * increases developer productivity by reducing scaffolding code when developing web, GUI, database or console applications * simplifies testing by supporting unit testing and mocking out-of-the-box * seamlessly integrates with all existing Java classes and libraries * compiles straight to Java bytecode so you can use it anywhere you can use Java", "active": true, "categories": ["lang", "java"], "maintainers": [{"name": "nils", "github": "breun", "ports_count": 57}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["openjdk8"]}], "depends_on": []}, {"name": "py27-netifaces", "portdir": "python/py-netifaces", "version": "0.11.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://alastairs-place.net/projects/netifaces/", "description": "an easy way to get the address(es) of the machine\u2019s network interfaces from Python", "long_description": "an easy way to get the address(es) of the machine\u2019s network interfaces from Python", "active": true, "categories": ["python"], "maintainers": [{"name": "ryandesign", "github": "ryandesign", "ports_count": 1396}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py-odo", "portdir": "python/py-odo", "version": "0.5.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ContinuumIO/odo", "description": "Data migration utilities", "long_description": "Data migration utilities", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-odo"]}], "depends_on": []}, {"name": "py-netdevicelib", "portdir": "python/py-netdevicelib", "version": "0.1", "license": "LGPL-2.1", "platforms": "darwin freebsd", "epoch": 0, "replaced_by": null, "homepage": "http://netdevicelib.sourceforge.net/", "description": "python module for interacting with network devices like routers", "long_description": "netdevicelib is a Python library for interacting with network devices, such as routers, switches, and firewalls. It is similar in concept (but more ambitious in scope) to the Net-Telnet-Cisco module for Perl.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-netdevicelib"]}], "depends_on": []}, {"name": "py27-netdevicelib", "portdir": "python/py-netdevicelib", "version": "0.1", "license": "LGPL-2.1", "platforms": "darwin freebsd", "epoch": 0, "replaced_by": null, "homepage": "http://netdevicelib.sourceforge.net/", "description": "python module for interacting with network devices like routers", "long_description": "netdevicelib is a Python library for interacting with network devices, such as routers, switches, and firewalls. It is similar in concept (but more ambitious in scope) to the Net-Telnet-Cisco module for Perl.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-netdevicelib"]}]}, {"name": "py-nest_asyncio", "portdir": "python/py-nest_asyncio", "version": "1.5.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/erdewit/nest_asyncio", "description": "Library that allows nested use of event loops.", "long_description": "Library that allows nested use of event loops.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-nest_asyncio"]}], "depends_on": []}, {"name": "py37-nest_asyncio", "portdir": "python/py-nest_asyncio", "version": "1.5.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/erdewit/nest_asyncio", "description": "Library that allows nested use of event loops.", "long_description": "Library that allows nested use of event loops.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-nbclient"]}]}, {"name": "py38-nest_asyncio", "portdir": "python/py-nest_asyncio", "version": "1.5.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/erdewit/nest_asyncio", "description": "Library that allows nested use of event loops.", "long_description": "Library that allows nested use of event loops.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-nbclient"]}]}, {"name": "py39-nest_asyncio", "portdir": "python/py-nest_asyncio", "version": "1.5.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/erdewit/nest_asyncio", "description": "Library that allows nested use of event loops.", "long_description": "Library that allows nested use of event loops.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py39-nbclient", "py-nest_asyncio"]}]}, {"name": "py-networkit", "portdir": "python/py-networkit", "version": "9.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://networkit.iti.kit.edu/", "description": "NetworKit is a toolbox for high-performance network analysis", "long_description": "NetworKit is a toolbox for high-performance network analysis", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-networkit"]}], "depends_on": []}, {"name": "py-nevow", "portdir": "python/py-nevow", "version": "0.14.4", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/twisted/nevow", "description": "A Web Application Construction Kit", "long_description": "Nevow is a next-generation web application templating system, based on the ideas developed in the Twisted Woven package. Its main focus is on separating the HTML template from both the business logic and the display logic, while allowing the programmer to write pure Python code as much as possible.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-nevow"]}], "depends_on": []}, {"name": "py27-nevow", "portdir": "python/py-nevow", "version": "0.14.4", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/twisted/nevow", "description": "A Web Application Construction Kit", "long_description": "Nevow is a next-generation web application templating system, based on the ideas developed in the Twisted Woven package. Its main focus is on separating the HTML template from both the business logic and the display logic, while allowing the programmer to write pure Python code as much as possible.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-twisted"]}], "depends_on": [{"type": "lib", "ports": ["py-nevow"]}]}, {"name": "py-ngl", "portdir": "python/py-ngl", "version": "1.3.0b1", "license": "PyNGL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.pyngl.ucar.edu/", "description": "Python module to visualize scientific data", "long_description": "PyNGL is a Python language module used to visualize scientific data, with an emphasis on high-quality 2D visualizations.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-ngl"]}], "depends_on": []}, {"name": "py27-ngl", "portdir": "python/py-ngl", "version": "1.3.0b1", "license": "PyNGL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.pyngl.ucar.edu/", "description": "Python module to visualize scientific data", "long_description": "PyNGL is a Python language module used to visualize scientific data, with an emphasis on high-quality 2D visualizations.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["g95", "gcc10", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel"], "dependencies": [{"type": "build", "ports": ["gcc10", "clang-9.0"]}, {"type": "lib", "ports": ["libgcc10", "libgcc", "zlib", "py27-nio", "xorg-libX11", "python27", "libpng"]}], "depends_on": [{"type": "lib", "ports": ["py-ngl"]}]}, {"name": "py-nibabel", "portdir": "python/py-nibabel", "version": "3.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nipy.org/nibabel", "description": "Access a cacophony of neuro-imaging file formats", "long_description": "Nibabel provides read and write access to some common medical and neuroimaging file formats, including: ANALYZE (plain, SPM99, SPM2), GIFTI, NIfTI1, MINC, MGH and ECAT as well as PAR/REC. We can read and write Freesurfer geometry, and read Freesurfer morphometry and annotation files. There is some very limited support for DICOM. NiBabel is the successor of PyNIfTI.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-nibabel"]}], "depends_on": []}, {"name": "py27-nibabel", "portdir": "python/py-nibabel", "version": "2.5.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nipy.org/nibabel", "description": "Access a cacophony of neuro-imaging file formats", "long_description": "Nibabel provides read and write access to some common medical and neuroimaging file formats, including: ANALYZE (plain, SPM99, SPM2), GIFTI, NIfTI1, MINC, MGH and ECAT as well as PAR/REC. We can read and write Freesurfer geometry, and read Freesurfer morphometry and annotation files. There is some very limited support for DICOM. NiBabel is the successor of PyNIfTI.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-bz2file", "py27-numpy", "py27-setuptools", "py27-six"]}], "depends_on": [{"type": "lib", "ports": ["py27-pymvpa"]}]}, {"name": "py35-nibabel", "portdir": "python/py-nibabel", "version": "3.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nipy.org/nibabel", "description": "Access a cacophony of neuro-imaging file formats", "long_description": "Nibabel provides read and write access to some common medical and neuroimaging file formats, including: ANALYZE (plain, SPM99, SPM2), GIFTI, NIfTI1, MINC, MGH and ECAT as well as PAR/REC. We can read and write Freesurfer geometry, and read Freesurfer morphometry and annotation files. There is some very limited support for DICOM. NiBabel is the successor of PyNIfTI.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35", "py35-numpy", "py35-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py35-pymvpa"]}]}, {"name": "py36-nibabel", "portdir": "python/py-nibabel", "version": "3.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nipy.org/nibabel", "description": "Access a cacophony of neuro-imaging file formats", "long_description": "Nibabel provides read and write access to some common medical and neuroimaging file formats, including: ANALYZE (plain, SPM99, SPM2), GIFTI, NIfTI1, MINC, MGH and ECAT as well as PAR/REC. We can read and write Freesurfer geometry, and read Freesurfer morphometry and annotation files. There is some very limited support for DICOM. NiBabel is the successor of PyNIfTI.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-numpy", "py36-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py36-pymvpa"]}]}, {"name": "py35-nltk", "portdir": "python/py-nltk", "version": "3.6.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.nltk.org/", "description": "Natural Language Toolkit", "long_description": "NLTK is Python modules for research and development in natural language processing", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "stevenbird1", "github": "stevenbird", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-matplotlib", "py35-numpy", "py35-yaml"]}], "depends_on": [{"type": "lib", "ports": ["py35-sumy"]}]}, {"name": "py37-nibabel", "portdir": "python/py-nibabel", "version": "3.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nipy.org/nibabel", "description": "Access a cacophony of neuro-imaging file formats", "long_description": "Nibabel provides read and write access to some common medical and neuroimaging file formats, including: ANALYZE (plain, SPM99, SPM2), GIFTI, NIfTI1, MINC, MGH and ECAT as well as PAR/REC. We can read and write Freesurfer geometry, and read Freesurfer morphometry and annotation files. There is some very limited support for DICOM. NiBabel is the successor of PyNIfTI.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-numpy", "py37-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py37-pymvpa"]}]}, {"name": "py36-nltk", "portdir": "python/py-nltk", "version": "3.6.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.nltk.org/", "description": "Natural Language Toolkit", "long_description": "NLTK is Python modules for research and development in natural language processing", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "stevenbird1", "github": "stevenbird", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-matplotlib", "py36-numpy", "py36-yaml"]}], "depends_on": [{"type": "lib", "ports": ["py36-sumy"]}]}, {"name": "xorg-libXfont2", "portdir": "x11/xorg-libXfont2", "version": "2.0.5", "license": "X11 and BSD", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.x.org", "description": "X.org libXfont", "long_description": "X font handling library for server and utilities", "active": true, "categories": ["devel", "x11"], "maintainers": [{"name": "jeremyhu", "github": "jeremyhu", "ports_count": 260}], "variants": ["docs", "universal"], "dependencies": [{"type": "build", "ports": ["xorg-xtrans", "automake", "libtool", "pkgconfig", "clang-9.0", "xorg-util-macros", "autoconf"]}, {"type": "lib", "ports": ["zlib", "freetype", "xorg-libfontenc", "xorg-xorgproto", "bzip2"]}], "depends_on": [{"type": "lib", "ports": ["xorg-server-devel", "xorg-server-legacy", "xorg-server", "xfs"]}]}, {"name": "py38-networkit", "portdir": "python/py-networkit", "version": "9.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://networkit.iti.kit.edu/", "description": "NetworKit is a toolbox for high-performance network analysis", "long_description": "NetworKit is a toolbox for high-performance network analysis", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py38-setuptools", "cmake", "clang-9.0", "py38-cython"]}, {"type": "lib", "ports": ["libomp", "python38", "py38-numpy", "py38-scipy"]}], "depends_on": []}, {"name": "py38-nibabel", "portdir": "python/py-nibabel", "version": "3.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nipy.org/nibabel", "description": "Access a cacophony of neuro-imaging file formats", "long_description": "Nibabel provides read and write access to some common medical and neuroimaging file formats, including: ANALYZE (plain, SPM99, SPM2), GIFTI, NIfTI1, MINC, MGH and ECAT as well as PAR/REC. We can read and write Freesurfer geometry, and read Freesurfer morphometry and annotation files. There is some very limited support for DICOM. NiBabel is the successor of PyNIfTI.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-numpy", "py38-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py-nibabel"]}]}, {"name": "py-nltk", "portdir": "python/py-nltk", "version": "3.6.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.nltk.org/", "description": "Natural Language Toolkit", "long_description": "NLTK is Python modules for research and development in natural language processing", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "stevenbird1", "github": "stevenbird", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-nltk"]}], "depends_on": []}, {"name": "py27-nltk", "portdir": "python/py-nltk", "version": "3.6.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.nltk.org/", "description": "Natural Language Toolkit", "long_description": "NLTK is Python modules for research and development in natural language processing", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "stevenbird1", "github": "stevenbird", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-matplotlib", "py27-numpy", "py27-yaml"]}], "depends_on": [{"type": "lib", "ports": ["py27-sumy"]}]}, {"name": "qt5-mysql-plugin", "portdir": "aqua/qt5", "version": "5.15.2", "license": "(LGPL-3 or GPL-3 or OpenSSLException)", "platforms": "macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.qt.io", "description": "MySQL Database Driver for Qt Tool Kit 5", "long_description": "MySQL Database Driver for Qt Tool Kit 5", "active": true, "categories": ["aqua"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": ["mariadb55", "mariadb10_5", "mariadb10_4", "mariadb10_3", "mariadb10_2", "mariadb10_1", "mysql8", "mysql57", "mysql56", "debug"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["qt5-qtbase", "mariadb"]}], "depends_on": [{"type": "lib", "ports": ["mythtv-core.28"]}]}, {"name": "py-nose", "portdir": "python/py-nose", "version": "1.3.7", "license": "LGPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nose.readthedocs.io/", "description": "A Python unittest extension.", "long_description": "A unittest extension offering automatic test suite discovery, simplified test authoring, and output capture. Nose provides an alternate test discovery and running process for unittest, one that is intended to mimic the behavior of py.test as much as is reasonably possible without resorting to magic.", "active": true, "categories": ["www", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-nose"]}, {"type": "run", "ports": ["nosetests_select"]}], "depends_on": []}, {"name": "py27-nose", "portdir": "python/py-nose", "version": "1.3.7", "license": "LGPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nose.readthedocs.io/", "description": "A Python unittest extension.", "long_description": "A unittest extension offering automatic test suite discovery, simplified test authoring, and output capture. Nose provides an alternate test discovery and running process for unittest, one that is intended to mimic the behavior of py.test as much as is reasonably possible without resorting to magic.", "active": true, "categories": ["www", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-setuptools"]}, {"type": "run", "ports": ["nosetests_select"]}], "depends_on": [{"type": "build", "ports": ["py27-pypostal", "py27-benchexec", "py27-backports-shutil_get_terminal_size", "yum", "py27-agate-excel", "py27-agate", "git-cvs", "cartman"]}, {"type": "lib", "ports": ["py27-nose-testconfig", "py27-nosexcover", "HORTON", "py27-nose-progressive", "py27-figleaf", "py27-pylons", "py27-leather", "py27-radical-utils", "py27-rudolf", "py27-nose-exclude", "py27-nose-skipreq", "py27-django-nose", "py27-awesome_slugify"]}, {"type": "run", "ports": ["py27-saga", "py27-trepan", "py27-pinocchio"]}, {"type": "test", "ports": ["py27-repoze.lru", "py27-scruffington", "py27-smmap", "py27-tracer", "py27-weberror", "py27-webtest", "py27-xmltodict", "py27-selectors2", "py27-pybtex", "py27-pyficache", "py27-anytree", "py27-zope-event", "py27-anyjson", "py27-axolotl", "py27-barnaba", "py27-beautifulsoup4", "py27-biplist", "py27-colormath", "py27-colour", "py27-control", "py27-cssutils", "py27-csvkit", "py27-emcee", "py27-ipy", "py27-mmtf-python", "pdf2djvu", "py27-parsimonious", "py27-paste", "py27-pastedeploy", "py27-pathfinder", "py27-podcastparser", "py27-pygraphviz", "py27-pyrfc3339", "py27-rdflib"]}]}, {"name": "py35-nose", "portdir": "python/py-nose", "version": "1.3.7", "license": "LGPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nose.readthedocs.io/", "description": "A Python unittest extension.", "long_description": "A unittest extension offering automatic test suite discovery, simplified test authoring, and output capture. Nose provides an alternate test discovery and running process for unittest, one that is intended to mimic the behavior of py.test as much as is reasonably possible without resorting to magic.", "active": true, "categories": ["www", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35", "py35-setuptools"]}, {"type": "run", "ports": ["nosetests_select"]}], "depends_on": [{"type": "build", "ports": ["py35-agate", "py35-agate-excel", "py35-pypostal"]}, {"type": "lib", "ports": ["py35-awesome_slugify", "py35-figleaf", "py35-urlwatch", "py35-leather", "py35-nose-exclude", "py35-django-nose"]}, {"type": "run", "ports": ["py35-pinocchio"]}, {"type": "test", "ports": ["py35-minidb", "py35-paste", "py35-pastedeploy", "py35-pathfinder", "py35-pygraphviz", "py35-pyrfc3339", "py35-rdflib", "py35-repoze.lru", "py35-scruffington", "py35-smmap", "py35-tracer", "py35-webtest", "py35-xmltodict", "py35-pyficache", "py35-rangehttpserver", "py35-anytree", "py35-zope-event", "py35-anyjson", "py35-biplist", "py35-colormath", "py35-control", "py35-cssutils", "py35-csvkit", "py35-emcee", "py35-ipy"]}]}, {"name": "py36-nose", "portdir": "python/py-nose", "version": "1.3.7", "license": "LGPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nose.readthedocs.io/", "description": "A Python unittest extension.", "long_description": "A unittest extension offering automatic test suite discovery, simplified test authoring, and output capture. Nose provides an alternate test discovery and running process for unittest, one that is intended to mimic the behavior of py.test as much as is reasonably possible without resorting to magic.", "active": true, "categories": ["www", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-setuptools"]}, {"type": "run", "ports": ["nosetests_select"]}], "depends_on": [{"type": "build", "ports": ["py36-benchexec", "py36-agate", "py36-agate-excel", "py36-pypostal"]}, {"type": "lib", "ports": ["py36-django-nose", "py36-figleaf", "py36-urlwatch", "py36-nose-exclude", "py36-awesome_slugify", "py36-leather"]}, {"type": "run", "ports": ["py36-pinocchio", "py36-isce2"]}, {"type": "test", "ports": ["py36-ipy", "py36-minidb", "py36-mmtf-python", "py36-parsimonious", "py36-paste", "py36-pastedeploy", "py36-pathfinder", "py36-plumed", "py36-podcastparser", "py36-pygraphviz", "py36-pyrfc3339", "py36-rdflib", "py36-repoze.lru", "py36-scruffington", "py36-smmap", "py36-tracer", "py36-webtest", "py36-xmltodict", "py36-pybtex", "py36-pyficache", "py36-rangehttpserver", "py36-anytree", "py36-zope-event", "py36-anyjson", "py36-axolotl", "py36-barnaba", "py36-biplist", "py36-colormath", "py36-colour", "py36-control", "py36-cssutils", "py36-csvkit", "py36-emcee"]}]}, {"name": "py37-nose", "portdir": "python/py-nose", "version": "1.3.7", "license": "LGPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nose.readthedocs.io/", "description": "A Python unittest extension.", "long_description": "A unittest extension offering automatic test suite discovery, simplified test authoring, and output capture. Nose provides an alternate test discovery and running process for unittest, one that is intended to mimic the behavior of py.test as much as is reasonably possible without resorting to magic.", "active": true, "categories": ["www", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}, {"type": "run", "ports": ["nosetests_select"]}], "depends_on": [{"type": "build", "ports": ["py37-agate-excel", "py37-pypostal", "py37-agate", "py37-benchexec"]}, {"type": "lib", "ports": ["py37-nose_xunitmp", "py37-nose-exclude", "py37-leather", "py37-django-nose", "py37-urlwatch"]}, {"type": "run", "ports": ["py37-isce2"]}, {"type": "test", "ports": ["py37-cssutils", "py37-csvkit", "py37-emcee", "py37-flask-cors", "py37-hdbscan", "py37-ipy", "py37-minidb", "py37-mmtf-python", "py37-overrides", "py37-parameterized", "py37-parsimonious", "py37-pastedeploy", "py37-pathfinder", "py37-plumed", "py37-podcastparser", "py37-pyrfc3339", "py37-rdflib", "py37-repoze.lru", "py37-scruffington", "py37-smmap", "py37-sure", "py37-tracer", "py37-webtest", "py37-xmltodict", "py37-pybtex", "py37-pyficache", "py37-apache-beam", "py37-anytree", "py37-rangehttpserver", "py37-zope-event", "py37-trepan3k", "py37-axolotl", "py37-barnaba", "py37-biplist", "py37-colormath", "py37-colour", "py37-control"]}]}, {"name": "py37-nltk", "portdir": "python/py-nltk", "version": "3.6.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.nltk.org/", "description": "Natural Language Toolkit", "long_description": "NLTK is Python modules for research and development in natural language processing", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "stevenbird1", "github": "stevenbird", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-matplotlib", "py37-numpy", "py37-yaml"]}], "depends_on": [{"type": "lib", "ports": ["py37-beancount-import", "py37-sumy", "py37-torchtext"]}]}, {"name": "py38-nltk", "portdir": "python/py-nltk", "version": "3.6.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.nltk.org/", "description": "Natural Language Toolkit", "long_description": "NLTK is Python modules for research and development in natural language processing", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "stevenbird1", "github": "stevenbird", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-matplotlib", "py38-numpy", "py38-yaml"]}], "depends_on": [{"type": "lib", "ports": ["py38-beancount-import", "py38-torchtext"]}, {"type": "run", "ports": ["py38-allennlp", "py38-transformers", "py38-sentence-transformers"]}]}, {"name": "py39-nltk", "portdir": "python/py-nltk", "version": "3.6.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.nltk.org/", "description": "Natural Language Toolkit", "long_description": "NLTK is Python modules for research and development in natural language processing", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "stevenbird1", "github": "stevenbird", "ports_count": 7}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-matplotlib", "py39-numpy", "py39-yaml"]}], "depends_on": [{"type": "lib", "ports": ["py-nltk", "py39-torchtext"]}, {"type": "run", "ports": ["py39-allennlp", "py39-transformers", "py39-sentence-transformers"]}]}, {"name": "py-nose-exclude", "portdir": "python/py-nose-exclude", "version": "0.5.0", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/kgrandis/nose-exclude", "description": "Exclude specific directories from nosetests runs", "long_description": "Nose plugin that allows you to easily specify directories to be excluded from testing.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-nose-exclude"]}], "depends_on": []}]}