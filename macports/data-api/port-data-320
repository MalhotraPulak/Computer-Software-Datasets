{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=321", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=319", "results": [{"name": "py-pynamecheap", "portdir": "python/py-pynamecheap", "version": "0.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Bemmu/PyNamecheap", "description": "PyNamecheap is a Namecheap API client in Python.", "long_description": "PyNamecheap is a Namecheap API client in Python. API itself is documented at http://developer.namecheap.com/docs/", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pynamecheap"]}], "depends_on": []}, {"name": "py27-pynamecheap", "portdir": "python/py-pynamecheap", "version": "0.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Bemmu/PyNamecheap", "description": "PyNamecheap is a Namecheap API client in Python.", "long_description": "PyNamecheap is a Namecheap API client in Python. API itself is documented at http://developer.namecheap.com/docs/", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-requests"]}], "depends_on": []}, {"name": "py36-pynamecheap", "portdir": "python/py-pynamecheap", "version": "0.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Bemmu/PyNamecheap", "description": "PyNamecheap is a Namecheap API client in Python.", "long_description": "PyNamecheap is a Namecheap API client in Python. API itself is documented at http://developer.namecheap.com/docs/", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-requests"]}], "depends_on": []}, {"name": "py37-pynamecheap", "portdir": "python/py-pynamecheap", "version": "0.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Bemmu/PyNamecheap", "description": "PyNamecheap is a Namecheap API client in Python.", "long_description": "PyNamecheap is a Namecheap API client in Python. API itself is documented at http://developer.namecheap.com/docs/", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-requests"]}], "depends_on": []}, {"name": "py38-pynamecheap", "portdir": "python/py-pynamecheap", "version": "0.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Bemmu/PyNamecheap", "description": "PyNamecheap is a Namecheap API client in Python.", "long_description": "PyNamecheap is a Namecheap API client in Python. API itself is documented at http://developer.namecheap.com/docs/", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-requests"]}], "depends_on": []}, {"name": "py39-pynamecheap", "portdir": "python/py-pynamecheap", "version": "0.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Bemmu/PyNamecheap", "description": "PyNamecheap is a Namecheap API client in Python.", "long_description": "PyNamecheap is a Namecheap API client in Python. API itself is documented at http://developer.namecheap.com/docs/", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-requests"]}], "depends_on": [{"type": "lib", "ports": ["py-pynamecheap", "certbot-dns-namecheap"]}]}, {"name": "py-pync", "portdir": "python/py-pync", "version": "2.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/setem/pync", "description": "A simple Python wrapper around the terminal-notifier command-line tool.", "long_description": "A simple Python wrapper around the terminal-notifier command-line tool. It allows you to send User Notifications to the Notification Center on OS X 10.8 or higher.", "active": true, "categories": ["aqua", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pync"]}], "depends_on": []}, {"name": "py27-pync", "portdir": "python/py-pync", "version": "2.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/setem/pync", "description": "A simple Python wrapper around the terminal-notifier command-line tool.", "long_description": "A simple Python wrapper around the terminal-notifier command-line tool. It allows you to send User Notifications to the Notification Center on OS X 10.8 or higher.", "active": true, "categories": ["aqua", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "run", "ports": ["terminal-notifier", "py27-dateutil"]}], "depends_on": []}, {"name": "py35-pync", "portdir": "python/py-pync", "version": "2.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/setem/pync", "description": "A simple Python wrapper around the terminal-notifier command-line tool.", "long_description": "A simple Python wrapper around the terminal-notifier command-line tool. It allows you to send User Notifications to the Notification Center on OS X 10.8 or higher.", "active": true, "categories": ["aqua", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["terminal-notifier", "py35-dateutil"]}], "depends_on": []}, {"name": "py36-pync", "portdir": "python/py-pync", "version": "2.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/setem/pync", "description": "A simple Python wrapper around the terminal-notifier command-line tool.", "long_description": "A simple Python wrapper around the terminal-notifier command-line tool. It allows you to send User Notifications to the Notification Center on OS X 10.8 or higher.", "active": true, "categories": ["aqua", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["terminal-notifier", "py36-dateutil"]}], "depends_on": []}, {"name": "py37-pync", "portdir": "python/py-pync", "version": "2.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/setem/pync", "description": "A simple Python wrapper around the terminal-notifier command-line tool.", "long_description": "A simple Python wrapper around the terminal-notifier command-line tool. It allows you to send User Notifications to the Notification Center on OS X 10.8 or higher.", "active": true, "categories": ["aqua", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["terminal-notifier", "py37-dateutil"]}], "depends_on": []}, {"name": "py38-pync", "portdir": "python/py-pync", "version": "2.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/setem/pync", "description": "A simple Python wrapper around the terminal-notifier command-line tool.", "long_description": "A simple Python wrapper around the terminal-notifier command-line tool. It allows you to send User Notifications to the Notification Center on OS X 10.8 or higher.", "active": true, "categories": ["aqua", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["terminal-notifier", "py38-dateutil"]}], "depends_on": []}, {"name": "py39-pync", "portdir": "python/py-pync", "version": "2.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/setem/pync", "description": "A simple Python wrapper around the terminal-notifier command-line tool.", "long_description": "A simple Python wrapper around the terminal-notifier command-line tool. It allows you to send User Notifications to the Notification Center on OS X 10.8 or higher.", "active": true, "categories": ["aqua", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["terminal-notifier", "py39-dateutil"]}], "depends_on": [{"type": "lib", "ports": ["py-pync"]}]}, {"name": "py-pynds", "portdir": "python/py-pynds", "version": "0.7.2", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.lsc-group.phys.uwm.edu/daswg/", "description": "Network Data Server Client Python Wrapper", "long_description": "Python wrapper for accessing streamed LIGO data using the Network Data Server version 2.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-pynds"]}], "depends_on": []}, {"name": "py27-pynds", "portdir": "python/py-pynds", "version": "0.7.2", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.lsc-group.phys.uwm.edu/daswg/", "description": "Network Data Server Client Python Wrapper", "long_description": "Python wrapper for accessing streamed LIGO data using the Network Data Server version 2.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-numpy", "nds2-client"]}], "depends_on": [{"type": "lib", "ports": ["py-pynds"]}]}, {"name": "py-pynetdicom", "portdir": "python/py-pynetdicom", "version": "1.5.6", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydicom/pynetdicom", "description": "A Python implementation of the DICOM networking protocol", "long_description": "pynetdicom is a pure Python (2.7/3.4+) package that implements the DICOM networking protocol. Working with pydicom, it allows the easy creation of DICOM Service Class Users (SCUs) and Service Class Providers (SCPs).", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pynetdicom"]}], "depends_on": []}, {"name": "py27-pynetdicom", "portdir": "python/py-pynetdicom", "version": "1.5.6", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydicom/pynetdicom", "description": "A Python implementation of the DICOM networking protocol", "long_description": "pynetdicom is a pure Python (2.7/3.4+) package that implements the DICOM networking protocol. Working with pydicom, it allows the easy creation of DICOM Service Class Users (SCUs) and Service Class Providers (SCPs).", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": ["doc"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-pydicom"]}], "depends_on": []}, {"name": "py36-pynetdicom", "portdir": "python/py-pynetdicom", "version": "1.5.6", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydicom/pynetdicom", "description": "A Python implementation of the DICOM networking protocol", "long_description": "pynetdicom is a pure Python (2.7/3.4+) package that implements the DICOM networking protocol. Working with pydicom, it allows the easy creation of DICOM Service Class Users (SCUs) and Service Class Providers (SCPs).", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": ["doc"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-pydicom"]}], "depends_on": []}, {"name": "py37-pynetdicom", "portdir": "python/py-pynetdicom", "version": "1.5.6", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydicom/pynetdicom", "description": "A Python implementation of the DICOM networking protocol", "long_description": "pynetdicom is a pure Python (2.7/3.4+) package that implements the DICOM networking protocol. Working with pydicom, it allows the easy creation of DICOM Service Class Users (SCUs) and Service Class Providers (SCPs).", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": ["doc"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-pydicom"]}], "depends_on": []}, {"name": "py38-pynetdicom", "portdir": "python/py-pynetdicom", "version": "1.5.6", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydicom/pynetdicom", "description": "A Python implementation of the DICOM networking protocol", "long_description": "pynetdicom is a pure Python (2.7/3.4+) package that implements the DICOM networking protocol. Working with pydicom, it allows the easy creation of DICOM Service Class Users (SCUs) and Service Class Providers (SCPs).", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": ["doc"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-pydicom"]}], "depends_on": []}, {"name": "py39-pypng", "portdir": "python/py-pypng", "version": "0.0.20", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/drj11/pypng", "description": "Pure Python PNG image encoder/decoder", "long_description": "Pure Python PNG image encoder/decoder", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-pypng", "py39-pyqrcode"]}, {"type": "run", "ports": ["py39-pyqrcodeng", "py39-tensor2tensor"]}]}, {"name": "py39-pynetdicom", "portdir": "python/py-pynetdicom", "version": "1.5.6", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydicom/pynetdicom", "description": "A Python implementation of the DICOM networking protocol", "long_description": "pynetdicom is a pure Python (2.7/3.4+) package that implements the DICOM networking protocol. Working with pydicom, it allows the easy creation of DICOM Service Class Users (SCUs) and Service Class Providers (SCPs).", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": ["doc"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-pydicom"]}], "depends_on": [{"type": "lib", "ports": ["py-pynetdicom"]}]}, {"name": "py-pynifti", "portdir": "python/py-pynifti", "version": "0.20100607.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://sourceforge.net/projects/niftilib", "description": "PyNIfTI aims to provide easy access to NIfTI images from within Python.", "long_description": "PyNIfTI aims to provide easy access to NIfTI images from within Python.. It uses SWIG-generated wrappers for the NIfTI reference library and provides the NiftiImage class for Python-style access to the image data.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-pynifti"]}], "depends_on": []}, {"name": "py27-pynifti", "portdir": "python/py-pynifti", "version": "0.20100607.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://sourceforge.net/projects/niftilib", "description": "PyNIfTI aims to provide easy access to NIfTI images from within Python.", "long_description": "PyNIfTI aims to provide easy access to NIfTI images from within Python.. It uses SWIG-generated wrappers for the NIfTI reference library and provides the NiftiImage class for Python-style access to the image data.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["gcc43", "gcc44", "gcc45", "gcc46", "gcc47", "universal"], "dependencies": [{"type": "build", "ports": ["gcc47"]}, {"type": "lib", "ports": ["swig-python", "nifticlib", "libgcc6", "libgcc", "py27-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-pynifti"]}]}, {"name": "py-pynzb", "portdir": "python/py-pynzb", "version": "0.1.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pynzb/", "description": "unified API for parsing NZB files", "long_description": "pynzb is a unified API for parsing NZB files", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-pynzb"]}], "depends_on": []}, {"name": "py-pyodbc", "portdir": "python/py-pyodbc", "version": "3.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/pyodbc/", "description": "Python DB API 2 module for ODBC", "long_description": "Python DB API 2 module for ODBC. This project provides an up-to-date, convenient interface to ODBC using native data types like datetime and decimal.", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py37-pyodbc"]}], "depends_on": []}, {"name": "py-pyobjc", "portdir": "python/py-pyobjc", "version": "7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pyobjc.readthedocs.io", "description": "bidirectional bridge between python and Objective C", "long_description": "The PyObjC project aims to provide a bridge between the Python and Objective-C programming languages. The bridge is intended to be fully bidirectional, allowing the Python programmer to take full advantage of the power provided by various Objective-C based toolkits and the Objective-C programmer transparent access to Python based functionality.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "danchr", "github": "danchr", "ports_count": 103}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pyobjc"]}], "depends_on": []}, {"name": "py27-pyodbc", "portdir": "python/py-pyodbc", "version": "3.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/pyodbc/", "description": "Python DB API 2 module for ODBC", "long_description": "Python DB API 2 module for ODBC. This project provides an up-to-date, convenient interface to ODBC using native data types like datetime and decimal.", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["unixODBC", "python27"]}], "depends_on": []}, {"name": "py36-pyobjc", "portdir": "python/py-pyobjc", "version": "7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pyobjc.readthedocs.io", "description": "bidirectional bridge between python and Objective C", "long_description": "The PyObjC project aims to provide a bridge between the Python and Objective-C programming languages. The bridge is intended to be fully bidirectional, allowing the Python programmer to take full advantage of the power provided by various Objective-C based toolkits and the Objective-C programmer transparent access to Python based functionality.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "danchr", "github": "danchr", "ports_count": 103}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-sphinx"]}, {"type": "lib", "ports": ["python36", "py36-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py36-zope-hookable", "py36-applaunchservices", "py36-pyviz_comms", "py36-astropy", "py36-param"]}]}, {"name": "py37-pyobjc", "portdir": "python/py-pyobjc", "version": "7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pyobjc.readthedocs.io", "description": "bidirectional bridge between python and Objective C", "long_description": "The PyObjC project aims to provide a bridge between the Python and Objective-C programming languages. The bridge is intended to be fully bidirectional, allowing the Python programmer to take full advantage of the power provided by various Objective-C based toolkits and the Objective-C programmer transparent access to Python based functionality.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "danchr", "github": "danchr", "ports_count": 103}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-sphinx"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}], "depends_on": [{"type": "build", "ports": ["py37-magenta", "py37-mesh-tensorflow", "py37-tensorflow-addons"]}, {"type": "lib", "ports": ["py37-imagecodecs", "py37-applaunchservices", "py37-pyviz_comms", "py37-astropy", "py37-param", "py37-gammapy", "py37-zope-hookable"]}]}, {"name": "py38-pyobjc", "portdir": "python/py-pyobjc", "version": "7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pyobjc.readthedocs.io", "description": "bidirectional bridge between python and Objective C", "long_description": "The PyObjC project aims to provide a bridge between the Python and Objective-C programming languages. The bridge is intended to be fully bidirectional, allowing the Python programmer to take full advantage of the power provided by various Objective-C based toolkits and the Objective-C programmer transparent access to Python based functionality.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "danchr", "github": "danchr", "ports_count": 103}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-sphinx"]}, {"type": "lib", "ports": ["python38", "py38-setuptools"]}], "depends_on": [{"type": "build", "ports": ["py38-tensorflow-addons", "py38-magenta", "py38-mesh-tensorflow"]}, {"type": "lib", "ports": ["py38-imagecodecs", "py38-applaunchservices", "py38-pyviz_comms", "py38-astropy", "py38-param", "MyPaint", "salt", "salt-minion", "salt-master", "salt-syndic", "salt-api", "py38-gammapy", "py38-zope-hookable"]}]}, {"name": "py-pyopencl", "portdir": "python/py-pyopencl", "version": "2019.1.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mathema.tician.de/software/pyopencl", "description": "Python wrapper for OpenCL.", "long_description": "PyOpenCL lets you access GPUs and other massively parallel compute devices from Python.", "active": true, "categories": ["science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-pyopencl"]}], "depends_on": []}, {"name": "py37-pyodbc", "portdir": "python/py-pyodbc", "version": "3.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/pyodbc/", "description": "Python DB API 2 module for ODBC", "long_description": "Python DB API 2 module for ODBC. This project provides an up-to-date, convenient interface to ODBC using native data types like datetime and decimal.", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["unixODBC", "python37"]}], "depends_on": [{"type": "lib", "ports": ["py-pyodbc"]}]}, {"name": "py27-pyopencl", "portdir": "python/py-pyopencl", "version": "2019.1.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mathema.tician.de/software/pyopencl", "description": "Python wrapper for OpenCL.", "long_description": "PyOpenCL lets you access GPUs and other massively parallel compute devices from Python.", "active": true, "categories": ["science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py27-mako", "clang-9.0", "py27-setuptools", "py27-pybind11", "py27-numpy"]}, {"type": "lib", "ports": ["python27", "py27-cffi"]}, {"type": "run", "ports": ["py27-six", "py27-pytools", "py27-pytest", "py27-decorator", "py27-appdirs"]}], "depends_on": [{"type": "lib", "ports": ["py27-pyFAI"]}]}, {"name": "py35-pyopencl", "portdir": "python/py-pyopencl", "version": "2019.1.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mathema.tician.de/software/pyopencl", "description": "Python wrapper for OpenCL.", "long_description": "PyOpenCL lets you access GPUs and other massively parallel compute devices from Python.", "active": true, "categories": ["science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py35-mako", "clang-9.0", "py35-setuptools", "py35-pybind11", "py35-numpy"]}, {"type": "lib", "ports": ["python35", "py35-cffi"]}, {"type": "run", "ports": ["py35-six", "py35-pytools", "py35-pytest", "py35-decorator", "py35-appdirs"]}], "depends_on": [{"type": "lib", "ports": ["py35-pyFAI"]}]}, {"name": "py36-pyopencl", "portdir": "python/py-pyopencl", "version": "2019.1.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mathema.tician.de/software/pyopencl", "description": "Python wrapper for OpenCL.", "long_description": "PyOpenCL lets you access GPUs and other massively parallel compute devices from Python.", "active": true, "categories": ["science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py36-mako", "clang-9.0", "py36-setuptools", "py36-pybind11", "py36-numpy"]}, {"type": "lib", "ports": ["python36", "py36-cffi"]}, {"type": "run", "ports": ["py36-six", "py36-pytools", "py36-pytest", "py36-decorator", "py36-appdirs"]}], "depends_on": [{"type": "lib", "ports": ["py36-pyFAI"]}]}, {"name": "py37-pyopencl", "portdir": "python/py-pyopencl", "version": "2019.1.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mathema.tician.de/software/pyopencl", "description": "Python wrapper for OpenCL.", "long_description": "PyOpenCL lets you access GPUs and other massively parallel compute devices from Python.", "active": true, "categories": ["science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py37-mako", "clang-9.0", "py37-setuptools", "py37-pybind11", "py37-numpy"]}, {"type": "lib", "ports": ["python37", "py37-cffi"]}, {"type": "run", "ports": ["py37-six", "py37-pytools", "py37-pytest", "py37-decorator", "py37-appdirs"]}], "depends_on": [{"type": "lib", "ports": ["py-pyopencl"]}]}, {"name": "py-pyorick", "portdir": "python/py-pyorick", "version": "1.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/dhmunro/pyorick", "description": "python connection to yorick", "long_description": "The pyorick package starts yorick as a subprocess and provides an interface between python and yorick interpreted code. Features: exec or eval arbitrary yorick code strings; get or set yorick variables; call yorick functions or subroutines with python arguments; get or set slices of large yorick arrays; terminal mode to interact with yorick by keyboard through python. Most of the data is exchanged via binary pipes between the two interpreters. Yorick runs in a request-reply mode. Python prints anything yorick sends to stdout or stderr except prompts.", "active": true, "categories": ["python"], "maintainers": [{"name": "thibaut", "github": "paumard", "ports_count": 36}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-pyorick"]}], "depends_on": []}, {"name": "py27-pyorick", "portdir": "python/py-pyorick", "version": "1.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/dhmunro/pyorick", "description": "python connection to yorick", "long_description": "The pyorick package starts yorick as a subprocess and provides an interface between python and yorick interpreted code. Features: exec or eval arbitrary yorick code strings; get or set yorick variables; call yorick functions or subroutines with python arguments; get or set slices of large yorick arrays; terminal mode to interact with yorick by keyboard through python. Most of the data is exchanged via binary pipes between the two interpreters. Yorick runs in a request-reply mode. Python prints anything yorick sends to stdout or stderr except prompts.", "active": true, "categories": ["python"], "maintainers": [{"name": "thibaut", "github": "paumard", "ports_count": 36}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "run", "ports": ["py27-numpy", "yorick"]}], "depends_on": []}, {"name": "py35-pyorick", "portdir": "python/py-pyorick", "version": "1.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/dhmunro/pyorick", "description": "python connection to yorick", "long_description": "The pyorick package starts yorick as a subprocess and provides an interface between python and yorick interpreted code. Features: exec or eval arbitrary yorick code strings; get or set yorick variables; call yorick functions or subroutines with python arguments; get or set slices of large yorick arrays; terminal mode to interact with yorick by keyboard through python. Most of the data is exchanged via binary pipes between the two interpreters. Yorick runs in a request-reply mode. Python prints anything yorick sends to stdout or stderr except prompts.", "active": true, "categories": ["python"], "maintainers": [{"name": "thibaut", "github": "paumard", "ports_count": 36}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-numpy", "yorick"]}], "depends_on": []}, {"name": "py36-pyorick", "portdir": "python/py-pyorick", "version": "1.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/dhmunro/pyorick", "description": "python connection to yorick", "long_description": "The pyorick package starts yorick as a subprocess and provides an interface between python and yorick interpreted code. Features: exec or eval arbitrary yorick code strings; get or set yorick variables; call yorick functions or subroutines with python arguments; get or set slices of large yorick arrays; terminal mode to interact with yorick by keyboard through python. Most of the data is exchanged via binary pipes between the two interpreters. Yorick runs in a request-reply mode. Python prints anything yorick sends to stdout or stderr except prompts.", "active": true, "categories": ["python"], "maintainers": [{"name": "thibaut", "github": "paumard", "ports_count": 36}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-numpy", "yorick"]}], "depends_on": []}, {"name": "py37-pyorick", "portdir": "python/py-pyorick", "version": "1.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/dhmunro/pyorick", "description": "python connection to yorick", "long_description": "The pyorick package starts yorick as a subprocess and provides an interface between python and yorick interpreted code. Features: exec or eval arbitrary yorick code strings; get or set yorick variables; call yorick functions or subroutines with python arguments; get or set slices of large yorick arrays; terminal mode to interact with yorick by keyboard through python. Most of the data is exchanged via binary pipes between the two interpreters. Yorick runs in a request-reply mode. Python prints anything yorick sends to stdout or stderr except prompts.", "active": true, "categories": ["python"], "maintainers": [{"name": "thibaut", "github": "paumard", "ports_count": 36}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-numpy", "yorick"]}], "depends_on": [{"type": "lib", "ports": ["py-pyorick"]}]}, {"name": "py-pypcap", "portdir": "python/py-pypcap", "version": "1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/pypcap/", "description": "python extension module for libpcap", "long_description": "A simplified object-oriented Python extension module for libpcap", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "andrew.reusch", "github": "", "ports_count": 2}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-pypcap"]}], "depends_on": []}, {"name": "py27-pypcap", "portdir": "python/py-pypcap", "version": "1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/pypcap/", "description": "python extension module for libpcap", "long_description": "A simplified object-oriented Python extension module for libpcap", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "andrew.reusch", "github": "", "ports_count": 2}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-pyrex"]}, {"type": "lib", "ports": ["python27", "libpcap"]}], "depends_on": [{"type": "lib", "ports": ["py-pypcap"]}]}, {"name": "py-pypeg2", "portdir": "python/py-pypeg2", "version": "2.15.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fdik.org/pyPEG/", "description": "An intrinsic PEG Parser-Interpreter for Python", "long_description": "An intrinsic PEG Parser-Interpreter for Python", "active": true, "categories": ["lang", "python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-pypeg2"]}], "depends_on": []}, {"name": "py27-pypeg2", "portdir": "python/py-pypeg2", "version": "2.15.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fdik.org/pyPEG/", "description": "An intrinsic PEG Parser-Interpreter for Python", "long_description": "An intrinsic PEG Parser-Interpreter for Python", "active": true, "categories": ["lang", "python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}, {"type": "run", "ports": ["py27-lxml"]}], "depends_on": []}, {"name": "py35-pypeg2", "portdir": "python/py-pypeg2", "version": "2.15.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fdik.org/pyPEG/", "description": "An intrinsic PEG Parser-Interpreter for Python", "long_description": "An intrinsic PEG Parser-Interpreter for Python", "active": true, "categories": ["lang", "python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-lxml"]}], "depends_on": []}, {"name": "py36-pypeg2", "portdir": "python/py-pypeg2", "version": "2.15.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fdik.org/pyPEG/", "description": "An intrinsic PEG Parser-Interpreter for Python", "long_description": "An intrinsic PEG Parser-Interpreter for Python", "active": true, "categories": ["lang", "python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-lxml"]}], "depends_on": []}, {"name": "py37-pypeg2", "portdir": "python/py-pypeg2", "version": "2.15.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fdik.org/pyPEG/", "description": "An intrinsic PEG Parser-Interpreter for Python", "long_description": "An intrinsic PEG Parser-Interpreter for Python", "active": true, "categories": ["lang", "python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-lxml"]}], "depends_on": []}, {"name": "py38-pypeg2", "portdir": "python/py-pypeg2", "version": "2.15.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fdik.org/pyPEG/", "description": "An intrinsic PEG Parser-Interpreter for Python", "long_description": "An intrinsic PEG Parser-Interpreter for Python", "active": true, "categories": ["lang", "python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-lxml"]}], "depends_on": [{"type": "lib", "ports": ["py-pypeg2"]}]}]}