{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=314", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=312", "results": [{"name": "py-posixtimezone", "portdir": "python/py-posixtimezone", "version": "0.9.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://stuartbishop.net/Software/PosixTimeZone/", "description": "tzinfo implementation for python", "long_description": "PosixTimeZone is a tzinfo implementation for Python, using the POSIX calls provided by many operating systems to handle timezone calculations.", "active": true, "categories": ["sysutils", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-posixtimezone"]}], "depends_on": []}, {"name": "py-postgresql", "portdir": "python/py-postgresql", "version": "1.2.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://python.projects.postgresql.org/", "description": "Python interface to PostgreSQL", "long_description": "py-postgresql is a project dedicated to improving the Python interfaces to PostgreSQL. It strives to provide substantial convenience to Python programmers using PostgreSQL. At its core, py-postgresql provides a PG-API, postgresql.api, and DB-API 2.0 interface for using a PostgreSQL database.", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-postgresql"]}], "depends_on": []}, {"name": "py35-postgresql", "portdir": "python/py-postgresql", "version": "1.2.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://python.projects.postgresql.org/", "description": "Python interface to PostgreSQL", "long_description": "py-postgresql is a project dedicated to improving the Python interfaces to PostgreSQL. It strives to provide substantial convenience to Python programmers using PostgreSQL. At its core, py-postgresql provides a PG-API, postgresql.api, and DB-API 2.0 interface for using a PostgreSQL database.", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-postgresql", "portdir": "python/py-postgresql", "version": "1.2.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://python.projects.postgresql.org/", "description": "Python interface to PostgreSQL", "long_description": "py-postgresql is a project dedicated to improving the Python interfaces to PostgreSQL. It strives to provide substantial convenience to Python programmers using PostgreSQL. At its core, py-postgresql provides a PG-API, postgresql.api, and DB-API 2.0 interface for using a PostgreSQL database.", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": []}, {"name": "py37-postgresql", "portdir": "python/py-postgresql", "version": "1.2.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://python.projects.postgresql.org/", "description": "Python interface to PostgreSQL", "long_description": "py-postgresql is a project dedicated to improving the Python interfaces to PostgreSQL. It strives to provide substantial convenience to Python programmers using PostgreSQL. At its core, py-postgresql provides a PG-API, postgresql.api, and DB-API 2.0 interface for using a PostgreSQL database.", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py-postgresql"]}]}, {"name": "py-powerline", "portdir": "python/py-powerline", "version": "2.8.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/powerline/powerline", "description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "long_description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "szf1234", "github": "i0ntempest", "ports_count": 26}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-powerline"]}], "depends_on": []}, {"name": "py27-powerline", "portdir": "python/py-powerline", "version": "2.8.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/powerline/powerline", "description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "long_description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "szf1234", "github": "i0ntempest", "ports_count": 26}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py36-powerline", "portdir": "python/py-powerline", "version": "2.8.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/powerline/powerline", "description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "long_description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "szf1234", "github": "i0ntempest", "ports_count": 26}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": []}, {"name": "py37-powerline", "portdir": "python/py-powerline", "version": "2.8.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/powerline/powerline", "description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "long_description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "szf1234", "github": "i0ntempest", "ports_count": 26}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py38-powerline", "portdir": "python/py-powerline", "version": "2.8.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/powerline/powerline", "description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "long_description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "szf1234", "github": "i0ntempest", "ports_count": 26}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": []}, {"name": "py39-powerline", "portdir": "python/py-powerline", "version": "2.8.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/powerline/powerline", "description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "long_description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "szf1234", "github": "i0ntempest", "ports_count": 26}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-powerline"]}]}, {"name": "py-presets", "portdir": "python/py-presets", "version": "0.1.3", "license": "ISC", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/bmcfee/presets", "description": "A python module to manipulate default parameters of a module's functions.", "long_description": "A python module to manipulate default parameters of a module's functions.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-presets"]}], "depends_on": []}, {"name": "py-poyo", "portdir": "python/py-poyo", "version": "0.5.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/hackebrot/poyo", "description": "A lightweight YAML Parser for Python.", "long_description": "A lightweight YAML Parser for Python.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-poyo"]}], "depends_on": []}, {"name": "py36-poyo", "portdir": "python/py-poyo", "version": "0.5.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/hackebrot/poyo", "description": "A lightweight YAML Parser for Python.", "long_description": "A lightweight YAML Parser for Python.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py36-cookiecutter"]}]}, {"name": "py37-poyo", "portdir": "python/py-poyo", "version": "0.5.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/hackebrot/poyo", "description": "A lightweight YAML Parser for Python.", "long_description": "A lightweight YAML Parser for Python.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py37-cookiecutter"]}]}, {"name": "py38-poyo", "portdir": "python/py-poyo", "version": "0.5.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/hackebrot/poyo", "description": "A lightweight YAML Parser for Python.", "long_description": "A lightweight YAML Parser for Python.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py38-cookiecutter"]}]}, {"name": "py38-soco", "portdir": "python/py-soco", "version": "0.24.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/SoCo/SoCo", "description": "SoCo (Sonos Controller) is a simple library to control Sonos speakers.", "long_description": "SoCo (Sonos Controller) is a simple library to control Sonos speakers.", "active": true, "categories": ["python"], "maintainers": [{"name": "kirill", "github": "catap", "ports_count": 191}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-requests", "py38-xmltodict", "py38-ifaddr"]}], "depends_on": []}, {"name": "py38-presets", "portdir": "python/py-presets", "version": "0.1.3", "license": "ISC", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/bmcfee/presets", "description": "A python module to manipulate default parameters of a module's functions.", "long_description": "A python module to manipulate default parameters of a module's functions.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-six"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-presets"]}]}, {"name": "py37-preshed", "portdir": "python/py-preshed", "version": "3.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/explosion/preshed", "description": "Cython hash tables that assume keys are pre-hashed", "long_description": "Cython hash tables that assume keys are pre-hashed", "active": true, "categories": ["python"], "maintainers": [{"name": "jonesc", "github": "cjones051073", "ports_count": 175}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-cython", "python37", "py37-murmurhash", "py37-cymem"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py37-spaCy", "py37-thinc"]}]}, {"name": "py-preshed", "portdir": "python/py-preshed", "version": "3.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/explosion/preshed", "description": "Cython hash tables that assume keys are pre-hashed", "long_description": "Cython hash tables that assume keys are pre-hashed", "active": true, "categories": ["python"], "maintainers": [{"name": "jonesc", "github": "cjones051073", "ports_count": 175}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-preshed"]}], "depends_on": []}, {"name": "py27-preshed", "portdir": "python/py-preshed", "version": "3.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/explosion/preshed", "description": "Cython hash tables that assume keys are pre-hashed", "long_description": "Cython hash tables that assume keys are pre-hashed", "active": true, "categories": ["python"], "maintainers": [{"name": "jonesc", "github": "cjones051073", "ports_count": 175}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-cython", "python27", "py27-murmurhash", "py27-cymem"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": []}, {"name": "py35-boto3", "portdir": "python/py-boto3", "version": "1.17.12", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/boto/boto3", "description": "The AWS SDK for Python", "long_description": "Boto3 is the Amazon Web Services (AWS) Software Development Kit (SDK) for Python, which allows Python developers to write software that makes use of services like Amazon S3 and Amazon EC2.", "active": false, "categories": ["python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-botocore", "py35-jmespath", "py35-s3transfer"]}], "depends_on": [{"type": "lib", "ports": ["py35-smart_open"]}]}, {"name": "py-pretty-midi", "portdir": "python/py-pretty-midi", "version": "0.2.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/craffel/pretty-midi", "description": "Functions and classes for handling MIDI data conveniently.", "long_description": "pretty_midi contains utility function/classes for handling MIDI data, so that it's in a format which is easy to modify and extract information from.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pretty-midi"]}], "depends_on": []}, {"name": "py37-pretty-midi", "portdir": "python/py-pretty-midi", "version": "0.2.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/craffel/pretty-midi", "description": "Functions and classes for handling MIDI data conveniently.", "long_description": "pretty_midi contains utility function/classes for handling MIDI data, so that it's in a format which is easy to modify and extract information from.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-six", "py37-mido", "py37-numpy"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "run", "ports": ["py37-magenta", "py37-note-seq"]}]}, {"name": "py38-pretty-midi", "portdir": "python/py-pretty-midi", "version": "0.2.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/craffel/pretty-midi", "description": "Functions and classes for handling MIDI data conveniently.", "long_description": "pretty_midi contains utility function/classes for handling MIDI data, so that it's in a format which is easy to modify and extract information from.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-six", "py38-mido", "py38-numpy"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "run", "ports": ["py38-magenta", "py38-note-seq"]}]}, {"name": "py39-pretty-midi", "portdir": "python/py-pretty-midi", "version": "0.2.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/craffel/pretty-midi", "description": "Functions and classes for handling MIDI data conveniently.", "long_description": "pretty_midi contains utility function/classes for handling MIDI data, so that it's in a format which is easy to modify and extract information from.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-six", "py39-mido", "py39-numpy"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-pretty-midi"]}, {"type": "run", "ports": ["py39-magenta", "py39-note-seq"]}]}, {"name": "py-prettytable", "portdir": "python/py-prettytable", "version": "0.7.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PrettyTable", "description": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format.", "long_description": "PrettyTable is a simple Python library designed to make it quick and easy to represent tabular data in visually appealing ASCII tables. It was inspired by the ASCII tables used in the PostgreSQL shell psql. PrettyTable allows for selection of which columns are to be printed, independent alignment of columns (left or right justified or centred) and printing of sub-tables by specifying a row range.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-prettytable"]}], "depends_on": []}, {"name": "py27-protego", "portdir": "python/py-protego", "version": "0.1.16", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/Protego", "description": "Protego is a pure-Python `robots.txt` parser with support for modern conventions.", "long_description": "Protego is a pure-Python `robots.txt` parser with support for modern conventions.", "active": true, "categories": ["python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-scrapy"]}]}, {"name": "py-pretend", "portdir": "python/py-pretend", "version": "1.0.9", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/alex/pretend", "description": "A library for stubbing in Python", "long_description": "A library for stubbing in Python", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pretend"]}], "depends_on": []}, {"name": "py35-preshed", "portdir": "python/py-preshed", "version": "3.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/explosion/preshed", "description": "Cython hash tables that assume keys are pre-hashed", "long_description": "Cython hash tables that assume keys are pre-hashed", "active": true, "categories": ["python"], "maintainers": [{"name": "jonesc", "github": "cjones051073", "ports_count": 175}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["py35-cython", "python35", "py35-murmurhash", "py35-cymem"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": []}, {"name": "py36-preshed", "portdir": "python/py-preshed", "version": "3.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/explosion/preshed", "description": "Cython hash tables that assume keys are pre-hashed", "long_description": "Cython hash tables that assume keys are pre-hashed", "active": true, "categories": ["python"], "maintainers": [{"name": "jonesc", "github": "cjones051073", "ports_count": 175}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["py36-cython", "python36", "py36-murmurhash", "py36-cymem"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py36-spaCy", "py36-thinc"]}]}, {"name": "py27-prettytable", "portdir": "python/py-prettytable", "version": "0.7.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PrettyTable", "description": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format.", "long_description": "PrettyTable is a simple Python library designed to make it quick and easy to represent tabular data in visually appealing ASCII tables. It was inspired by the ASCII tables used in the PostgreSQL shell psql. PrettyTable allows for selection of which columns are to be printed, independent alignment of columns (left or right justified or centred) and printing of sub-tables by specifying a row range.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-ipython-sql", "py27-irodsclient"]}]}, {"name": "py35-prettytable", "portdir": "python/py-prettytable", "version": "0.7.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PrettyTable", "description": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format.", "long_description": "PrettyTable is a simple Python library designed to make it quick and easy to represent tabular data in visually appealing ASCII tables. It was inspired by the ASCII tables used in the PostgreSQL shell psql. PrettyTable allows for selection of which columns are to be printed, independent alignment of columns (left or right justified or centred) and printing of sub-tables by specifying a row range.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": [{"type": "lib", "ports": ["py35-ipython-sql"]}]}, {"name": "py36-prettytable", "portdir": "python/py-prettytable", "version": "0.7.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PrettyTable", "description": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format.", "long_description": "PrettyTable is a simple Python library designed to make it quick and easy to represent tabular data in visually appealing ASCII tables. It was inspired by the ASCII tables used in the PostgreSQL shell psql. PrettyTable allows for selection of which columns are to be printed, independent alignment of columns (left or right justified or centred) and printing of sub-tables by specifying a row range.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-ipython-sql", "py36-irodsclient"]}, {"type": "run", "ports": ["py36-cinderclient", "py36-cliff", "py36-novaclient"]}]}, {"name": "py37-prettytable", "portdir": "python/py-prettytable", "version": "0.7.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PrettyTable", "description": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format.", "long_description": "PrettyTable is a simple Python library designed to make it quick and easy to represent tabular data in visually appealing ASCII tables. It was inspired by the ASCII tables used in the PostgreSQL shell psql. PrettyTable allows for selection of which columns are to be printed, independent alignment of columns (left or right justified or centred) and printing of sub-tables by specifying a row range.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-ipython-sql", "py37-irodsclient"]}, {"type": "run", "ports": ["py37-cinderclient", "py37-cliff", "py37-novaclient"]}]}, {"name": "py38-prettytable", "portdir": "python/py-prettytable", "version": "0.7.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/PrettyTable", "description": "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format.", "long_description": "PrettyTable is a simple Python library designed to make it quick and easy to represent tabular data in visually appealing ASCII tables. It was inspired by the ASCII tables used in the PostgreSQL shell psql. PrettyTable allows for selection of which columns are to be printed, independent alignment of columns (left or right justified or centred) and printing of sub-tables by specifying a row range.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-ipython-sql", "py-prettytable"]}, {"type": "run", "ports": ["py38-cinderclient", "py38-cliff", "py38-novaclient"]}]}, {"name": "py-progressbar", "portdir": "python/py-progressbar", "version": "2.3", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/python-progressbar/", "description": "Text progressbar library for python", "long_description": "This library provides a text mode progressbar. This is typically used to display the progress of a long running operation, providing a visual clue that processing is underway.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-progressbar"]}], "depends_on": []}, {"name": "py27-probstat", "portdir": "python/py-probstat", "version": "0.912", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://probstat.sourceforge.net/", "description": "Probability And Statistics for python", "long_description": "python module for doing fast Permutations, Combinations, Cartesian product and Priority Queue.", "active": true, "categories": ["math", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-probstat"]}]}, {"name": "py-processing", "portdir": "python/py-processing", "version": "0.52", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://developer.berlios.de/projects/pyprocessing", "description": "Using processes which mimics the threading module", "long_description": "Processing is a package for the Python language which supports the spawning of processes using the API of the standard library's threading module. Objects can be transferred between processes using pipes or multi-producer/multi-consumer queues. Objects can be shared between processes using a server process or (for simple data) shared memory. Equivalents of all the synchronization primitives in threading are available. A Pool class makes it easy to submit tasks to a pool of worker processes.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-processing"]}], "depends_on": []}, {"name": "py27-processing", "portdir": "python/py-processing", "version": "0.52", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://developer.berlios.de/projects/pyprocessing", "description": "Using processes which mimics the threading module", "long_description": "Processing is a package for the Python language which supports the spawning of processes using the API of the standard library's threading module. Objects can be transferred between processes using pipes or multi-producer/multi-consumer queues. Objects can be shared between processes using a server process or (for simple data) shared memory. Equivalents of all the synchronization primitives in threading are available. A Pool class makes it easy to submit tasks to a pool of worker processes.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-processing"]}]}, {"name": "py-proglog", "portdir": "python/py-proglog", "version": "0.1.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Edinburgh-Genome-Foundry/Proglog/", "description": "Log and progress bar manager for console, notebooks, web...", "long_description": "Proglog is a progress logging system for Python. It allows to build complex libraries while giving your users control over logs, callbacks and progress bars.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-proglog"]}], "depends_on": []}, {"name": "py37-proglog", "portdir": "python/py-proglog", "version": "0.1.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Edinburgh-Genome-Foundry/Proglog/", "description": "Log and progress bar manager for console, notebooks, web...", "long_description": "Proglog is a progress logging system for Python. It allows to build complex libraries while giving your users control over logs, callbacks and progress bars.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-tqdm"]}], "depends_on": [{"type": "run", "ports": ["py37-moviepy"]}]}, {"name": "py38-proglog", "portdir": "python/py-proglog", "version": "0.1.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Edinburgh-Genome-Foundry/Proglog/", "description": "Log and progress bar manager for console, notebooks, web...", "long_description": "Proglog is a progress logging system for Python. It allows to build complex libraries while giving your users control over logs, callbacks and progress bars.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-tqdm"]}], "depends_on": [{"type": "run", "ports": ["py38-moviepy"]}]}, {"name": "py27-progressbar", "portdir": "python/py-progressbar", "version": "2.3", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/python-progressbar/", "description": "Text progressbar library for python", "long_description": "This library provides a text mode progressbar. This is typically used to display the progress of a long running operation, providing a visual clue that processing is underway.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["youtube-upload", "py-progressbar"]}, {"type": "run", "ports": ["py27-FlexGet"]}]}, {"name": "py-promise", "portdir": "python/py-promise", "version": "2.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/syrusakbary/promise", "description": "Promises/A implementation for Python", "long_description": "Promises/A implementation for Python", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-promise"]}], "depends_on": []}, {"name": "py37-promise", "portdir": "python/py-promise", "version": "2.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/syrusakbary/promise", "description": "Promises/A implementation for Python", "long_description": "Promises/A implementation for Python", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "run", "ports": ["py37-tensorflow-datasets"]}]}, {"name": "py35-protego", "portdir": "python/py-protego", "version": "0.1.16", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/Protego", "description": "Protego is a pure-Python `robots.txt` parser with support for modern conventions.", "long_description": "Protego is a pure-Python `robots.txt` parser with support for modern conventions.", "active": true, "categories": ["python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-protego", "portdir": "python/py-protego", "version": "0.1.16", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/Protego", "description": "Protego is a pure-Python `robots.txt` parser with support for modern conventions.", "long_description": "Protego is a pure-Python `robots.txt` parser with support for modern conventions.", "active": true, "categories": ["python"], "maintainers": [{"name": "khindenburg", "github": "kurthindenburg", "ports_count": 306}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-scrapy"]}]}, {"name": "py39-soco", "portdir": "python/py-soco", "version": "0.24.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/SoCo/SoCo", "description": "SoCo (Sonos Controller) is a simple library to control Sonos speakers.", "long_description": "SoCo (Sonos Controller) is a simple library to control Sonos speakers.", "active": true, "categories": ["python"], "maintainers": [{"name": "kirill", "github": "catap", "ports_count": 191}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-requests", "py39-xmltodict", "py39-ifaddr"]}], "depends_on": [{"type": "lib", "ports": ["py-soco", "beets", "beets-devel"]}]}, {"name": "mpd", "portdir": "audio/mpd", "version": "0.23.4", "license": "GPL-2+ and LGPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.musicpd.org/", "description": "Music Player Daemon", "long_description": "Music Player Daemon (MPD) allows remote access for playing music (MP3, Ogg Vorbis, FLAC, AAC, Mod, and wave files) and managing playlists. MPD is designed for integrating a computer into a stereo system that provides control for music playback over a local network. It also makes a great desktop music player, especially if you are a console junkie, like frontend options, or restart X often.", "active": true, "categories": ["audio"], "maintainers": [], "variants": ["ffmpeg", "stickers", "libmpdclient", "lame", "twolame", "mpcdec", "mod", "modplug", "fluidsynth", "jack", "shout", "sidplay", "chromaprint", "mpg123", "mad", "webdav", "upnp", "mms", "avahi", "universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "meson", "ninja", "boost176", "clang-9.0", "py39-sphinx"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["libcdio-paranoia", "libid3tag", "libmad", "libopus", "libvorbis", "wavpack", "bzip2", "icu", "libfmt", "pcre2", "libogg", "curl", "libiconv", "glib2", "libzzip", "zlib", "audiofile", "faad2", "flac", "libao"]}], "depends_on": []}]}