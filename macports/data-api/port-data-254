{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=255", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=253", "results": [{"name": "py-cairo", "portdir": "python/py-cairo", "version": "1.20.1", "license": "(LGPL-2.1 or MPL-1.1)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pygobject/pycairo", "description": "Pycairo is set of Python bindings for the cairo graphics library", "long_description": "Pycairo is set of Python bindings for the cairo graphics library", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-cairo"]}], "depends_on": []}, {"name": "py37-cachy", "portdir": "python/py-cachy", "version": "0.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/sdispater/cachy", "description": "Cachy provides a simple yet effective caching library.", "long_description": "Cachy provides a simple yet effective caching library.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "davidgilman1", "github": "dgilman", "ports_count": 46}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py38-cachy", "portdir": "python/py-cachy", "version": "0.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/sdispater/cachy", "description": "Cachy provides a simple yet effective caching library.", "long_description": "Cachy provides a simple yet effective caching library.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "davidgilman1", "github": "dgilman", "ports_count": 46}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": []}, {"name": "py27-cairo", "portdir": "python/py-cairo", "version": "1.18.2", "license": "(LGPL-2.1 or MPL-1.1)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pygobject/pycairo", "description": "Pycairo is set of Python bindings for the cairo graphics library", "long_description": "Pycairo is set of Python bindings for the cairo graphics library", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": ["quartz", "x11", "universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["cairo", "python27"]}, {"type": "test", "ports": ["py27-hypothesis", "py27-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py27-gobject", "py27-harstorage", "py27-gobject3", "py27-pygtk-devel", "py27-pygtk", "py27-goocanvas", "py27-matplotlib", "py27-graph-tool"]}]}, {"name": "py36-setuptools-rust", "portdir": "python/py-setuptools-rust", "version": "0.12.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyO3/setuptools-rust", "description": "Setuptools plugin for Rust extensions", "long_description": "Setuptools plugin for Rust extensions", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["py36-pip", "clang-9.0", "py36-wheel", "py36-setuptools_scm"]}, {"type": "lib", "ports": ["python36", "py36-toml"]}, {"type": "run", "ports": ["py36-semantic_version", "rust", "cargo"]}], "depends_on": [{"type": "build", "ports": ["py36-cryptography"]}]}, {"name": "py310-setuptools-rust", "portdir": "python/py-setuptools-rust", "version": "0.12.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyO3/setuptools-rust", "description": "Setuptools plugin for Rust extensions", "long_description": "Setuptools plugin for Rust extensions", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["py310-pip", "clang-9.0", "py310-wheel", "py310-setuptools_scm"]}, {"type": "lib", "ports": ["python310", "py310-toml"]}, {"type": "run", "ports": ["py310-semantic_version", "rust", "cargo"]}], "depends_on": [{"type": "build", "ports": ["py310-cryptography"]}]}, {"name": "py-cairosvg_select", "portdir": "python/py-cairosvg_select", "version": "0.1", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.macports.org/", "description": "common files for selecting default cairosvg version", "long_description": "This port installs files that allow 'port select' to be used to create links to the preferred default version of cairosvg.", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": [{"type": "run", "ports": ["py37-cairosvg", "py38-cairosvg", "py39-cairosvg", "py310-cairosvg"]}]}, {"name": "py27-canmatrix", "portdir": "python/py-canmatrix", "version": "0.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ebroecker/canmatrix", "description": "Converting Can (Controller Area Network) Database Formats .arxml .dbc .dbf .kcd", "long_description": "Canmatrix implements a Python Can Matrix Object which describes the can-communication and the needed objects (Boardunits, Frames, Signals, Values, ...) Canmatrix also includes two Tools (canconvert and cancompare) for converting and comparing CAN databases.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "aw.kornilov", "github": "ierofant", "ports_count": 13}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-future", "py27-setuptools"]}], "depends_on": []}, {"name": "py36-canmatrix", "portdir": "python/py-canmatrix", "version": "0.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ebroecker/canmatrix", "description": "Converting Can (Controller Area Network) Database Formats .arxml .dbc .dbf .kcd", "long_description": "Canmatrix implements a Python Can Matrix Object which describes the can-communication and the needed objects (Boardunits, Frames, Signals, Values, ...) Canmatrix also includes two Tools (canconvert and cancompare) for converting and comparing CAN databases.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "aw.kornilov", "github": "ierofant", "ports_count": 13}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-future", "py36-setuptools"]}], "depends_on": []}, {"name": "py37-canmatrix", "portdir": "python/py-canmatrix", "version": "0.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ebroecker/canmatrix", "description": "Converting Can (Controller Area Network) Database Formats .arxml .dbc .dbf .kcd", "long_description": "Canmatrix implements a Python Can Matrix Object which describes the can-communication and the needed objects (Boardunits, Frames, Signals, Values, ...) Canmatrix also includes two Tools (canconvert and cancompare) for converting and comparing CAN databases.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "aw.kornilov", "github": "ierofant", "ports_count": 13}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-future", "py37-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py-canmatrix"]}]}, {"name": "py35-cairo", "portdir": "python/py-cairo", "version": "1.20.1", "license": "(LGPL-2.1 or MPL-1.1)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pygobject/pycairo", "description": "Pycairo is set of Python bindings for the cairo graphics library", "long_description": "Pycairo is set of Python bindings for the cairo graphics library", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": ["universal", "quartz", "x11"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["cairo", "python35"]}, {"type": "test", "ports": ["py35-hypothesis", "py35-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py35-gobject", "py35-gobject3", "py35-matplotlib"]}]}, {"name": "py36-cairo", "portdir": "python/py-cairo", "version": "1.20.1", "license": "(LGPL-2.1 or MPL-1.1)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pygobject/pycairo", "description": "Pycairo is set of Python bindings for the cairo graphics library", "long_description": "Pycairo is set of Python bindings for the cairo graphics library", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": ["quartz", "x11", "universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["cairo", "python36"]}, {"type": "test", "ports": ["py36-hypothesis", "py36-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py36-gobject", "py36-gobject3", "py36-matplotlib"]}]}, {"name": "py-cbor2", "portdir": "python/py-cbor2", "version": "5.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/agronholm/cbor2", "description": "Pure Python CBOR de-serializer with extensive tag support", "long_description": "Pure Python CBOR de-serializer with extensive tag support", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-cbor2"]}], "depends_on": []}, {"name": "py35-catalogue", "portdir": "python/py-catalogue", "version": "2.0.4", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://github.com/explosion/catalogue", "description": "Super lightweight function registries for your library", "long_description": "catalogue is a tiny, zero-dependencies library that makes it easy to add function (or object) registries to your code. Function registries are helpful when you have objects that need to be both easily serializable and fully customizable. Instead of passing a function into your object, you pass in an identifier name, which the object can use to lookup the function from the registry. This makes the object easy to serialize, because the name is a simple string. If you instead saved the function, you'd have to use Pickle for serialization, which has many drawbacks.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-importlib-metadata", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": []}, {"name": "py38-cbor2", "portdir": "python/py-cbor2", "version": "5.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/agronholm/cbor2", "description": "Pure Python CBOR de-serializer with extensive tag support", "long_description": "Pure Python CBOR de-serializer with extensive tag support", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools", "py38-setuptools_scm"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-zlmdb"]}, {"type": "run", "ports": ["py38-autobahn"]}]}, {"name": "py-catalogue", "portdir": "python/py-catalogue", "version": "2.0.4", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://github.com/explosion/catalogue", "description": "Super lightweight function registries for your library", "long_description": "catalogue is a tiny, zero-dependencies library that makes it easy to add function (or object) registries to your code. Function registries are helpful when you have objects that need to be both easily serializable and fully customizable. Instead of passing a function into your object, you pass in an identifier name, which the object can use to lookup the function from the registry. This makes the object easy to serialize, because the name is a simple string. If you instead saved the function, you'd have to use Pickle for serialization, which has many drawbacks.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-catalogue"]}], "depends_on": []}, {"name": "py39-sunpy", "portdir": "python/py-sunpy", "version": "3.1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://sunpy.org", "description": "SunPy is an open-source Python library for Solar Physics data analysis and visualization.", "long_description": "SunPy is an open-source Python library for Solar Physics data analysis and visualization.", "active": true, "categories": ["python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["asdf", "dask", "database", "image", "map", "net", "timeseries", "visualization", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-extension-helpers", "py39-setuptools_scm"]}, {"type": "lib", "ports": ["py39-dateutil", "py39-drms", "py39-numpy", "py39-parfive", "python39", "py39-sqlalchemy", "py39-tqdm", "py39-zeep", "py39-h5netcdf", "py39-scikit-image", "py39-astropy", "py39-beautifulsoup4"]}], "depends_on": [{"type": "lib", "ports": ["py-sunpy"]}]}, {"name": "py-cbor", "portdir": "python/py-cbor", "version": "1.0.0", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/bodhisnarkva/cbor", "description": "RFC 7049 Concise Binary Object Representation", "long_description": "RFC 7049 Concise Binary Object Representation", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-cbor"]}], "depends_on": []}, {"name": "py38-cbor", "portdir": "python/py-cbor", "version": "1.0.0", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/bodhisnarkva/cbor", "description": "RFC 7049 Concise Binary Object Representation", "long_description": "RFC 7049 Concise Binary Object Representation", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "run", "ports": ["py38-autobahn"]}]}, {"name": "py39-cbor", "portdir": "python/py-cbor", "version": "1.0.0", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/bodhisnarkva/cbor", "description": "RFC 7049 Concise Binary Object Representation", "long_description": "RFC 7049 Concise Binary Object Representation", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-cbor"]}, {"type": "run", "ports": ["py39-autobahn"]}]}, {"name": "py36-catalogue", "portdir": "python/py-catalogue", "version": "2.0.4", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://github.com/explosion/catalogue", "description": "Super lightweight function registries for your library", "long_description": "catalogue is a tiny, zero-dependencies library that makes it easy to add function (or object) registries to your code. Function registries are helpful when you have objects that need to be both easily serializable and fully customizable. Instead of passing a function into your object, you pass in an identifier name, which the object can use to lookup the function from the registry. This makes the object easy to serialize, because the name is a simple string. If you instead saved the function, you'd have to use Pickle for serialization, which has many drawbacks.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-importlib-metadata", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py36-spaCy"]}]}, {"name": "py37-catalogue", "portdir": "python/py-catalogue", "version": "2.0.4", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://github.com/explosion/catalogue", "description": "Super lightweight function registries for your library", "long_description": "catalogue is a tiny, zero-dependencies library that makes it easy to add function (or object) registries to your code. Function registries are helpful when you have objects that need to be both easily serializable and fully customizable. Instead of passing a function into your object, you pass in an identifier name, which the object can use to lookup the function from the registry. This makes the object easy to serialize, because the name is a simple string. If you instead saved the function, you'd have to use Pickle for serialization, which has many drawbacks.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-importlib-metadata", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py37-spaCy"]}]}, {"name": "py39-cbor2", "portdir": "python/py-cbor2", "version": "5.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/agronholm/cbor2", "description": "Pure Python CBOR de-serializer with extensive tag support", "long_description": "Pure Python CBOR de-serializer with extensive tag support", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools", "py39-setuptools_scm"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-cbor2"]}, {"type": "run", "ports": ["py39-autobahn"]}]}, {"name": "libnetpbm", "portdir": "graphics/netpbm", "version": "10.96.03", "license": "Permissive", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "http://netpbm.sourceforge.net/", "description": "Image manipulation", "long_description": "A whole bunch of utilities for primitive manipulation of graphic images. Wide array of converters from one graphics format to another, e.g. from g3 fax format to jpeg. Many basic graphics editing tools such as magnifying and cropping.", "active": true, "categories": ["graphics"], "maintainers": [{"name": "ryandesign", "github": "ryandesign", "ports_count": 1396}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": [{"type": "lib", "ports": ["gts", "netpbm"]}]}, {"name": "xorg-xcb-util-keysyms", "portdir": "x11/xorg-xcb-util-keysyms", "version": "0.4.0", "license": "X11", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://xcb.freedesktop.org/", "description": "X.org xcb-util-keysyms", "long_description": "Utility libraries for XCB", "active": true, "categories": ["devel", "x11"], "maintainers": [{"name": "jeremyhu", "github": "jeremyhu", "ports_count": 260}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["xorg-libxcb"]}], "depends_on": [{"type": "lib", "ports": ["awesome", "i3"]}]}, {"name": "py36-cairocffi", "portdir": "python/py-cairocffi", "version": "1.3.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Kozea/cairocffi", "description": "cairocffi is a CFFI-based drop-in replacement for Pycairo", "long_description": "cairocffi is a CFFI-based drop-in replacement for Pycairo", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-pytest-runner"]}, {"type": "lib", "ports": ["gdk-pixbuf2", "python36", "py36-cffi", "py36-setuptools", "libffi", "cairo"]}, {"type": "test", "ports": ["py36-numpy", "py36-pytest"]}], "depends_on": []}, {"name": "py-cchardet", "portdir": "python/py-cchardet", "version": "2.1.7", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyYoshi/cChardet", "description": "cChardet is high speed universal character encoding detector.", "long_description": "cChardet is high speed universal character encoding detector.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-cchardet"]}], "depends_on": []}, {"name": "py27-cchardet", "portdir": "python/py-cchardet", "version": "2.1.5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyYoshi/cChardet", "description": "cChardet is high speed universal character encoding detector.", "long_description": "cChardet is high speed universal character encoding detector.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py35-cchardet", "portdir": "python/py-cchardet", "version": "2.1.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyYoshi/cChardet", "description": "cChardet is high speed universal character encoding detector.", "long_description": "cChardet is high speed universal character encoding detector.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "paramagpy", "portdir": "science/paramagpy", "version": "1.0", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/henryorton/paramagpy", "description": "Calculate paramagnetic effects in NMR spectra of proteins", "long_description": "Calculate paramagnetic effects in NMR spectra of proteins", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["py39-numpy", "python39", "py39-biopython", "py39-scipy", "py39-matplotlib"]}], "depends_on": []}, {"name": "py-cdb", "portdir": "python/py-cdb", "version": "0.35", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/acg/python-cdb", "description": "python module for using the constant database package", "long_description": "The python-cdb extension module is an adaptation of D. J. Bernstein's constant database package (see https://cr.yp.to/cdb.html). The cdb files are mappings of keys to values, designed for wickedly fast lookups and atomic updates. This module mimics the normal cdb utilities, cdb(get|dump|make), via convenient, high-level Python objects.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-cdb"]}], "depends_on": []}, {"name": "py27-cdb", "portdir": "python/py-cdb", "version": "0.35", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/acg/python-cdb", "description": "python module for using the constant database package", "long_description": "The python-cdb extension module is an adaptation of D. J. Bernstein's constant database package (see https://cr.yp.to/cdb.html). The cdb files are mappings of keys to values, designed for wickedly fast lookups and atomic updates. This module mimics the normal cdb utilities, cdb(get|dump|make), via convenient, high-level Python objects.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-cdb"]}]}, {"name": "py-celery", "portdir": "python/py-celery", "version": "4.3.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://celeryproject.org/", "description": "Distributed Task Queue", "long_description": "Celery is an asynchronous task queue/job queue based on distributed message passing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-celery"]}], "depends_on": []}, {"name": "py27-celery", "portdir": "python/py-celery", "version": "4.3.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://celeryproject.org/", "description": "Distributed Task Queue", "long_description": "Celery is an asynchronous task queue/job queue based on distributed message passing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-billiard", "py27-kombu", "python27", "py27-tz", "py27-setuptools"]}, {"type": "run", "ports": ["celery_select"]}], "depends_on": []}, {"name": "py35-celery", "portdir": "python/py-celery", "version": "4.3.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://celeryproject.org/", "description": "Distributed Task Queue", "long_description": "Celery is an asynchronous task queue/job queue based on distributed message passing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py35-billiard", "py35-kombu", "python35", "py35-tz", "py35-setuptools"]}, {"type": "run", "ports": ["celery_select"]}], "depends_on": []}, {"name": "py36-celery", "portdir": "python/py-celery", "version": "4.3.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://celeryproject.org/", "description": "Distributed Task Queue", "long_description": "Celery is an asynchronous task queue/job queue based on distributed message passing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-billiard", "py36-kombu", "python36", "py36-tz", "py36-setuptools"]}, {"type": "run", "ports": ["celery_select"]}], "depends_on": []}, {"name": "py310-pep517", "portdir": "python/py-pep517", "version": "0.12.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pep517/", "description": "API to call PEP 517 hooks", "long_description": "API to call PEP 517 hooks", "active": true, "categories": ["python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py-bootstrap-modules"]}, {"type": "lib", "ports": ["python310", "py310-tomli"]}], "depends_on": [{"type": "build", "ports": ["py310-flit_core"]}, {"type": "lib", "ports": ["py310-build"]}]}, {"name": "py39-celery", "portdir": "python/py-celery", "version": "4.3.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://celeryproject.org/", "description": "Distributed Task Queue", "long_description": "Celery is an asynchronous task queue/job queue based on distributed message passing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-billiard", "py39-kombu", "python39", "py39-tz", "py39-setuptools"]}, {"type": "run", "ports": ["celery_select"]}], "depends_on": [{"type": "lib", "ports": ["py-celery"]}]}, {"name": "py36-filelock", "portdir": "python/py-filelock", "version": "3.3.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://filelock.readthedocs.io/en/latest/", "description": "A platform independent file lock", "long_description": "This package contains a single module, which implements a platform independent file lock in Python, which provides a simple way of inter-process communication:", "active": true, "categories": ["python"], "maintainers": [{"name": "funasoul", "github": "funasoul", "ports_count": 11}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py36-tldextract", "py36-virtualenv", "py36-tox"]}, {"type": "run", "ports": ["py36-cartopy"]}]}, {"name": "py35-filelock", "portdir": "python/py-filelock", "version": "3.3.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://filelock.readthedocs.io/en/latest/", "description": "A platform independent file lock", "long_description": "This package contains a single module, which implements a platform independent file lock in Python, which provides a simple way of inter-process communication:", "active": true, "categories": ["python"], "maintainers": [{"name": "funasoul", "github": "funasoul", "ports_count": 11}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py35-virtualenv", "py35-tox"]}, {"type": "run", "ports": ["py35-cartopy"]}]}, {"name": "treeline", "portdir": "office/treeline", "version": "3.1.4", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://treeline.bellz.org", "description": "Advanced outliner and personal information manager", "long_description": "Some would call TreeLine an Outliner, others would call it a PIM. Basically, it just stores almost any kind of information. A tree structure makes it easy to keep things organized. And each node in the tree can contain several fields, forming a mini-database. The output format for each node can be defined, and the output can be shown on the screen, printed, or exported to html.", "active": true, "categories": ["office", "python", "pim"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-pyqt5", "aspell", "aspell-dict-en"]}], "depends_on": []}, {"name": "py39-cchardet", "portdir": "python/py-cchardet", "version": "2.1.7", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyYoshi/cChardet", "description": "cChardet is high speed universal character encoding detector.", "long_description": "cChardet is high speed universal character encoding detector.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-cchardet", "py39-aiohttp"]}]}, {"name": "py37-filelock", "portdir": "python/py-filelock", "version": "3.3.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://filelock.readthedocs.io/en/latest/", "description": "A platform independent file lock", "long_description": "This package contains a single module, which implements a platform independent file lock in Python, which provides a simple way of inter-process communication:", "active": true, "categories": ["python"], "maintainers": [{"name": "funasoul", "github": "funasoul", "ports_count": 11}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "build", "ports": ["py37-theano-pymc"]}, {"type": "lib", "ports": ["py37-tldextract", "py37-virtualenv", "py37-tox"]}, {"type": "run", "ports": ["py37-cartopy", "py37-pytest-mypy"]}]}, {"name": "py-celementtree", "portdir": "python/py-celementtree", "version": "1.0.5-20051216", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://effbot.org/zone/celementtree.htm", "description": "C implementation of the ElementTree API, py-elementtree", "long_description": "The cElementTree module is a C implementation of the ElementTree API. On typical documents, it's 15-20 times faster than the Python version of ElementTree, and uses 2-5 times less memory.", "active": false, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py27-celementtree"]}], "depends_on": []}, {"name": "py27-celementtree", "portdir": "python/py-celementtree", "version": "1.0.5-20051216", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://effbot.org/zone/celementtree.htm", "description": "C implementation of the ElementTree API, py-elementtree", "long_description": "The cElementTree module is a C implementation of the ElementTree API. On typical documents, it's 15-20 times faster than the Python version of ElementTree, and uses 2-5 times less memory.", "active": false, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python27", "py27-elementtree"]}], "depends_on": [{"type": "lib", "ports": ["py-celementtree", "py27-kid"]}]}, {"name": "py37-cchardet", "portdir": "python/py-cchardet", "version": "2.1.7", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyYoshi/cChardet", "description": "cChardet is high speed universal character encoding detector.", "long_description": "cChardet is high speed universal character encoding detector.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-aiohttp"]}]}, {"name": "py38-cchardet", "portdir": "python/py-cchardet", "version": "2.1.7", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyYoshi/cChardet", "description": "cChardet is high speed universal character encoding detector.", "long_description": "cChardet is high speed universal character encoding detector.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-aiohttp"]}]}, {"name": "py-cfn-lint", "portdir": "python/py-cfn-lint", "version": "0.29.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aws-cloudformation/cfn-python-lint", "description": "Checks cloudformation for practices and behaviour that could potentially be improved", "long_description": "Checks cloudformation for practices and behaviour that could potentially be improved", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-cfn-lint"]}], "depends_on": []}, {"name": "py37-cfn-lint", "portdir": "python/py-cfn-lint", "version": "0.29.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aws-cloudformation/cfn-python-lint", "description": "Checks cloudformation for practices and behaviour that could potentially be improved", "long_description": "Checks cloudformation for practices and behaviour that could potentially be improved", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-setuptools", "python37"]}, {"type": "run", "ports": ["py37-jsonschema", "py37-six", "py37-yaml", "py37-requests", "py37-aws-sam-translator", "py37-jsonpatch"]}, {"type": "test", "ports": ["py37-mock", "py37-pytest"]}], "depends_on": []}, {"name": "py38-cfn-lint", "portdir": "python/py-cfn-lint", "version": "0.29.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aws-cloudformation/cfn-python-lint", "description": "Checks cloudformation for practices and behaviour that could potentially be improved", "long_description": "Checks cloudformation for practices and behaviour that could potentially be improved", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-setuptools", "python38"]}, {"type": "run", "ports": ["py38-jsonschema", "py38-six", "py38-yaml", "py38-requests", "py38-aws-sam-translator", "py38-jsonpatch"]}, {"type": "test", "ports": ["py38-mock", "py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-cfn-lint"]}]}]}