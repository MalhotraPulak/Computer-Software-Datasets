{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=302", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=300", "results": [{"name": "py39-nbclient", "portdir": "python/py-nbclient", "version": "0.5.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "Client library for programmatic Jupyter notebook execution.", "long_description": "Client library for programmatic Jupyter notebook execution.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["py39-jupyter_client", "py39-nbformat", "python39", "py39-traitlets", "py39-nest_asyncio", "py39-async_generator"]}], "depends_on": [{"type": "lib", "ports": ["py-nbclient", "py39-nbconvert"]}]}, {"name": "py-mx-experimental", "portdir": "python/py-mx-experimental", "version": "3.0.0", "license": "Permissive and GPLConflict and zlib", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.egenix.com/products/python/mxExperimental/", "description": "eGenix.com mx Extensions for Python - EXPERIMENTAL Package", "long_description": "The mx Extension Series is a collection of software packages which aims at providing professional quality add-ons for the Open Source Language Python. It consists of mxNumber (Extended Numeric Types), mxTidy (Interface to HTML Tidy), mxURL (URL Datatype) and mxUID (UID Datatype).", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-mx-experimental"]}], "depends_on": []}, {"name": "py27-mx-experimental", "portdir": "python/py-mx-experimental", "version": "3.0.0", "license": "Permissive and GPLConflict and zlib", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.egenix.com/products/python/mxExperimental/", "description": "eGenix.com mx Extensions for Python - EXPERIMENTAL Package", "long_description": "The mx Extension Series is a collection of software packages which aims at providing professional quality add-ons for the Open Source Language Python. It consists of mxNumber (Extended Numeric Types), mxTidy (Interface to HTML Tidy), mxURL (URL Datatype) and mxUID (UID Datatype).", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["gmp", "mpfr", "python27", "tidy"]}, {"type": "run", "ports": ["py27-mx-base"]}], "depends_on": [{"type": "lib", "ports": ["py-mx-experimental"]}]}, {"name": "py-myghty", "portdir": "python/py-myghty", "version": "1.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.myghty.org", "description": "Myghty is a Python based templating framework originally based on HTML::Mason.", "long_description": "Myghty fully implements Mason's templating language, component-based architecture, and caching system, and goes beyond, adding new paradigms such the Module Components controller paradigm, full Python whitespace syntax, threading support, WSGI support, session support, and much more.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-myghty"]}], "depends_on": []}, {"name": "py27-myghty", "portdir": "python/py-myghty", "version": "1.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.myghty.org", "description": "Myghty is a Python based templating framework originally based on HTML::Mason.", "long_description": "Myghty fully implements Mason's templating language, component-based architecture, and caching system, and goes beyond, adding new paradigms such the Module Components controller paradigm, full Python whitespace syntax, threading support, WSGI support, session support, and much more.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-myghty"]}]}, {"name": "py-myghtyutils", "portdir": "python/py-myghtyutils", "version": "0.52", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.myghty.org", "description": "Container and Utility Functions from the Myghty Template Framework.", "long_description": "Container and Utility Functions from the Myghty Template Framework.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py27-myghtyutils"]}], "depends_on": []}, {"name": "py27-myghtyutils", "portdir": "python/py-myghtyutils", "version": "0.52", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.myghty.org", "description": "Container and Utility Functions from the Myghty Template Framework.", "long_description": "Container and Utility Functions from the Myghty Template Framework.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-myghtyutils"]}]}, {"name": "py-mygpoclient", "portdir": "python/py-mygpoclient", "version": "1.8", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gpodder/mygpoclient", "description": "python module for interacting with my.gpodder.org web services", "long_description": "The mygpoclient library allows developers to utilize a Pythonic interface to the my.gpodder.org web services. It's mostly useful for the gpodder podcast client.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-mygpoclient"]}], "depends_on": []}, {"name": "py27-mygpoclient", "portdir": "python/py-mygpoclient", "version": "1.8", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gpodder/mygpoclient", "description": "python module for interacting with my.gpodder.org web services", "long_description": "The mygpoclient library allows developers to utilize a Pythonic interface to the my.gpodder.org web services. It's mostly useful for the gpodder podcast client.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-simplejson"]}], "depends_on": []}, {"name": "py36-mygpoclient", "portdir": "python/py-mygpoclient", "version": "1.8", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gpodder/mygpoclient", "description": "python module for interacting with my.gpodder.org web services", "long_description": "The mygpoclient library allows developers to utilize a Pythonic interface to the my.gpodder.org web services. It's mostly useful for the gpodder podcast client.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-simplejson"]}], "depends_on": []}, {"name": "py37-mygpoclient", "portdir": "python/py-mygpoclient", "version": "1.8", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gpodder/mygpoclient", "description": "python module for interacting with my.gpodder.org web services", "long_description": "The mygpoclient library allows developers to utilize a Pythonic interface to the my.gpodder.org web services. It's mostly useful for the gpodder podcast client.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-simplejson"]}], "depends_on": []}, {"name": "py38-python-lsp-black", "portdir": "python/py-python-lsp-black", "version": "1.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-lsp/python-lsp-black", "description": "Black plugin for python-lsp-server", "long_description": "Black plugin for python-lsp-server. Forked from pyls-black (https://github.com/rupert/pyls-black).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-black", "py38-setuptools", "py38-python-lsp-server"]}], "depends_on": [{"type": "run", "ports": ["py38-spyder-devel", "py38-spyder"]}]}, {"name": "py38-mygpoclient", "portdir": "python/py-mygpoclient", "version": "1.8", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gpodder/mygpoclient", "description": "python module for interacting with my.gpodder.org web services", "long_description": "The mygpoclient library allows developers to utilize a Pythonic interface to the my.gpodder.org web services. It's mostly useful for the gpodder podcast client.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-simplejson"]}], "depends_on": []}, {"name": "py39-mygpoclient", "portdir": "python/py-mygpoclient", "version": "1.8", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gpodder/mygpoclient", "description": "python module for interacting with my.gpodder.org web services", "long_description": "The mygpoclient library allows developers to utilize a Pythonic interface to the my.gpodder.org web services. It's mostly useful for the gpodder podcast client.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-simplejson"]}], "depends_on": [{"type": "lib", "ports": ["py-mygpoclient", "gpodder"]}]}, {"name": "py39-python-lsp-black", "portdir": "python/py-python-lsp-black", "version": "1.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-lsp/python-lsp-black", "description": "Black plugin for python-lsp-server", "long_description": "Black plugin for python-lsp-server. Forked from pyls-black (https://github.com/rupert/pyls-black).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-black", "py39-setuptools", "py39-python-lsp-server"]}], "depends_on": [{"type": "lib", "ports": ["py-python-lsp-black"]}, {"type": "run", "ports": ["py39-spyder-devel", "py39-spyder"]}]}, {"name": "py-mysql", "portdir": "python/py-mysql", "version": "1.2.3", "license": "(MIT or GPL-2+)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://sourceforge.net/projects/mysql-python/", "description": "Python interface to mysql", "long_description": "A package containing a Python module that allows you to connect to MySQL databases", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-mysql"]}], "depends_on": []}, {"name": "py-mypy_extensions", "portdir": "python/py-mypy_extensions", "version": "0.4.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python/mypy_extensions", "description": "Experimental type system extensions for programs checked with the mypy typechecker", "long_description": "The \u201cmypy_extensions\u201d module defines experimental extensions to the standard \u201ctyping\u201d module that are supported by the mypy typechecker.", "active": true, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-mypy_extensions"]}], "depends_on": []}, {"name": "py27-mysql", "portdir": "python/py-mysql", "version": "1.2.3", "license": "(MIT or GPL-2+)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://sourceforge.net/projects/mysql-python/", "description": "Python interface to mysql", "long_description": "A package containing a Python module that allows you to connect to MySQL databases", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [], "variants": ["mysql51", "mysql55", "mysql56", "mariadb55", "percona55", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["mariadb", "python27"]}], "depends_on": [{"type": "lib", "ports": ["mythtv-core.28", "py-mysql", "mythtv-core.27", "py27-torndb"]}]}, {"name": "py38-nbclassic", "portdir": "python/py-nbclassic", "version": "0.2.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "long_description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-jupyter_server", "py38-notebook", "py38-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py38-jupyterlab"]}]}, {"name": "py-nbclassic", "portdir": "python/py-nbclassic", "version": "0.2.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "long_description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-nbclassic"]}], "depends_on": []}, {"name": "py36-nbclassic", "portdir": "python/py-nbclassic", "version": "0.2.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "long_description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-jupyter_server", "py36-notebook", "py36-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py36-jupyterlab"]}]}, {"name": "py37-nbclassic", "portdir": "python/py-nbclassic", "version": "0.2.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "long_description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-jupyter_server", "py37-notebook", "py37-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py37-jupyterlab"]}]}, {"name": "py39-nbclassic", "portdir": "python/py-nbclassic", "version": "0.2.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "long_description": "NBClassic runs the Jupyter Notebook frontend on the Jupyter Server backend.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-jupyter_server", "py39-notebook", "py39-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py39-jupyterlab", "py-nbclassic"]}]}, {"name": "py-nbclient", "portdir": "python/py-nbclient", "version": "0.5.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "Client library for programmatic Jupyter notebook execution.", "long_description": "Client library for programmatic Jupyter notebook execution.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-nbclient"]}], "depends_on": []}, {"name": "py-natsort", "portdir": "python/py-natsort", "version": "8.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/SethMMorton/natsort", "description": "Natural sorting for Python", "long_description": "When you try to sort a list of strings that contain numbers, the normal Python sort algorithm sorts lexicographically, so you might not get the results that you expect. `natsort` provides a function `natsorted` that helps sort lists 'naturally', either as real numbers (i.e. signed/unsigned floats or ints), or as versions.", "active": true, "categories": ["python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-natsort"]}], "depends_on": []}, {"name": "py27-natsort", "portdir": "python/py-natsort", "version": "6.2.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/SethMMorton/natsort", "description": "Natural sorting for Python", "long_description": "When you try to sort a list of strings that contain numbers, the normal Python sort algorithm sorts lexicographically, so you might not get the results that you expect. `natsort` provides a function `natsorted` that helps sort lists 'naturally', either as real numbers (i.e. signed/unsigned floats or ints), or as versions.", "active": true, "categories": ["python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-setuptools"]}, {"type": "run", "ports": ["py27-pyicu"]}], "depends_on": []}, {"name": "py37-nbclient", "portdir": "python/py-nbclient", "version": "0.5.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "Client library for programmatic Jupyter notebook execution.", "long_description": "Client library for programmatic Jupyter notebook execution.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-jupyter_client", "py37-nbformat", "python37", "py37-traitlets", "py37-nest_asyncio", "py37-async_generator"]}], "depends_on": [{"type": "lib", "ports": ["py37-nbconvert"]}]}, {"name": "py36-natsort", "portdir": "python/py-natsort", "version": "8.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/SethMMorton/natsort", "description": "Natural sorting for Python", "long_description": "When you try to sort a list of strings that contain numbers, the normal Python sort algorithm sorts lexicographically, so you might not get the results that you expect. `natsort` provides a function `natsorted` that helps sort lists 'naturally', either as real numbers (i.e. signed/unsigned floats or ints), or as versions.", "active": true, "categories": ["python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-setuptools", "python36"]}, {"type": "run", "ports": ["py36-pyicu"]}, {"type": "test", "ports": ["py36-hypothesis", "py36-pytest", "py36-pytest-mock"]}], "depends_on": []}, {"name": "py38-nbclient", "portdir": "python/py-nbclient", "version": "0.5.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jupyter.org/", "description": "Client library for programmatic Jupyter notebook execution.", "long_description": "Client library for programmatic Jupyter notebook execution.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["py38-jupyter_client", "py38-nbformat", "python38", "py38-traitlets", "py38-nest_asyncio", "py38-async_generator"]}], "depends_on": [{"type": "lib", "ports": ["py38-nbconvert"]}]}, {"name": "py-mysqlclient", "portdir": "python/py-mysqlclient", "version": "2.0.3", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyMySQL/mysqlclient-python", "description": "Python3 interface to MySQL/MariaDB, fork of MySQL-python", "long_description": "Python3 interface to MySQL/MariaDB, fork of MySQL-python", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [{"name": "ctreleaven", "github": "ctreleaven", "ports_count": 35}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-mysqlclient"]}], "depends_on": []}, {"name": "py38-mysqlclient", "portdir": "python/py-mysqlclient", "version": "2.0.3", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyMySQL/mysqlclient-python", "description": "Python3 interface to MySQL/MariaDB, fork of MySQL-python", "long_description": "Python3 interface to MySQL/MariaDB, fork of MySQL-python", "active": true, "categories": ["devel", "databases", "python"], "maintainers": [{"name": "ctreleaven", "github": "ctreleaven", "ports_count": 35}], "variants": ["mariadb55", "mariadb10_2", "mariadb10_3", "mariadb10_4", "mariadb10_5", "mariadb10_6", "percona55", "universal", "mysql57", "mysql8"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["mariadb-10.2", "python38"]}], "depends_on": []}, {"name": "git-credential-gopass", "portdir": "security/git-credential-gopass", "version": "1.12.0", "license": "MIT", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://www.gopass.pw", "description": "Gopass git-credentials helper", "long_description": "Gopass git-credentials helper", "active": true, "categories": ["security"], "maintainers": [{"name": "sikmir", "github": "sikmir", "ports_count": 18}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "bs", "portdir": "games/bs", "version": "2.11", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.catb.org/~esr/bs/", "description": "ncurses version of Battleship", "long_description": "The classic game of Battleships against the computer. Uses character-cell graphics with a visual point-and-shoot interface. If you're using an xterm under Linux the mouse will work.", "active": true, "categories": ["games"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": []}, {"name": "py-nbval", "portdir": "python/py-nbval", "version": "0.9.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/computationalmodelling/nbval", "description": "A py.test plugin to validate Jupyter notebooks", "long_description": "The plugin adds functionality to py.test to recognise and collect Jupyter notebooks. The intended purpose of the tests is to determine whether execution of the stored inputs match the stored outputs of the .ipynb file. Whilst also ensuring that the notebooks are running without errors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-nbval"]}], "depends_on": []}, {"name": "py27-nbval", "portdir": "python/py-nbval", "version": "0.9.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/computationalmodelling/nbval", "description": "A py.test plugin to validate Jupyter notebooks", "long_description": "The plugin adds functionality to py.test to recognise and collect Jupyter notebooks. The intended purpose of the tests is to determine whether execution of the stored inputs match the stored outputs of the .ipynb file. Whilst also ensuring that the notebooks are running without errors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "run", "ports": ["py27-jupyter_client", "py27-nbformat", "py27-pytest", "py27-six", "py27-coverage", "py27-ipykernel"]}, {"type": "test", "ports": ["py27-matplotlib", "py27-pytest-cov", "py27-sympy"]}], "depends_on": []}, {"name": "py35-nbval", "portdir": "python/py-nbval", "version": "0.9.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/computationalmodelling/nbval", "description": "A py.test plugin to validate Jupyter notebooks", "long_description": "The plugin adds functionality to py.test to recognise and collect Jupyter notebooks. The intended purpose of the tests is to determine whether execution of the stored inputs match the stored outputs of the .ipynb file. Whilst also ensuring that the notebooks are running without errors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-jupyter_client", "py35-nbformat", "py35-pytest", "py35-six", "py35-coverage", "py35-ipykernel"]}, {"type": "test", "ports": ["py35-matplotlib", "py35-pytest-cov", "py35-sympy"]}], "depends_on": []}, {"name": "py36-nbval", "portdir": "python/py-nbval", "version": "0.9.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/computationalmodelling/nbval", "description": "A py.test plugin to validate Jupyter notebooks", "long_description": "The plugin adds functionality to py.test to recognise and collect Jupyter notebooks. The intended purpose of the tests is to determine whether execution of the stored inputs match the stored outputs of the .ipynb file. Whilst also ensuring that the notebooks are running without errors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-jupyter_client", "py36-nbformat", "py36-pytest", "py36-six", "py36-coverage", "py36-ipykernel"]}, {"type": "test", "ports": ["py36-matplotlib", "py36-pytest-cov", "py36-sympy"]}], "depends_on": []}, {"name": "py37-nbval", "portdir": "python/py-nbval", "version": "0.9.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/computationalmodelling/nbval", "description": "A py.test plugin to validate Jupyter notebooks", "long_description": "The plugin adds functionality to py.test to recognise and collect Jupyter notebooks. The intended purpose of the tests is to determine whether execution of the stored inputs match the stored outputs of the .ipynb file. Whilst also ensuring that the notebooks are running without errors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-jupyter_client", "py37-nbformat", "py37-pytest", "py37-six", "py37-coverage", "py37-ipykernel"]}, {"type": "test", "ports": ["py37-matplotlib", "py37-pytest-cov", "py37-sympy"]}], "depends_on": [{"type": "test", "ports": ["py37-onnx"]}]}, {"name": "py38-nbval", "portdir": "python/py-nbval", "version": "0.9.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/computationalmodelling/nbval", "description": "A py.test plugin to validate Jupyter notebooks", "long_description": "The plugin adds functionality to py.test to recognise and collect Jupyter notebooks. The intended purpose of the tests is to determine whether execution of the stored inputs match the stored outputs of the .ipynb file. Whilst also ensuring that the notebooks are running without errors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-jupyter_client", "py38-nbformat", "py38-pytest", "py38-six", "py38-coverage", "py38-ipykernel"]}, {"type": "test", "ports": ["py38-matplotlib", "py38-pytest-cov", "py38-sympy"]}], "depends_on": [{"type": "test", "ports": ["py38-onnx"]}]}, {"name": "py39-nbval", "portdir": "python/py-nbval", "version": "0.9.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/computationalmodelling/nbval", "description": "A py.test plugin to validate Jupyter notebooks", "long_description": "The plugin adds functionality to py.test to recognise and collect Jupyter notebooks. The intended purpose of the tests is to determine whether execution of the stored inputs match the stored outputs of the .ipynb file. Whilst also ensuring that the notebooks are running without errors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-jupyter_client", "py39-nbformat", "py39-pytest", "py39-six", "py39-coverage", "py39-ipykernel"]}, {"type": "test", "ports": ["py39-matplotlib", "py39-pytest-cov", "py39-sympy"]}], "depends_on": [{"type": "lib", "ports": ["py-nbval"]}, {"type": "test", "ports": ["py39-onnx"]}]}, {"name": "py-nbxmpp", "portdir": "python/py-nbxmpp", "version": "0.6.10", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://dev.gajim.org/gajim/python-nbxmpp", "description": "Non blocking Jabber/XMPP module", "long_description": "The goal of this python library is to provide a way for python applications to use Jabber/XMPP networks in a non-blocking way. Originally, a fork of the xmpppy jabber python library.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-nbxmpp"]}], "depends_on": []}, {"name": "py27-nbxmpp", "portdir": "python/py-nbxmpp", "version": "0.6.10", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://dev.gajim.org/gajim/python-nbxmpp", "description": "Non blocking Jabber/XMPP module", "long_description": "The goal of this python library is to provide a way for python applications to use Jabber/XMPP networks in a non-blocking way. Originally, a fork of the xmpppy jabber python library.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["gajim"]}]}, {"name": "py37-nbxmpp", "portdir": "python/py-nbxmpp", "version": "0.6.10", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://dev.gajim.org/gajim/python-nbxmpp", "description": "Non blocking Jabber/XMPP module", "long_description": "The goal of this python library is to provide a way for python applications to use Jabber/XMPP networks in a non-blocking way. Originally, a fork of the xmpppy jabber python library.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py38-upt-cpan", "portdir": "python/py-upt-cpan", "version": "0.6.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://framagit.org/upt/upt-cpan", "description": "CPAN frontend for upt", "long_description": "CPAN frontend for upt", "active": true, "categories": ["python"], "maintainers": [{"name": "karan.sheth", "github": "korusuke", "ports_count": 29}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-requests"]}, {"type": "test", "ports": ["py38-requests-mock"]}], "depends_on": []}, {"name": "qbs", "portdir": "devel/qbs", "version": "1.20.1", "license": "LGPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://wiki.qt.io/Qbs", "description": "build tool that helps simplify the build process for developing projects across multiple platforms.", "long_description": "qbs is build tool that helps simplify the build process for developing projects across multiple platforms.", "active": true, "categories": ["devel"], "maintainers": [{"name": "joerg.bornemann", "github": "jobor", "ports_count": 2}], "variants": ["debug"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["qt5-qtbase", "qt5-qtscript"]}], "depends_on": [{"type": "lib", "ports": ["qt5-qtcreator"]}, {"type": "run", "ports": ["qbs-docs"]}]}, {"name": "duckdb", "portdir": "databases/duckdb", "version": "0.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.duckdb.org", "description": "DuckDB is an embeddable SQL OLAP Database Management System", "long_description": "DuckDB is an embedded database designed to execute analytical SQL queries fast while embedded in another process. It is designed to be easy to install and easy to use. DuckDB has no external dependencies. DuckDB has bindings for C/C++, Python and R. DuckDB is developed by the Database Architectures group of the CWI.", "active": true, "categories": ["databases"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["zstd", "cmake", "openssl", "pkgconfig", "clang-9.0"]}, {"type": "fetch", "ports": ["git"]}], "depends_on": []}, {"name": "py38-nbxmpp", "portdir": "python/py-nbxmpp", "version": "0.6.10", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://dev.gajim.org/gajim/python-nbxmpp", "description": "Non blocking Jabber/XMPP module", "long_description": "The goal of this python library is to provide a way for python applications to use Jabber/XMPP networks in a non-blocking way. Originally, a fork of the xmpppy jabber python library.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": []}, {"name": "py39-nbxmpp", "portdir": "python/py-nbxmpp", "version": "0.6.10", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://dev.gajim.org/gajim/python-nbxmpp", "description": "Non blocking Jabber/XMPP module", "long_description": "The goal of this python library is to provide a way for python applications to use Jabber/XMPP networks in a non-blocking way. Originally, a fork of the xmpppy jabber python library.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-nbxmpp"]}]}, {"name": "py-nclib", "portdir": "python/py-nclib", "version": "0.8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nclib.readthedocs.io/", "description": "A Python socket library that wants to be your friend", "long_description": "nclib provides easy-to-use interfaces for connecting to and listening on TCP and UDP sockets, a better socket class (the Netcat object), mechanisms to launch processes with their input/output streams connected to sockets, TCP and UDP server classes for writing simple Python daemons and a script to easily daemonize command-line programs.", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "f30", "github": "F30", "ports_count": 10}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-nclib"]}], "depends_on": []}, {"name": "py27-nclib", "portdir": "python/py-nclib", "version": "0.8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nclib.readthedocs.io/", "description": "A Python socket library that wants to be your friend", "long_description": "nclib provides easy-to-use interfaces for connecting to and listening on TCP and UDP sockets, a better socket class (the Netcat object), mechanisms to launch processes with their input/output streams connected to sockets, TCP and UDP server classes for writing simple Python daemons and a script to easily daemonize command-line programs.", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "f30", "github": "F30", "ports_count": 10}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}]}