{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=359", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=357", "results": [{"name": "py27-yum-metadata-parser", "portdir": "python/py-yum-metadata-parser", "version": "1.1.4", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://yum.baseurl.org/", "description": "Yum metadata parser", "long_description": "C-based metadata parser to quickly parse xml metadata into sqlite databases", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["sqlite3", "glib2", "python27", "libxml2"]}], "depends_on": [{"type": "lib", "ports": ["py-yum-metadata-parser", "yum"]}, {"type": "run", "ports": ["createrepo"]}]}, {"name": "py-zc-buildout", "portdir": "python/py-zc-buildout", "version": "2.13.3", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.buildout.org", "description": "System for managing development buildouts", "long_description": "The Buildout project provides support for creating applications, especially Python applications. It provides tools for assembling applications from multiple parts, Python or otherwise. An application may actually contain multiple programs, processes, and configuration settings.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-zc-buildout"]}], "depends_on": []}, {"name": "py27-zc-buildout", "portdir": "python/py-zc-buildout", "version": "2.13.3", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.buildout.org", "description": "System for managing development buildouts", "long_description": "The Buildout project provides support for creating applications, especially Python applications. It provides tools for assembling applications from multiple parts, Python or otherwise. An application may actually contain multiple programs, processes, and configuration settings.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-setuptools"]}, {"type": "run", "ports": ["buildout_select"]}], "depends_on": [{"type": "lib", "ports": ["py-zc-buildout"]}]}, {"name": "py-zc-lockfile", "portdir": "python/py-zc-lockfile", "version": "2.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zc.lockfile", "description": "Basic inter-process locks", "long_description": "The zc.lockfile package provides a basic portable implementation of interprocess locks using lock files. The purpose if not specifically to lock files, but to simply provide locks with an implementation based on file-locking primitives. Of course, these locks could be used to mediate access to other files. For example, the ZODB file storage implementation uses file locks to mediate access to file-storage database files. The database files and lock file files are separate files.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-zc-lockfile"]}], "depends_on": []}, {"name": "pydocstyle_select", "portdir": "python/pydocstyle_select", "version": "0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.macports.org/", "description": "common files for selecting default pydocstyle version", "long_description": "This port installs files that allow 'port select' to be used to create links to the preferred default version of pydocstyle.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": [{"type": "run", "ports": ["py27-docstyle", "py35-docstyle", "py36-docstyle", "py37-docstyle", "py38-docstyle", "py39-docstyle", "py310-docstyle"]}]}, {"name": "py27-zc-lockfile", "portdir": "python/py-zc-lockfile", "version": "2.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zc.lockfile", "description": "Basic inter-process locks", "long_description": "The zc.lockfile package provides a basic portable implementation of interprocess locks using lock files. The purpose if not specifically to lock files, but to simply provide locks with an implementation based on file-locking primitives. Of course, these locks could be used to mediate access to other files. For example, the ZODB file storage implementation uses file locks to mediate access to file-storage database files. The database files and lock file files are separate files.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-cherrypy", "py27-zodb"]}]}, {"name": "py35-zc-lockfile", "portdir": "python/py-zc-lockfile", "version": "2.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zc.lockfile", "description": "Basic inter-process locks", "long_description": "The zc.lockfile package provides a basic portable implementation of interprocess locks using lock files. The purpose if not specifically to lock files, but to simply provide locks with an implementation based on file-locking primitives. Of course, these locks could be used to mediate access to other files. For example, the ZODB file storage implementation uses file locks to mediate access to file-storage database files. The database files and lock file files are separate files.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": [{"type": "lib", "ports": ["py35-cherrypy"]}]}, {"name": "py36-zc-lockfile", "portdir": "python/py-zc-lockfile", "version": "2.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zc.lockfile", "description": "Basic inter-process locks", "long_description": "The zc.lockfile package provides a basic portable implementation of interprocess locks using lock files. The purpose if not specifically to lock files, but to simply provide locks with an implementation based on file-locking primitives. Of course, these locks could be used to mediate access to other files. For example, the ZODB file storage implementation uses file locks to mediate access to file-storage database files. The database files and lock file files are separate files.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-cherrypy"]}]}, {"name": "py37-zc-lockfile", "portdir": "python/py-zc-lockfile", "version": "2.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zc.lockfile", "description": "Basic inter-process locks", "long_description": "The zc.lockfile package provides a basic portable implementation of interprocess locks using lock files. The purpose if not specifically to lock files, but to simply provide locks with an implementation based on file-locking primitives. Of course, these locks could be used to mediate access to other files. For example, the ZODB file storage implementation uses file locks to mediate access to file-storage database files. The database files and lock file files are separate files.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-cherrypy"]}]}, {"name": "py310-pycares", "portdir": "python/py-pycares", "version": "4.1.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/saghul/pycares", "description": "Python interface for c-ares.", "long_description": "pycares is a Python module which provides an interface to c-ares. c-ares is a C library that performs DNS requests and name resolutions asynchronously.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "miguel", "github": "ipglider", "ports_count": 59}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools"]}, {"type": "lib", "ports": ["python310", "py310-cffi"]}], "depends_on": [{"type": "run", "ports": ["py310-aiodns"]}]}, {"name": "py38-zc-lockfile", "portdir": "python/py-zc-lockfile", "version": "2.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zc.lockfile", "description": "Basic inter-process locks", "long_description": "The zc.lockfile package provides a basic portable implementation of interprocess locks using lock files. The purpose if not specifically to lock files, but to simply provide locks with an implementation based on file-locking primitives. Of course, these locks could be used to mediate access to other files. For example, the ZODB file storage implementation uses file locks to mediate access to file-storage database files. The database files and lock file files are separate files.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-cherrypy", "py-zc-lockfile"]}]}, {"name": "py-zconfig", "portdir": "python/py-zconfig", "version": "3.5.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/ZConfig/", "description": "Configuration library for configuration-intensive applications", "long_description": "ZConfig is a configuration library intended for general use. It supports a hierarchical schema-driven configuration model that allows a schema to specify data conversion routines written in Python. ZConfig's model is very different from the model supported by the ConfigParser module found in Python's standard library, and is more suitable to configuration-intensive applications.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-zconfig"]}], "depends_on": []}, {"name": "py27-zconfig", "portdir": "python/py-zconfig", "version": "3.5.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/ZConfig/", "description": "Configuration library for configuration-intensive applications", "long_description": "ZConfig is a configuration library intended for general use. It supports a hierarchical schema-driven configuration model that allows a schema to specify data conversion routines written in Python. ZConfig's model is very different from the model supported by the ConfigParser module found in Python's standard library, and is more suitable to configuration-intensive applications.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["splatd", "py27-zdaemon", "py27-zodb"]}]}, {"name": "py37-zconfig", "portdir": "python/py-zconfig", "version": "3.5.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/ZConfig/", "description": "Configuration library for configuration-intensive applications", "long_description": "ZConfig is a configuration library intended for general use. It supports a hierarchical schema-driven configuration model that allows a schema to specify data conversion routines written in Python. ZConfig's model is very different from the model supported by the ConfigParser module found in Python's standard library, and is more suitable to configuration-intensive applications.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py-zconfig", "py37-zdaemon"]}]}, {"name": "py-zdaemon", "portdir": "python/py-zdaemon", "version": "4.3", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zdaemon", "description": "Daemon process control library and tools for Unix-based systems", "long_description": "zdaemon is a Python package which provides APIs for managing applications run as daemons. Its principal use to date has been to manage the application server and storage server daemons for Zope / ZEO, although it is not limited to running Python-based applications.", "active": true, "categories": ["sysutils", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-zdaemon"]}], "depends_on": []}, {"name": "py27-zdaemon", "portdir": "python/py-zdaemon", "version": "4.3", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zdaemon", "description": "Daemon process control library and tools for Unix-based systems", "long_description": "zdaemon is a Python package which provides APIs for managing applications run as daemons. Its principal use to date has been to manage the application server and storage server daemons for Zope / ZEO, although it is not limited to running Python-based applications.", "active": true, "categories": ["sysutils", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-setuptools", "py27-zconfig"]}], "depends_on": [{"type": "lib", "ports": ["py27-zodb"]}]}, {"name": "py37-zdaemon", "portdir": "python/py-zdaemon", "version": "4.3", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/zopefoundation/zdaemon", "description": "Daemon process control library and tools for Unix-based systems", "long_description": "zdaemon is a Python package which provides APIs for managing applications run as daemons. Its principal use to date has been to manage the application server and storage server daemons for Zope / ZEO, although it is not limited to running Python-based applications.", "active": true, "categories": ["sysutils", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools", "py37-zconfig"]}], "depends_on": [{"type": "lib", "ports": ["py-zdaemon"]}]}, {"name": "py-zen", "portdir": "python/py-zen", "version": "0.3.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/coderanger/pyzen", "description": "continuous test runner for paranoid developers", "long_description": "PyZen is a continuous test runner for paranoid developers. As long as the script is running, it will monitor for changes in your code and re-run your test suite when needed. There are frontends for multiple frameworks as well as several notification UIs.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-zen"]}], "depends_on": []}, {"name": "py27-zen", "portdir": "python/py-zen", "version": "0.3.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/coderanger/pyzen", "description": "continuous test runner for paranoid developers", "long_description": "PyZen is a continuous test runner for paranoid developers. As long as the script is running, it will monitor for changes in your code and re-run your test suite when needed. There are frontends for multiple frameworks as well as several notification UIs.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-setuptools"]}], "depends_on": []}, {"name": "py35-zen", "portdir": "python/py-zen", "version": "0.3.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/coderanger/pyzen", "description": "continuous test runner for paranoid developers", "long_description": "PyZen is a continuous test runner for paranoid developers. As long as the script is running, it will monitor for changes in your code and re-run your test suite when needed. There are frontends for multiple frameworks as well as several notification UIs.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35", "py35-setuptools"]}], "depends_on": []}, {"name": "py36-zen", "portdir": "python/py-zen", "version": "0.3.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/coderanger/pyzen", "description": "continuous test runner for paranoid developers", "long_description": "PyZen is a continuous test runner for paranoid developers. As long as the script is running, it will monitor for changes in your code and re-run your test suite when needed. There are frontends for multiple frameworks as well as several notification UIs.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py-zen"]}]}, {"name": "py-zeroc-ice33", "portdir": "python/py-zeroc-ice33", "version": "3.3.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.zeroc.com/", "description": "Fast, object-oriented RPC for C++, Java, Python, Ruby, PHP", "long_description": "The Internet Communications Engine (Ice) is a modern alternative to object middleware such as CORBA or COM/DCOM/COM+, with support for C++, C#, Java, PHP, Python, Ruby and Visual Basic. Ice consists of the following packages. Slice: The Specification Language for Ice. Slice establishes a contract between clients and servers, and is also used to describe persistent data. Slice Compilers: Slice specifications are compiled into various programming languages. Ice supports C++, Java, C#, Visual Basic, PHP, Python and Ruby. Ice clients and servers work together, regardless of the programming language. Ice: The Ice core library manages all the communication tasks using a highly efficient protocol (including protocol compression and support for both TCP and UDP), provides a flexible thread pool for multi-threaded servers. This Port provides the Python bindings that sit on top of the C++ Ice C++ runtime libraries.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-zeroc-ice33"]}], "depends_on": []}, {"name": "py27-zeroc-ice33", "portdir": "python/py-zeroc-ice33", "version": "3.3.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.zeroc.com/", "description": "Fast, object-oriented RPC for C++, Java, Python, Ruby, PHP", "long_description": "The Internet Communications Engine (Ice) is a modern alternative to object middleware such as CORBA or COM/DCOM/COM+, with support for C++, C#, Java, PHP, Python, Ruby and Visual Basic. Ice consists of the following packages. Slice: The Specification Language for Ice. Slice establishes a contract between clients and servers, and is also used to describe persistent data. Slice Compilers: Slice specifications are compiled into various programming languages. Ice supports C++, Java, C#, Visual Basic, PHP, Python and Ruby. Ice clients and servers work together, regardless of the programming language. Ice: The Ice core library manages all the communication tasks using a highly efficient protocol (including protocol compression and support for both TCP and UDP), provides a flexible thread pool for multi-threaded servers. This Port provides the Python bindings that sit on top of the C++ Ice C++ runtime libraries.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["demo_source_code", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["zeroc-ice33", "python27"]}], "depends_on": [{"type": "lib", "ports": ["py-zeroc-ice33"]}]}, {"name": "py-zeroc-ice34", "portdir": "python/py-zeroc-ice34", "version": "3.4.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.zeroc.com/", "description": "Fast, object-oriented RPC for C++, Java, Python, Ruby, PHP", "long_description": "The Internet Communications Engine (Ice) is a modern alternative to object middleware such as CORBA or COM/DCOM/COM+, with support for C++, C#, Java, PHP, Python, Ruby and Visual Basic. Ice consists of the following packages. Slice: The Specification Language for Ice. Slice establishes a contract between clients and servers, and is also used to describe persistent data. Slice Compilers: Slice specifications are compiled into various programming languages. Ice supports C++, Java, C#, Visual Basic, PHP, Python and Ruby. Ice clients and servers work together, regardless of the programming language. Ice: The Ice core library manages all the communication tasks using a highly efficient protocol (including protocol compression and support for both TCP and UDP), provides a flexible thread pool for multi-threaded servers. This Port provides the Python bindings that sit on top of the C++ Ice C++ runtime libraries.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-zeroc-ice34"]}], "depends_on": []}, {"name": "py27-zeroc-ice34", "portdir": "python/py-zeroc-ice34", "version": "3.4.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.zeroc.com/", "description": "Fast, object-oriented RPC for C++, Java, Python, Ruby, PHP", "long_description": "The Internet Communications Engine (Ice) is a modern alternative to object middleware such as CORBA or COM/DCOM/COM+, with support for C++, C#, Java, PHP, Python, Ruby and Visual Basic. Ice consists of the following packages. Slice: The Specification Language for Ice. Slice establishes a contract between clients and servers, and is also used to describe persistent data. Slice Compilers: Slice specifications are compiled into various programming languages. Ice supports C++, Java, C#, Visual Basic, PHP, Python and Ruby. Ice clients and servers work together, regardless of the programming language. Ice: The Ice core library manages all the communication tasks using a highly efficient protocol (including protocol compression and support for both TCP and UDP), provides a flexible thread pool for multi-threaded servers. This Port provides the Python bindings that sit on top of the C++ Ice C++ runtime libraries.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["demo_source_code", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["zeroc-ice34", "python27"]}], "depends_on": [{"type": "lib", "ports": ["py-zeroc-ice34"]}]}, {"name": "py-zeroc-ice35", "portdir": "python/py-zeroc-ice35", "version": "3.5.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.zeroc.com/", "description": "Fast, object-oriented RPC for C++, Java, Python, Ruby, PHP", "long_description": "The Internet Communications Engine (Ice) is a modern alternative to object middleware such as CORBA or COM/DCOM/COM+, with support for C++, C#, Java, PHP, Python, Ruby and Visual Basic. Ice consists of the following packages. Slice: The Specification Language for Ice. Slice establishes a contract between clients and servers, and is also used to describe persistent data. Slice Compilers: Slice specifications are compiled into various programming languages. Ice supports C++, Java, C#, Visual Basic, PHP, Python and Ruby. Ice clients and servers work together, regardless of the programming language. Ice: The Ice core library manages all the communication tasks using a highly efficient protocol (including protocol compression and support for both TCP and UDP), provides a flexible thread pool for multi-threaded servers. This Port provides the Python bindings that sit on top of the C++ Ice C++ runtime libraries.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-zeroc-ice35"]}], "depends_on": []}, {"name": "py-zlmdb", "portdir": "python/py-zlmdb", "version": "20.8.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/crossbario/zlmdb", "description": "Object relational zero copy in memory database layer for LMDB.", "long_description": "Object relational zero copy in memory database layer for LMDB.", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-zlmdb"]}], "depends_on": []}, {"name": "py38-zlmdb", "portdir": "python/py-zlmdb", "version": "20.8.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/crossbario/zlmdb", "description": "Object relational zero copy in memory database layer for LMDB.", "long_description": "Object relational zero copy in memory database layer for LMDB.", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-pytest-runner", "py38-setuptools"]}, {"type": "lib", "ports": ["py38-lmdb", "py38-numpy", "python38", "py38-txaio", "py38-yaml", "py38-pynacl", "py38-cbor2", "py38-click"]}], "depends_on": [{"type": "lib", "ports": ["py-zlmdb"]}]}, {"name": "py27-zope-deprecation", "portdir": "python/py-zope-deprecation", "version": "4.4.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/zope.deprecation", "description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "long_description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "active": true, "categories": ["python", "zope"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-setuptools"]}], "depends_on": []}, {"name": "pytest_select", "portdir": "python/pytest_select", "version": "0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.macports.org/", "description": "Common files for selecting default pytest version", "long_description": "This port installs files that allow 'port select' to be used to create links to the preferred default version of 'pytest'.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": [{"type": "run", "ports": ["py27-pytest", "py35-pytest", "py36-pytest", "py37-pytest", "py38-pytest", "py39-pytest", "py310-pytest"]}]}, {"name": "py27-zeroc-ice35", "portdir": "python/py-zeroc-ice35", "version": "3.5.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.zeroc.com/", "description": "Fast, object-oriented RPC for C++, Java, Python, Ruby, PHP", "long_description": "The Internet Communications Engine (Ice) is a modern alternative to object middleware such as CORBA or COM/DCOM/COM+, with support for C++, C#, Java, PHP, Python, Ruby and Visual Basic. Ice consists of the following packages. Slice: The Specification Language for Ice. Slice establishes a contract between clients and servers, and is also used to describe persistent data. Slice Compilers: Slice specifications are compiled into various programming languages. Ice supports C++, Java, C#, Visual Basic, PHP, Python and Ruby. Ice clients and servers work together, regardless of the programming language. Ice: The Ice core library manages all the communication tasks using a highly efficient protocol (including protocol compression and support for both TCP and UDP), provides a flexible thread pool for multi-threaded servers. This Port provides the Python bindings that sit on top of the C++ Ice C++ runtime libraries.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["demo_source_code", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["zeroc-ice35", "python27"]}], "depends_on": [{"type": "lib", "ports": ["py-zeroc-ice35"]}]}, {"name": "py-zict", "portdir": "python/py-zict", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/mrocklin/zict/", "description": "Mutable mapping tools.", "long_description": "Mutable mapping tools.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-zict"]}], "depends_on": []}, {"name": "py27-zict", "portdir": "python/py-zict", "version": "1.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/mrocklin/zict/", "description": "Mutable mapping tools.", "long_description": "Mutable mapping tools.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-heapdict"]}], "depends_on": [{"type": "lib", "ports": ["py27-distributed"]}]}, {"name": "py35-zict", "portdir": "python/py-zict", "version": "1.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/mrocklin/zict/", "description": "Mutable mapping tools.", "long_description": "Mutable mapping tools.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-heapdict"]}], "depends_on": [{"type": "lib", "ports": ["py35-distributed"]}]}, {"name": "py36-zict", "portdir": "python/py-zict", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/mrocklin/zict/", "description": "Mutable mapping tools.", "long_description": "Mutable mapping tools.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-heapdict"]}], "depends_on": [{"type": "lib", "ports": ["py36-distributed"]}]}, {"name": "py37-zict", "portdir": "python/py-zict", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/mrocklin/zict/", "description": "Mutable mapping tools.", "long_description": "Mutable mapping tools.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-heapdict"]}], "depends_on": [{"type": "lib", "ports": ["py37-distributed"]}]}, {"name": "py38-zict", "portdir": "python/py-zict", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/mrocklin/zict/", "description": "Mutable mapping tools.", "long_description": "Mutable mapping tools.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-heapdict"]}], "depends_on": [{"type": "lib", "ports": ["py38-distributed"]}]}, {"name": "py39-zict", "portdir": "python/py-zict", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/mrocklin/zict/", "description": "Mutable mapping tools.", "long_description": "Mutable mapping tools.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-heapdict"]}], "depends_on": [{"type": "lib", "ports": ["py-zict", "py39-distributed"]}]}, {"name": "py-zodb", "portdir": "python/py-zodb", "version": "3.10.5", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.zodb.org/", "description": "Zope Object Database: object database and persistence", "long_description": "The Zope Object Database provides an object-oriented database for Python that provides a high-degree of transparency. Applications can take advantage of object database features with few, if any, changes to application logic. ZODB includes features such as a plugable storage interface, rich transaction support, and undo.", "active": true, "categories": ["databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-zodb"]}], "depends_on": []}, {"name": "py27-zodb", "portdir": "python/py-zodb", "version": "3.10.5", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.zodb.org/", "description": "Zope Object Database: object database and persistence", "long_description": "The Zope Object Database provides an object-oriented database for Python that provides a high-degree of transparency. Applications can take advantage of object database features with few, if any, changes to application logic. ZODB includes features such as a plugable storage interface, rich transaction support, and undo.", "active": true, "categories": ["databases", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-zconfig", "py27-zdaemon", "py27-transaction", "py27-zopeinterface", "py27-zope-event", "py27-zc-lockfile"]}], "depends_on": [{"type": "lib", "ports": ["py-zodb"]}]}, {"name": "py-zope-app-module", "portdir": "python/py-zope-app-module", "version": "3.5.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/zope.app.module", "description": "Zope 3 persistent code/module support", "long_description": "Persistent Python modules allow us to develop and store Python modules in the ZODB in contrast to storing them on the filesystem. You might want to look at the zodbcode package for the details of the implementation. In Zope 3 we implemented persistent modules as utilities. These utilities are known as module managers that manage the source code, compiled module and name of the module. We then provide a special module registry that looks up the utilities to find modules.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-zope-app-module"]}], "depends_on": []}, {"name": "py27-zope-app-module", "portdir": "python/py-zope-app-module", "version": "3.5.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/zope.app.module", "description": "Zope 3 persistent code/module support", "long_description": "Persistent Python modules allow us to develop and store Python modules in the ZODB in contrast to storing them on the filesystem. You might want to look at the zodbcode package for the details of the implementation. In Zope 3 we implemented persistent modules as utilities. These utilities are known as module managers that manage the source code, compiled module and name of the module. We then provide a special module registry that looks up the utilities to find modules.", "active": true, "categories": ["python", "zope"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-zope-app-module"]}]}, {"name": "py27-zipp", "portdir": "python/py-zipp", "version": "1.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/jaraco/zipp", "description": "A pathlib-compatible Zipfile object wrapper.", "long_description": "A pathlib-compatible Zipfile object wrapper.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools", "py27-setuptools_scm"]}, {"type": "lib", "ports": ["python27", "py27-contextlib2"]}], "depends_on": [{"type": "lib", "ports": ["py27-importlib-metadata", "py27-importlib-resources"]}]}, {"name": "py34-zipp", "portdir": "python/py-zipp", "version": "1.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/jaraco/zipp", "description": "A pathlib-compatible Zipfile object wrapper.", "long_description": "A pathlib-compatible Zipfile object wrapper.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py34-setuptools", "py34-setuptools_scm"]}, {"type": "lib", "ports": ["python34"]}], "depends_on": [{"type": "lib", "ports": ["py34-importlib-metadata", "py34-importlib-resources"]}]}, {"name": "py35-zipp", "portdir": "python/py-zipp", "version": "1.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/jaraco/zipp", "description": "A pathlib-compatible Zipfile object wrapper.", "long_description": "A pathlib-compatible Zipfile object wrapper.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools", "py35-setuptools_scm"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": [{"type": "lib", "ports": ["py35-importlib-metadata", "py35-importlib-resources"]}]}, {"name": "py36-zipp", "portdir": "python/py-zipp", "version": "3.6.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/jaraco/zipp", "description": "A pathlib-compatible Zipfile object wrapper.", "long_description": "A pathlib-compatible Zipfile object wrapper.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools", "py36-setuptools_scm", "py-bootstrap-modules"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-pep517", "py36-importlib-metadata", "py36-importlib-resources"]}]}, {"name": "py-zope-deprecation", "portdir": "python/py-zope-deprecation", "version": "4.4.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/zope.deprecation", "description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "long_description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "active": true, "categories": ["python", "zope"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-zope-deprecation"]}], "depends_on": []}, {"name": "py36-zope-deprecation", "portdir": "python/py-zope-deprecation", "version": "4.4.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/zope.deprecation", "description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "long_description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "active": true, "categories": ["python", "zope"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-setuptools"]}], "depends_on": []}, {"name": "py37-zope-deprecation", "portdir": "python/py-zope-deprecation", "version": "4.4.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/zope.deprecation", "description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "long_description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "active": true, "categories": ["python", "zope"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}], "depends_on": []}, {"name": "py38-zope-deprecation", "portdir": "python/py-zope-deprecation", "version": "4.4.0", "license": "ZPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/zope.deprecation", "description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "long_description": "This package provides a simple function called deprecated(names, reason) to mark deprecated modules, classes, functions, methods and properties.", "active": true, "categories": ["python", "zope"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-setuptools"]}], "depends_on": []}]}