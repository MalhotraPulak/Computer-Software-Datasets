{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=586", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=584", "results": [{"name": "smlnj", "portdir": "lang/smlnj", "version": "110.99.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.smlnj.org/", "description": "Standard ML of New Jersey", "long_description": "Standard ML of New Jersey (abbreviated SML/NJ) is a compiler for the Standard ML '97 programming language with associated libraries, tools, and documentation. SML/NJ is free, open source software.", "active": true, "categories": ["lang", "ml"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": []}, {"name": "swig-csharp", "portdir": "devel/swig", "version": "4.0.2", "license": "(GPL-3+ or Permissive)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.swig.org/", "description": "C# binding for swig", "long_description": "SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. This is the C# binding.", "active": true, "categories": ["devel"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["bison", "clang-9.0", "gsed"]}, {"type": "lib", "ports": ["mono", "swig", "swig3-csharp"]}], "depends_on": []}, {"name": "py39-cryptography", "portdir": "python/py-cryptography", "version": "35.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyca/cryptography", "description": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers.", "long_description": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-13", "cargo", "pkgconfig", "py39-setuptools", "py39-setuptools-rust"]}, {"type": "lib", "ports": ["python39", "py39-cffi", "openssl11"]}, {"type": "test", "ports": ["py39-cryptography_vectors", "py39-pytest-subtests", "py39-hypothesis", "py39-iso8601", "py39-pretend", "py39-pytest", "py39-pytest-cov", "py39-pytest-xdist", "py39-tz"]}], "depends_on": [{"type": "lib", "ports": ["py-cryptography", "py39-fido2", "py39-paramiko", "py39-service_identity", "py39-oauthlib", "py39-requests_ntlm", "py39-openssl", "py39-dnspython", "py39-fabric", "py39-mitmproxy", "py39-acme", "certbot", "certbot-apache", "certbot-nginx", "certbot-dns-cloudflare", "certbot-dns-cloudxns", "certbot-dns-digitalocean", "certbot-dns-dnsimple", "certbot-dns-dnsmadeeasy", "certbot-dns-gehirn", "certbot-dns-google", "certbot-dns-linode", "certbot-dns-luadns", "certbot-dns-nsone", "certbot-dns-ovh", "certbot-dns-rfc2136", "certbot-dns-route53", "certbot-dns-sakuracloud", "buku", "mycli", "py39-ansible-core", "py39-scrapy"]}, {"type": "run", "ports": ["py39-trustme", "yubikey-manager", "py39-dns-lexicon", "py39-autobahn"]}]}, {"name": "py36-cryptography_vectors", "portdir": "python/py-cryptography", "version": "35.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyca/cryptography", "description": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers.", "long_description": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "openssl3"]}], "depends_on": [{"type": "test", "ports": ["py36-cryptography"]}]}, {"name": "swig-d", "portdir": "devel/swig", "version": "4.0.2", "license": "(GPL-3+ or Permissive)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.swig.org/", "description": "D binding for swig", "long_description": "SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. This is the D binding.", "active": true, "categories": ["devel"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["bison", "clang-9.0", "gsed"]}, {"type": "lib", "ports": ["swig", "swig3-d", "phobos"]}], "depends_on": []}, {"name": "swig-clisp", "portdir": "devel/swig", "version": "4.0.2", "license": "(GPL-3+ or Permissive)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.swig.org/", "description": "CLISP binding for swig", "long_description": "SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. This is the CLISP binding.", "active": true, "categories": ["devel"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["bison", "clang-9.0", "gsed"]}, {"type": "lib", "ports": ["swig", "swig3-clisp", "clisp"]}], "depends_on": []}, {"name": "swig-gcj", "portdir": "devel/swig", "version": "4.0.2", "license": "(GPL-3+ or Permissive)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.swig.org/", "description": "GCJ binding for swig", "long_description": "SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. This is the GCJ binding.", "active": true, "categories": ["devel"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}], "variants": ["gcc43", "gcc44", "gcc45", "gcc48", "gcc47", "universal"], "dependencies": [{"type": "build", "ports": ["bison", "clang-9.0", "gsed"]}, {"type": "lib", "ports": ["swig", "swig3-gcj", "gcc47"]}], "depends_on": []}, {"name": "lagrange", "portdir": "net/lagrange", "version": "1.8.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/skyjake/lagrange", "description": "A Beautiful Gemini Client", "long_description": "A Beautiful Gemini Client", "active": true, "categories": ["net", "gemini"], "maintainers": [{"name": "sikmir", "github": "sikmir", "ports_count": 18}], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["zip", "cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["pcre", "harfbuzz", "zlib", "fribidi", "libunistring", "webp", "mpg123", "libsdl2", "openssl"]}], "depends_on": []}, {"name": "nsis", "portdir": "devel/nsis", "version": "3.08", "license": "zlib and CPL-1 and MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://nsis.sourceforge.net/", "description": "NSIS is a tool for creating win32 installers.", "long_description": "NSIS (Nullsoft Scriptable Install System) is a tool that allows programmers to create software installers for Windows. It is released under an open source license and is completely free for any use.", "active": true, "categories": ["devel"], "maintainers": [], "variants": ["advanced_logging", "large_strings", "debug"], "dependencies": [{"type": "build", "ports": ["scons", "clang-9.0"]}, {"type": "lib", "ports": ["zlib", "libiconv"]}], "depends_on": []}, {"name": "py38-toml", "portdir": "python/py-toml", "version": "0.10.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/uiri/toml", "description": "Python Library for Tom's Obvious, Minimal Language", "long_description": "A Python library for parsing and creating TOML. The module passes the TOML test suite.", "active": true, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "build", "ports": ["py38-stack_data", "py38-xmlsec", "py38-pure_eval", "py38-astropy", "py38-termplotlib", "py38-termtables", "py38-executing", "py38-jaraco.functools", "py38-pikepdf", "py38-tqdm", "py38-enrich", "py38-pytest-cov", "py38-jsonpickle", "py38-scikit-hep-hepunits", "py38-tokenizers"]}, {"type": "lib", "ports": ["py38-setuptools-rust", "py38-mypy", "py38-jupytext", "py38-pytest", "py38-pipfile", "py38-autopep8", "py38-pylint", "py38-tox", "py38-sip", "py38-eric-ide", "py38-tempora", "py38-pyls-black"]}]}, {"name": "py39-toml", "portdir": "python/py-toml", "version": "0.10.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/uiri/toml", "description": "Python Library for Tom's Obvious, Minimal Language", "long_description": "A Python library for parsing and creating TOML. The module passes the TOML test suite.", "active": true, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "build", "ports": ["py39-jsonpickle", "py39-scikit-hep-hepunits", "py39-tqdm", "py39-stack_data", "py39-termplotlib", "py39-tokenizers", "py39-pure_eval", "py39-configparser", "py39-termtables", "py39-executing", "py39-jaraco.functools", "ansible-lint", "py39-xmlsec", "py39-enrich", "py39-astropy", "py39-pikepdf", "py39-pytest-cov"]}, {"type": "lib", "ports": ["py39-setuptools-rust", "py39-mypy", "py39-jupytext", "kb", "pre-commit", "py39-pytest", "py39-autopep8", "py39-pylint", "py39-tox", "py39-sip", "py39-eric-ide", "py39-tempora", "py-toml", "py39-pyls-black"]}, {"type": "run", "ports": ["vulture", "nvchecker", "search-that-hash"]}]}, {"name": "gnuradio37", "portdir": "science/gnuradio", "version": "3.7.14.0", "license": "GPL-3", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.gnuradio.org/", "description": "GNU Radio is Software Defined Radio (SDR)", "long_description": "GNU Radio is Software Defined Radio (SDR): This port is kept up with the GNU Radio 3.7 release, currently 3.7.14.0, which is a legacy branch that will not see much maintenance; place consider updating to the 'gnuradio' port.", "active": true, "categories": ["science", "comms"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}, {"name": "ra1nb0w", "github": "ra1nb0w", "ports_count": 126}], "variants": ["debug", "python27", "docs", "grc", "qtgui", "wxgui", "uhd", "wavelet", "jack", "portaudio", "swig", "sdl", "ctrlport", "ctrlport_thrift", "performance_counters", "zeromq", "logging", "log4cpp", "quartz", "x11", "universal"], "dependencies": [{"type": "build", "ports": ["doxygen", "texlive-latex", "py27-sphinx", "clang-9.0", "makeicns", "graphviz", "cmake", "cppunit", "pkgconfig", "swig-python"]}, {"type": "lib", "ports": ["gsl", "py27-cheetah", "py27-lxml", "py27-numpy", "py27-pygtk", "py27-pyqt4", "uhd", "volk", "qt4-mac", "boost171", "xmlto", "cppzmq", "gmp", "libsdl", "log4cpp", "mpir", "qwt52", "qwtplot3d", "python27", "fftw-3-single"]}, {"type": "run", "ports": ["py27-zmq", "py27-scipy", "py27-pyqwt", "py27-opengl", "py27-matplotlib", "adwaita-icon-theme"]}], "depends_on": [{"type": "lib", "ports": ["gr37-ais", "gr37-gfdm", "gr37-gsm", "gr37-lora-BastilleResearch", "gr37-lora-rpp0", "gr37-ofdm", "gr37-osmosdr", "gr37-air-modes", "gr37-cdma", "gr37-fosphor", "gr37-iqbalance", "gr37-limesdr", "gr37-lte", "gr37-mac", "gr37-mapper", "gr37-pcap", "gr37-pyqt", "gr37-sdrplay", "gr37-specest", "gr37-tdd", "gr37-baz", "gr37-fcdproplus", "gr37-iridium", "gr37-iio", "gr37-foo", "gr37-ieee802-11", "gr37-ieee802-15-4", "gr37-rds", "gr37-satellites", "gr37-adapt"]}]}, {"name": "prometheus", "portdir": "sysutils/prometheus", "version": "2.31.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://prometheus.io", "description": "The Prometheus monitoring system and time series database", "long_description": "Prometheus is an open-source systems monitoring and alerting toolkit originally built at SoundCloud. Since its inception in 2012, many companies and organizations have adopted Prometheus, and the project has a very active developer and user community.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["golangci-lint", "nodejs16", "npm7", "promu", "yarn", "go", "clang-9.0"]}], "depends_on": []}, {"name": "gnuradio-next", "portdir": "science/gnuradio", "version": "20200419-03d92ac1", "license": "GPL-3", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.gnuradio.org/", "description": "GNU Radio is Software Defined Radio (SDR)", "long_description": "GNU Radio is Software Defined Radio (SDR): This port is kept up with the GNU Radio GIT 'master' branch (as of 2018-09-20), which is typically updated daily to weekly. This version of GNU Radio represents the next major release of GNU Radio, and hence its API is likely to be different than that provided by gnuradio. This port may or not compile or function correctly, as it represents a work in progress. If it does not work, check back in a few days. Or try deactivating the currently active gnuradio port, cleaning any current builds, and trying again.", "active": true, "categories": ["science", "comms"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}, {"name": "ra1nb0w", "github": "ra1nb0w", "ports_count": 126}], "variants": ["debug", "python36", "python37", "python38", "docs", "grc", "qtgui", "uhd", "wavelet", "jack", "portaudio", "swig", "sdl", "ctrlport", "ctrlport_thrift", "performance_counters", "zeromq", "quartz", "x11", "universal"], "dependencies": [{"type": "build", "ports": ["doxygen", "texlive-latex", "py37-sphinx", "clang-9.0", "makeicns", "graphviz", "cmake", "pkgconfig", "swig-python"]}, {"type": "lib", "ports": ["cairo", "qwt-qt5", "python37", "fftw-3-single", "gsl", "py37-cheetah", "py37-click", "py37-click-plugins", "py37-gobject3", "py37-lxml", "py37-mako", "py37-numpy", "py37-pyqt5", "py37-yaml", "uhd", "volk", "xmlto", "qt5-qtbase", "boost171", "pango", "codec2", "libgsm", "cppzmq", "gmp", "libsdl", "log4cpp", "mpir", "gtk3"]}, {"type": "run", "ports": ["py37-zmq", "py37-scipy", "py37-pyqtgraph", "py37-opengl", "py37-matplotlib", "adwaita-icon-theme"]}], "depends_on": []}, {"name": "mpich-clang90", "portdir": "science/mpich", "version": "3.4.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.mpich.org/", "description": "Message Passing Interface (MPI) Library", "long_description": "MPICH is a high-performance and widely portable implementation of the Message Passing Interface (MPI) standard (MPI-1, MPI-2 and MPI-3). The goals of MPICH are: (1) to provide an MPI implementation that efficiently supports different computation and communication platforms including commodity clusters (desktop systems, shared-memory systems, multicore architectures), high-speed networks (10 Gigabit Ethernet, InfiniBand, Myrinet, Quadrics) and proprietary high-end computing systems (Blue Gene, Cray) and (2) to enable cutting-edge research in MPI through an easy-to-extend modular framework for other derived implementations. \n\nTHIS SUBPORT WRAPS clang90's C/C++ (AND THE FORTRAN COMPILER SELECTED BY THE VARIANT, IF ANY)", "active": true, "categories": ["net", "science", "parallel"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}, {"name": "mascguy", "github": "mascguy", "ports_count": 129}], "variants": ["g95", "gcc10", "gcc11", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "threads", "gforker", "tuned", "native", "universal"], "dependencies": [{"type": "build", "ports": ["gcc11", "clang-9.0", "pkgconfig"]}, {"type": "lib", "ports": ["libxml2", "gcc11", "hwloc", "libgcc", "clang-9.0"]}, {"type": "run", "ports": ["mpi_select", "mpi-doc"]}], "depends_on": [{"type": "lib", "ports": ["scalapack", "paraview", "cicada", "expgram", "sundials", "sundials2", "diy", "diy2", "icet", "dolfin", "feast", "parmetis", "petsc", "pfft", "slepc", "sprng", "superlu_dist", "abinit", "py-mpi4py", "py27-mpi4py", "py35-mpi4py", "py36-mpi4py", "py37-mpi4py", "py38-mpi4py", "py39-mpi4py", "py-petsc4py", "py27-petsc4py", "py35-petsc4py", "py36-petsc4py", "py37-petsc4py", "py38-petsc4py", "py39-petsc4py", "py-slepc4py", "py27-slepc4py", "py35-slepc4py", "py36-slepc4py", "py37-slepc4py", "py38-slepc4py", "py39-slepc4py", "hpl", "libsc", "p4est", "parallel-netcdf", "scotch", "yaxt", "hpddm", "mumps", "quantum-espresso"]}]}, {"name": "py310-typing_extensions", "portdir": "python/py-typing_extensions", "version": "3.10.0.2", "license": "PSF", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python/typing/blob/master/typing_extensions/README.rst", "description": "Backported and Experimental Type Hints for Python", "long_description": "The typing module was added to the standard library in Python 3.5 on a provisional basis and will no longer be provisional in Python 3.7. However, this means users of Python 3.5 - 3.6 who are unable to upgrade will not be able to take advantage of new types added to the typing module, such as typing.Text or typing.Coroutine. The typing_extensions module contains both backports of these changes as well as experimental types that will eventually be added to the typing module, such as Protocol or TypedDict.", "active": true, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools", "py-bootstrap-modules"]}, {"type": "lib", "ports": ["python310"]}], "depends_on": [{"type": "lib", "ports": ["py310-black", "py310-mypy", "py310-async-timeout"]}]}, {"name": "py39-greenlet", "portdir": "python/py-greenlet", "version": "1.1.2", "license": "MIT and PSF", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-greenlet/greenlet", "description": "Lightweight in-process concurrent programming", "long_description": "The \"greenlet\" package is a spin-off of Stackless, a version of CPython that supports micro-threads called \"tasklets\". Tasklets run pseudo-concurrently (typically in a single or a few OS-level threads) and are synchronized with data exchanges on \"channels\". A \"greenlet\", on the other hand, is a still more primitive notion of micro-thread with no implicit scheduling; coroutines, in other words. This is useful when you want to control exactly when your code runs. You can build custom scheduled micro-threads on top of greenlet; however, it seems that greenlets are useful on their own as a way to make advanced control flow structures. For example, we can recreate generators; the difference with Python's own generators is that our generators can call nested functions and the nested functions can yield values too. Additionally, you don't need a \"yield\" keyword. See the example in test_generator.py. Greenlets are provided as a C extension module for the regular unmodified interpreter.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py39-eventlet", "py39-bpython", "py39-gevent", "py39-sqlalchemy", "py-greenlet", "py39-neovim"]}, {"type": "test", "ports": ["py39-structlog"]}]}, {"name": "py310-greenlet", "portdir": "python/py-greenlet", "version": "1.1.2", "license": "MIT and PSF", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-greenlet/greenlet", "description": "Lightweight in-process concurrent programming", "long_description": "The \"greenlet\" package is a spin-off of Stackless, a version of CPython that supports micro-threads called \"tasklets\". Tasklets run pseudo-concurrently (typically in a single or a few OS-level threads) and are synchronized with data exchanges on \"channels\". A \"greenlet\", on the other hand, is a still more primitive notion of micro-thread with no implicit scheduling; coroutines, in other words. This is useful when you want to control exactly when your code runs. You can build custom scheduled micro-threads on top of greenlet; however, it seems that greenlets are useful on their own as a way to make advanced control flow structures. For example, we can recreate generators; the difference with Python's own generators is that our generators can call nested functions and the nested functions can yield values too. Additionally, you don't need a \"yield\" keyword. See the example in test_generator.py. Greenlets are provided as a C extension module for the regular unmodified interpreter.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools"]}, {"type": "lib", "ports": ["python310"]}], "depends_on": [{"type": "lib", "ports": ["py310-sqlalchemy", "py310-neovim"]}]}, {"name": "py310-importlib-metadata", "portdir": "python/py-importlib-metadata", "version": "4.8.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://importlib-metadata.readthedocs.io/", "description": "Library to access the metadata for a Python package.", "long_description": "Library to access the metadata for a Python package.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools_scm", "py-bootstrap-modules"]}, {"type": "lib", "ports": ["python310", "py310-zipp"]}], "depends_on": [{"type": "lib", "ports": ["py310-keyring", "py310-tox", "py310-cx_Freeze"]}]}, {"name": "py-identify", "portdir": "python/py-identify", "version": "2.3.5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pre-commit/identify", "description": "File identification library for Python", "long_description": "File identification library for Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-identify"]}], "depends_on": []}, {"name": "py39-identify", "portdir": "python/py-identify", "version": "2.3.5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pre-commit/identify", "description": "File identification library for Python", "long_description": "File identification library for Python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["pre-commit", "py-identify"]}]}, {"name": "opensc", "portdir": "security/opensc", "version": "0.22.0", "license": "LGPL-2.1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/OpenSC/OpenSC", "description": "Tools and libraries for smart cards", "long_description": "OpenSC provides a set of libraries and utilities to work with smart cards. Its main focus is on cards that support cryptographic operations, and facilitate their use in security applications such as authentication, mail encryption and digital signatures. OpenSC implements the PKCS#11 API so applications supporting this API (such as Mozilla Firefox and Thunderbird) can use it. On the card OpenSC implements the PKCS#15 standard and aims to be compatible with every software/card that does so, too.", "active": true, "categories": ["security"], "maintainers": [{"name": "lbschenkel", "github": "lbschenkel", "ports_count": 65}], "variants": ["eac", "openssl3", "p11kit", "readline", "universal"], "dependencies": [{"type": "build", "ports": ["libxslt", "docbook-xsl-nons", "help2man", "autoconf", "automake", "gengetopt", "libtool", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["openssl11", "readline"]}], "depends_on": []}, {"name": "py27-isort", "portdir": "python/py-isort", "version": "4.3.15", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyCQA/isort", "description": "A Python utility / library to sort Python imports.", "long_description": "isort is a Python utility / library to sort imports alphabetically, and automatically separated into sections. It provides a command line utility, Python library and plugins for various editors to quickly sort all your imports.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-futures", "python27"]}, {"type": "run", "ports": ["py27-importlib-metadata", "isort_select"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py27-pylint"]}]}, {"name": "py35-isort", "portdir": "python/py-isort", "version": "4.3.21", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyCQA/isort", "description": "A Python utility / library to sort Python imports.", "long_description": "isort is a Python utility / library to sort imports alphabetically, and automatically separated into sections. It provides a command line utility, Python library and plugins for various editors to quickly sort all your imports.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["isort_select", "py35-importlib-metadata"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py35-pylint"]}]}, {"name": "backuppc", "portdir": "sysutils/backuppc", "version": "4.4.0", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://backuppc.github.io/backuppc/", "description": "BackupPC is a high-performance, enterprise-grade system for backing up Linux, WinXX and Mac OS X PCs and laptops to a server.", "long_description": "BackupPC is a high-performance, enterprise-grade system for backing up Linux, WinXX and Mac OS X PCs and laptops to a server. BackupPC is highly configurable and easy to install and maintain.", "active": true, "categories": ["sysutils"], "maintainers": [], "variants": ["perl5_26", "perl5_28", "perl5_30", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["gnutar", "gzip", "par2", "openssh", "rsync", "samba3", "bzip2", "p5.28-cgi", "p5.28-encode", "p5.28-file-listing", "p5.28-getopt-long", "mod_perl2", "p5.28-backuppc-xs"]}], "depends_on": []}, {"name": "dirvish", "portdir": "sysutils/dirvish", "version": "1.2.1", "license": "OSL-2", "platforms": "darwin freebsd", "epoch": 0, "replaced_by": null, "homepage": "http://www.dirvish.org/", "description": "Client/server rsync- and hard-link-based snapshot backup system", "long_description": "Dirvish is a \"Time-Machine-alike\" for UNIX- and UNIX-like machines (e.g.,  FreeBSD, Linux, Solaris, Mac OS X < 10.5) that allows for snapshot-style  backups that preserve space by hard-linking to unchanged versions of files in  a given backup tree.  Like Time Machine, it allows each snapshot to present a  full tree, even for incremental backups. However, because only OS X has  fseventsd, and because among backup sysems only Time Machine actually uses  it, other client systems have to do a traditional tree walk to find changed  files.   Dirvish transmits changed files (or portions of changed files) via rsync to  the backup server, which in turn maintains the backup repository as a set of  hard-linked trees, with databases to track what has changed, as well as an  optional locate index to provide fast searching in the backup tree.  There is  no GUI; however, dirvish appears to be much more robust than other software  of this type in its exclude processing.   Using dirvish, your OS X Mac can become a snapshot backup server for your  non-OS X (or your pre-Leopard OS X) UNIX- and UNIX-like machines.", "active": true, "categories": ["sysutils"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["bsdmake", "clang-9.0"]}, {"type": "lib", "ports": ["p5.28-time-parsedate", "perl5.28", "p5.28-timedate", "p5.28-time-period", "rsync"]}], "depends_on": []}, {"name": "infracost", "portdir": "sysutils/infracost", "version": "0.9.11", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.infracost.io", "description": "Cloud cost estimates for Terraform in your CLI", "long_description": "Infracost shows hourly and monthly cost estimates for a Terraform project. This helps developers, DevOps et al. quickly see the cost breakdown and compare different deployment options upfront.", "active": true, "categories": ["sysutils", "net"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "krew", "portdir": "sysutils/krew", "version": "0.4.2", "license": "Apache-2", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/kubernetes-sigs/krew", "description": "Find and install kubectl plugins", "long_description": "Krew is the package manager for kubectl plugins. Krew helps you discover plugins, install and manage them on your machine. It is similar to tools like apt, dnf or brew. Today, over 70 kubectl plugins are available on Krew.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["gox", "go", "clang-9.0"]}], "depends_on": []}, {"name": "chezmoi", "portdir": "sysutils/chezmoi", "version": "2.7.5", "license": "MIT", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://chezmoi.io", "description": "Manage your dotfiles across multiple machines, securely.", "long_description": "chezmoi helps you manage your personal configuration files (dotfiles, like ~/.bashrc) across multiple machines.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "broot", "portdir": "sysutils/broot", "version": "1.7.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://dystroy.org/broot", "description": "A new way to see and navigate directory trees", "long_description": "broot is a new way to see and navigate directory trees. It is interactive, replacing ls, allowing you to navigate extremely large and deep trees very quickly. It has advanced features such as .gitignore support, filtering via regular expressions, and more.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["cargo", "clang-13"]}, {"type": "lib", "ports": ["zlib", "libgit2", "xorg-libxcb"]}], "depends_on": []}, {"name": "py38-dns-lexicon", "portdir": "python/py-dns-lexicon", "version": "3.8.3", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://github.com/AnalogJ/lexicon", "description": "Manipulate DNS records on various DNS providers in a standardized/agnostic way.", "long_description": "Manipulate DNS records on various DNS providers in a standardized/agnostic way.", "active": true, "categories": ["net", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-setuptools", "python38"]}, {"type": "run", "ports": ["py38-beautifulsoup4", "py38-cryptography", "py38-dnspython", "py38-requests", "py38-tldextract", "py38-yaml", "lexicon_select"]}], "depends_on": []}, {"name": "kubescape", "portdir": "sysutils/kubescape", "version": "1.0.131", "license": "Apache-2.0", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/armosec/kubescape", "description": "Tool for testing if Kubernetes is deployed securely as defined in Kubernetes Hardening Guidance by NSA and CISA", "long_description": "Tool for testing if Kubernetes is deployed securely as defined in Kubernetes Hardening Guidance by NSA and CISA", "active": true, "categories": ["sysutils", "security"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "lf", "portdir": "sysutils/lf", "version": "26", "license": "MIT", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gokcehan/lf", "description": "Terminal file manager", "long_description": "lf (as in \"list files\") is a terminal file manager written in Go. It is heavily inspired by ranger with some missing and extra features. Some of the missing features are deliberately omitted since they are better handled by external tools.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "rsnapshot", "portdir": "sysutils/rsnapshot", "version": "1.4.4", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.rsnapshot.org/", "description": "filesystem snapshot utility based on rsync", "long_description": "rsnapshot is a filesystem snapshot utility based on rsync. It makes it easy to make periodic snapshots of local machines, and remote machines over SSH. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.", "active": true, "categories": ["sysutils", "net"], "maintainers": [], "variants": ["perl5_26", "perl5_28", "perl5_30", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["openssh", "rsync", "p5.28-lchown"]}], "depends_on": []}, {"name": "rvm", "portdir": "sysutils/rvm", "version": "1.11", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://rvm.sourceforge.net/", "description": "archive manager to manage backups of multiple clients", "long_description": "The Rsync Vault Manager is an archive manager that uses rsync to manage backups of multiple clients across multiple logical partitions (vaults).", "active": true, "categories": ["sysutils", "net"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["rsync"]}], "depends_on": []}, {"name": "terraformer", "portdir": "sysutils/terraformer", "version": "0.8.18", "license": "Apache-2", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/GoogleCloudPlatform/terraformer", "description": "Generate terraform files from existing infrastructure (reverse Terraform).", "long_description": "Generate terraform files from existing infrastructure (reverse Terraform). Terraformer uses Terraform providers and is designed to easily support newly added resources. To upgrade resources with new fields, all you need to do is upgrade the relevant Terraform providers.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "terrascan", "portdir": "sysutils/terrascan", "version": "1.12.0", "license": "Apache-2", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://docs.accurics.com/projects/accurics-terrascan", "description": "Detect compliance and security violations across Infrastructure as Code", "long_description": "Terrascan detects security vulnerabilities and compliance violations across your Infrastructure as Code. Mitigate risks before provisioning cloud native infrastructure.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "py36-opencv3-devel", "portdir": "graphics/opencv3-devel", "version": "3.4.16", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://opencv.org", "description": "Open Source Computer Vision Library", "long_description": "OpenCV (Open Source Computer Vision Library) is an open source computer vision and machine learning software library. OpenCV was built to provide a common infrastructure for computer vision applications and to accelerate the use of machine perception in the commercial products. Being a BSD-licensed product, OpenCV makes it easy for businesses to utilize and modify the code.", "active": true, "categories": ["graphics", "science"], "maintainers": [{"name": "mascguy", "github": "mascguy", "ports_count": 129}], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["libpng", "openexr", "ilmbase", "openjpeg", "tiff", "bzip2", "python36", "ffmpeg", "py36-numpy", "opencv3-devel", "webp", "zlib", "libjpeg-turbo"]}], "depends_on": []}, {"name": "zellij", "portdir": "sysutils/zellij", "version": "0.19.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://zellij.dev", "description": "A terminal workspace with batteries included", "long_description": "Zellij is a workspace aimed at developers, ops-oriented people and anyone who loves the terminal. At its core, it is a terminal multiplexer (similar to tmux and screen), but this is merely its infrastructure layer. Zellij includes a layout system, and a plugin system allowing one to create plugins in any language that compiles to WebAssembly.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["cargo", "clang-12", "go-md2man"]}], "depends_on": []}, {"name": "pulumi", "portdir": "sysutils/pulumi", "version": "3.17.0", "license": "Apache-2", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://www.pulumi.com", "description": "Pulumi - Modern Infrastructure as Code. Any cloud, any language.", "long_description": "Pulumi's Infrastructure as Code SDK is the easiest way to create and deploy cloud software that use containers, serverless functions, hosted services, and infrastructure, on any cloud. Simply write code in your favorite language and Pulumi automatically provisions and manages your AWS, Azure, Google Cloud Platform, and/or Kubernetes resources, using an infrastructure-as-code approach. Skip the YAML, and use standard language features like loops, functions, classes, and package management that you already know and love.", "active": true, "categories": ["sysutils", "net"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "dasel", "portdir": "textproc/dasel", "version": "1.22.1", "license": "MIT", "platforms": "darwin freebsd linux", "epoch": 0, "replaced_by": null, "homepage": "https://daseldocs.tomwright.me", "description": "Query and update JSON, TOML, YAML and XML from the command line.", "long_description": "Dasel (short for data-selector) allows you to query and modify data structures using selector strings. Comparable to jq / yq, but supports JSON, YAML, TOML and XML with zero runtime dependencies.", "active": true, "categories": ["textproc"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["go", "clang-9.0"]}], "depends_on": []}, {"name": "py35-opencv3-devel", "portdir": "graphics/opencv3-devel", "version": "3.4.16", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://opencv.org", "description": "Open Source Computer Vision Library", "long_description": "OpenCV (Open Source Computer Vision Library) is an open source computer vision and machine learning software library. OpenCV was built to provide a common infrastructure for computer vision applications and to accelerate the use of machine perception in the commercial products. Being a BSD-licensed product, OpenCV makes it easy for businesses to utilize and modify the code.", "active": true, "categories": ["graphics", "science"], "maintainers": [{"name": "mascguy", "github": "mascguy", "ports_count": 129}], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["libpng", "openexr", "ilmbase", "openjpeg", "tiff", "bzip2", "python35", "ffmpeg", "py35-numpy", "opencv3-devel", "webp", "zlib", "libjpeg-turbo"]}], "depends_on": []}, {"name": "lighttpd", "portdir": "www/lighttpd", "version": "1.4.61", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.lighttpd.net/", "description": "A secure, fast, compliant and flexible web-server", "long_description": "lighttpd is a secure, fast, compliant and very flexible web server which has been optimized for high-performance environments. It has a very low memory footprint compared to other web servers and takes care of CPU load.", "active": true, "categories": ["www"], "maintainers": [{"name": "ryandesign", "github": "ryandesign", "ports_count": 1396}], "variants": ["mysql57", "ssl", "cml", "davprops", "universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["zstd", "openssl", "brotli", "spawn-fcgi", "pcre", "bzip2", "zlib"]}], "depends_on": []}, {"name": "meld", "portdir": "textproc/meld", "version": "3.21.0", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://meldmerge.org/", "description": "Visual diff and merge tool.", "long_description": "Meld is a visual diff and merge tool. You can compare two or three files and edit them in place (diffs update dynamically). You can compare two or three folders and launch file comparisons. You can browse and view a working copy from popular version control systems such such as CVS, Subversion, Bazaar-ng and Mercurial.", "active": true, "categories": ["devel", "textproc"], "maintainers": [], "variants": ["x11", "quartz", "universal"], "dependencies": [{"type": "build", "ports": ["py38-distro", "libxml2", "itstool", "intltool", "librsvg", "makeicns", "clang-9.0"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["glib2", "shared-mime-info", "desktop-file-utils", "gtk3", "gtksourceview4", "python38", "py38-cairo", "py38-gobject3"]}, {"type": "run", "ports": ["yelp", "gsettings-desktop-schemas", "adwaita-icon-theme"]}], "depends_on": []}, {"name": "ugrep", "portdir": "textproc/ugrep", "version": "3.3.8", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Genivia/ugrep", "description": "ultra fast grep with interactive query UI and fuzzy search", "long_description": "ultra fast grep with interactive query UI and fuzzy search: search file systems, source code, text, binary files, archives (cpio/tar/pax/zip), compressed files (gz/Z/bz2/lzma/xz/lz4/zstd), documents and more.", "active": true, "categories": ["sysutils", "textproc"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": ["native", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["lz4", "lzma", "bzip2", "zstd", "pcre2", "zlib"]}], "depends_on": []}, {"name": "qutebrowser", "portdir": "www/qutebrowser", "version": "2.4.0", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.qutebrowser.org/", "description": "A keyboard-driven, vim-like browser based on PyQt5", "long_description": "A keyboard-driven, vim-like browser based on PyQt5", "active": true, "categories": ["www"], "maintainers": [{"name": "amake", "github": "amake", "ports_count": 85}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-jinja2", "py39-pyqt5-webengine", "py39-yaml"]}], "depends_on": []}, {"name": "doxygen", "portdir": "textproc/doxygen", "version": "1.9.2", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.doxygen.nl", "description": "Documentation system for several programming languages", "long_description": "It can generate an on-line documentation browser (in HTML) and/or an off-line reference manual from a set of documented source files. There is also support for generating output in RTF (MS-Word), PostScript, hyperlinked PDF, compressed HTML, and Unix man pages. The documentation is extracted directly from the sources, which makes it much easier to keep the documentation consistent with the source code. You can configure doxygen to extract the code structure from undocumented source files. This is very useful to quickly find your way in large source distributions. You can also visualize the relations between the various elements by means of include dependency graphs, inheritance diagrams, and collaboration diagrams, which are all generated automatically.", "active": true, "categories": ["devel", "textproc"], "maintainers": [], "variants": ["debug", "docs", "wizard", "qt4", "qt5", "universal"], "dependencies": [{"type": "build", "ports": ["python39", "clang-9.0", "perl5", "bison", "cmake", "flex"]}, {"type": "lib", "ports": ["libiconv", "libpng"]}], "depends_on": [{"type": "build", "ports": ["py39-pytorch", "gr-ais", "gr37-ais", "gr-gfdm", "gr37-gfdm", "gr-gsm", "gr37-gsm", "gr-hpsdr", "gr-lora", "gr37-lora-BastilleResearch", "gr37-lora-rpp0", "gr-lora-rpp0", "gr-ofdm", "gr37-ofdm", "gr-osmosdr", "gr37-osmosdr", "lldb-10", "lldb-11", "gr-air-modes", "gr37-air-modes", "gr-cdma", "gr37-cdma", "gr-fosphor", "gr37-fosphor", "gr-iqbalance", "gr37-iqbalance", "gr-limesdr", "gr37-limesdr", "gr-limesdr-devel", "gr-lte", "gr37-lte", "gr-mac", "gr37-mac", "gr-mapper", "gr37-mapper", "gr-pcap", "gr37-pcap", "gr-pyqt", "gr37-pyqt", "gr-sdrplay", "gr37-sdrplay", "gr-specest", "gr37-specest", "gr-tdd", "gr37-tdd", "libftdi1", "lldb-5.0", "lldb-6.0", "openni", "cvc4", "lldb-7.0", "lldb-8.0", "lldb-9.0", "bladeRF", "mlt", "mlt-qt5", "gr37-satellites", "lldb-13", "notmuch", "lapack-manpages", "vips", "gr-adapt", "gr37-adapt", "gnuradio", "gnuradio37", "gnuradio-next", "py37-pytorch", "py38-pytorch", "freecad", "gr-fcdproplus", "gr37-fcdproplus", "libiio", "osmocore", "osmocore-devel", "rtl-sdr", "lirc", "py35-gyoto", "py36-gyoto", "py37-gyoto", "py38-gyoto", "dar", "sofia-sip", "owncloud-client", "libssh", "wsdlpull", "maloc", "usd", "sphinxbase", "gr-iridium", "gr37-iridium", "libsigcxx3", "physfs", "range-v3", "rapidjson-devel", "vcsn", "geographiclib", "restinio", "gnome-vfsmm", "libgtksourceviewmm", "SoQt", "alembic", "libpgf", "opensubdiv", "partio", "ptex", "gavl", "sfml", "libqalculate", "volk", "gr-iio", "gr37-iio", "libxmlxx5", "gnuradio-devel", "ismrmrd", "SoXt", "materialx", "gr-linrad", "libsigcxx2", "gr-foo", "gr37-foo", "gr-ieee802-11", "gr37-ieee802-11", "gr-ieee802-15-4", "gr37-ieee802-15-4", "gr-rds", "gr37-rds", "minetest", "glom", "lldb-devel", "lldb-12", "ogre", "glfw", "glfw-devel", "nds2-client", "gr-satellites"]}, {"type": "lib", "ports": ["widelands-devel", "gr37-baz", "libosmo-dsp", "stellarium", "itpp", "doxygen-launcher", "itpp-devel", "gr-baz", "uhd", "uhd-39lts", "uhd-devel", "widelands"]}, {"type": "run", "ports": ["lscsoft-deps"]}]}, {"name": "hgrep", "portdir": "textproc/hgrep", "version": "0.2.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/rhysd/hgrep", "description": "Human-friendly Grep", "long_description": "hgrep is a grep tool to search files with given pattern and print the matched code snippets with human-friendly syntax highlighting. In short, it's a fusion of bat and grep or other alternatives like ripgrep. This is similar to -C option of grep command, but hgrep focuses on human readable outputs. hgrep is useful to survey the matches with contexts around them. When some matches are near enough, hgrep prints the lines within one code snippet. Unlike grep -C, hgrep adopts some heuristics around blank lines to determine efficient number of context lines.", "active": true, "categories": ["textproc"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["cargo", "clang-13"]}, {"type": "lib", "ports": ["pcre2"]}], "depends_on": []}, {"name": "libomp", "portdir": "lang/libomp", "version": "13.0.0", "license": "(MIT or NCSA)", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://openmp.llvm.org", "description": "The OpenMP subproject of LLVM", "long_description": "The OpenMP subproject of LLVM is intended to contain all of the components required to build an executing OpenMP program that are outside the compiler itself. This port works with MacPorts' clang-3.7+ (optionally with +openmp variant for clang-3.7.)", "active": true, "categories": ["lang"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": ["debug", "top_level"], "dependencies": [{"type": "build", "ports": ["cmake", "clang-9.0", "perl5"]}, {"type": "extract", "ports": ["xz"]}], "depends_on": [{"type": "build", "ports": ["iqtree2", "iqtree"]}, {"type": "lib", "ports": ["py39-healpy", "clang-10", "lldb-10", "clang-11", "lldb-11", "ispc-clang", "clang-5.0", "libpcl", "lldb-5.0", "clang-6.0", "lldb-6.0", "py27-scikit-image", "py35-scikit-image", "py36-scikit-image", "py37-scikit-image", "py38-scikit-image", "clang-7.0", "py39-scikit-image", "lldb-7.0", "clang-8.0", "lldb-8.0", "clang-9.0", "lldb-9.0", "octave-nurbs", "lalapps", "lalburst", "py27-lalburst", "py36-lalburst", "py37-lalburst", "py38-lalburst", "octave-lalburst", "lalframe", "py27-lalframe", "py36-lalframe", "py37-lalframe", "py38-lalframe", "octave-lalframe", "lalinference", "py37-lalinference", "py38-lalinference", "octave-lalinference", "lalinspiral", "py27-lalinspiral", "py36-lalinspiral", "py37-lalinspiral", "py38-lalinspiral", "octave-lalinspiral", "lalmetaio", "py27-lalmetaio", "py36-lalmetaio", "py37-lalmetaio", "py38-lalmetaio", "octave-lalmetaio", "lalpulsar", "py37-lalpulsar", "py38-lalpulsar", "octave-lalpulsar", "lalsimulation", "py27-lalsimulation", "py36-lalsimulation", "py37-lalsimulation", "py38-lalsimulation", "octave-lalsimulation", "seqan2-apps", "R", "cryfs", "py37-networkit", "py38-networkit", "py39-networkit", "py39-graph-tool", "py38-healpy", "py37-healpy", "libfaiss", "py37-faiss", "py38-faiss", "py39-faiss", "wxMaxima", "py27-rpy2", "py36-rpy2", "py37-rpy2", "py38-rpy2", "py39-rpy2", "lal", "py27-lal", "py36-lal", "py37-lal", "py38-lal", "octave-lal", "py37-hdbscan", "py38-hdbscan", "py27-healpy", "py35-healpy", "py36-healpy", "pdf2djvu", "blender", "py27-lalinference", "py36-lalinference", "py27-lalpulsar", "py36-lalpulsar", "libsharp", "ngspice", "xrmc", "libopenshot", "py35-scikit-learn", "py36-scikit-learn", "py37-scikit-learn", "py38-scikit-learn", "py39-scikit-learn", "healpix-cxx", "clang-devel", "lldb-devel", "clang-12", "py27-mkl", "py35-mkl", "py36-mkl", "py37-mkl", "py38-mkl", "py39-mkl", "py310-mkl", "clang-13", "flang-13", "py37-gmic", "py38-gmic", "py39-gmic", "py37-pytorch", "py38-pytorch", "py39-pytorch", "py27-graph-tool", "py37-graph-tool", "py38-graph-tool"]}, {"type": "test", "ports": ["feast"]}]}, {"name": "pandoc", "portdir": "textproc/pandoc", "version": "2.16.1", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pandoc.org", "description": "Conversion between markup formats", "long_description": "Pandoc is a Haskell library for converting from one markup format to another, and a command-line tool that uses this library. It can read markdown and (subsets of) HTML, reStructuredText, LaTeX, DocBook, MediaWiki markup, and Textile, and it can write markdown, reStructuredText, HTML, LaTeX, ConTeXt, Docbook, OpenDocument, ODT, Word docx, RTF, MediaWiki, Textile, groff man pages, plain text, Emacs Org-Mode, AsciiDoc, EPUB (v2 and v3), FictionBook2, and S5, Slidy and Slideous HTML slide shows.", "active": true, "categories": ["textproc", "haskell"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "stack"]}], "depends_on": [{"type": "build", "ports": ["bladeRF", "bali-phy", "gocryptfs", "osmium-tool", "exa", "notcurses"]}]}]}