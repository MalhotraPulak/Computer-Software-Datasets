{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=306", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=304", "results": [{"name": "py34-oct2py", "portdir": "python/py-oct2py", "version": "5.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": "py36-oct2py", "homepage": "https://www.macports.org", "description": "Obsolete port, replaced by py36-oct2py", "long_description": "This port has been replaced by py36-oct2py.", "active": true, "categories": ["python"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": [null]}, {"type": "fetch", "ports": [null]}, {"type": "lib", "ports": [null]}, {"type": "patch", "ports": [null]}, {"type": "run", "ports": [null]}, {"type": "test", "ports": [null]}], "depends_on": []}, {"name": "py35-oct2py", "portdir": "python/py-oct2py", "version": "5.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": "py36-oct2py", "homepage": "https://www.macports.org", "description": "Obsolete port, replaced by py36-oct2py", "long_description": "This port has been replaced by py36-oct2py.", "active": true, "categories": ["python"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": [null]}, {"type": "fetch", "ports": [null]}, {"type": "lib", "ports": [null]}, {"type": "patch", "ports": [null]}, {"type": "run", "ports": [null]}, {"type": "test", "ports": [null]}], "depends_on": []}, {"name": "py-octave_kernel", "portdir": "python/py-octave_kernel", "version": "0.32.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Calysto/octave_kernel", "description": "A Jupyter kernel for Octave", "long_description": "A Jupyter kernel for Octave", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-octave_kernel"]}], "depends_on": []}, {"name": "py36-octave_kernel", "portdir": "python/py-octave_kernel", "version": "0.32.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Calysto/octave_kernel", "description": "A Jupyter kernel for Octave", "long_description": "A Jupyter kernel for Octave", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "octave", "py36-metakernel"]}], "depends_on": [{"type": "lib", "ports": ["py36-oct2py"]}]}, {"name": "py37-octave_kernel", "portdir": "python/py-octave_kernel", "version": "0.32.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Calysto/octave_kernel", "description": "A Jupyter kernel for Octave", "long_description": "A Jupyter kernel for Octave", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "octave", "py37-metakernel"]}], "depends_on": [{"type": "lib", "ports": ["py37-oct2py"]}]}, {"name": "py38-octave_kernel", "portdir": "python/py-octave_kernel", "version": "0.32.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Calysto/octave_kernel", "description": "A Jupyter kernel for Octave", "long_description": "A Jupyter kernel for Octave", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "octave", "py38-metakernel"]}], "depends_on": [{"type": "lib", "ports": ["py38-oct2py"]}]}, {"name": "py35-odo", "portdir": "python/py-odo", "version": "0.5.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ContinuumIO/odo", "description": "Data migration utilities", "long_description": "Data migration utilities", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["py35-multipledispatch", "py35-networkx", "python35", "py35-pandas", "py35-toolz", "py35-numpy", "py35-datashape"]}], "depends_on": [{"type": "lib", "ports": ["py35-blaze"]}]}, {"name": "py36-odo", "portdir": "python/py-odo", "version": "0.5.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ContinuumIO/odo", "description": "Data migration utilities", "long_description": "Data migration utilities", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["py36-multipledispatch", "py36-networkx", "python36", "py36-pandas", "py36-toolz", "py36-numpy", "py36-datashape"]}], "depends_on": [{"type": "lib", "ports": ["py36-blaze"]}]}, {"name": "py37-odo", "portdir": "python/py-odo", "version": "0.5.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ContinuumIO/odo", "description": "Data migration utilities", "long_description": "Data migration utilities", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-multipledispatch", "py37-networkx", "python37", "py37-pandas", "py37-toolz", "py37-numpy", "py37-datashape"]}], "depends_on": [{"type": "lib", "ports": ["py37-blaze"]}]}, {"name": "py38-odo", "portdir": "python/py-odo", "version": "0.5.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ContinuumIO/odo", "description": "Data migration utilities", "long_description": "Data migration utilities", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["py38-multipledispatch", "py38-networkx", "python38", "py38-pandas", "py38-toolz", "py38-numpy", "py38-datashape"]}], "depends_on": [{"type": "lib", "ports": ["py38-blaze", "py-odo"]}]}, {"name": "py-omegaconf", "portdir": "python/py-omegaconf", "version": "2.0.6", "license": "BSD-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/omry/omegaconf", "description": "Flexible Python configuration system. The last one you will ever need.", "long_description": "OmegaConf is a hierarchical configuration system, with support for merging configurations from multiple sources (YAML config files, dataclasses/objects and CLI arguments) providing a consistent API regardless of how the configuration was created.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-omegaconf"]}], "depends_on": []}, {"name": "py27-openbabel", "portdir": "python/py-openbabel", "version": "2.4.1", "license": "GPL-2", "platforms": "darwin freebsd", "epoch": 0, "replaced_by": null, "homepage": "https://openbabel.org", "description": "Python interface to the Open Babel chemistry library", "long_description": "Open Babel is a chemical toolbox designed to speak the many languages of chemical data. It\u2019s an open, collaborative project allowing anyone to search, convert, analyze, or store data from molecular modeling, chemistry, solid-state materials, biochemistry, or related areas. computational chemistry. This port provides the Python bindings.", "active": true, "categories": ["devel", "science", "python", "chemistry"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["swig-python", "eigen3", "py27-setuptools", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["openbabel", "python27"]}], "depends_on": []}, {"name": "py37-omegaconf", "portdir": "python/py-omegaconf", "version": "2.0.6", "license": "BSD-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/omry/omegaconf", "description": "Flexible Python configuration system. The last one you will ever need.", "long_description": "OmegaConf is a hierarchical configuration system, with support for merging configurations from multiple sources (YAML config files, dataclasses/objects and CLI arguments) providing a consistent API regardless of how the configuration was created.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py37-wheel", "clang-9.0", "py37-brotli", "py37-pip", "py37-pytest-runner", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "run", "ports": ["py37-fairseq", "py37-hydra-core"]}]}, {"name": "py38-omegaconf", "portdir": "python/py-omegaconf", "version": "2.0.6", "license": "BSD-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/omry/omegaconf", "description": "Flexible Python configuration system. The last one you will ever need.", "long_description": "OmegaConf is a hierarchical configuration system, with support for merging configurations from multiple sources (YAML config files, dataclasses/objects and CLI arguments) providing a consistent API regardless of how the configuration was created.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py38-wheel", "clang-9.0", "py38-brotli", "py38-pip", "py38-pytest-runner", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "run", "ports": ["py38-fairseq", "py38-hydra-core"]}]}, {"name": "py39-omegaconf", "portdir": "python/py-omegaconf", "version": "2.0.6", "license": "BSD-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/omry/omegaconf", "description": "Flexible Python configuration system. The last one you will ever need.", "long_description": "OmegaConf is a hierarchical configuration system, with support for merging configurations from multiple sources (YAML config files, dataclasses/objects and CLI arguments) providing a consistent API regardless of how the configuration was created.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py39-wheel", "clang-9.0", "py39-brotli", "py39-pip", "py39-pytest-runner", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-omegaconf"]}, {"type": "run", "ports": ["py39-fairseq", "py39-hydra-core"]}]}, {"name": "py38-onnx", "portdir": "python/py-onnx", "version": "1.8.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://onnx.ai/", "description": "Open Neural Network Exchange", "long_description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers AI developers to choose the right tools as their project evolves. ONNX provides an open source format for AI models, both deep learning and traditional ML. It defines an extensible computation graph model, as well as definitions of built-in operators and standard data types. Currently we focus on the capabilities needed for inferencing (scoring).", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["debug"], "dependencies": [{"type": "build", "ports": ["cctools", "cmake", "clang-9.0", "py38-pytest-runner"]}, {"type": "lib", "ports": ["py38-numpy", "py38-protobuf3", "py38-setuptools", "py38-six", "py38-typing_extensions", "protobuf-c", "pybind11", "python38", "py38-future"]}, {"type": "test", "ports": ["py38-nbval", "py38-pytest", "py38-tabulate"]}], "depends_on": [{"type": "run", "ports": ["py38-keras2onnx", "py38-onnxconverter-common", "py38-pytorch"]}]}, {"name": "py39-onnx", "portdir": "python/py-onnx", "version": "1.8.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://onnx.ai/", "description": "Open Neural Network Exchange", "long_description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers AI developers to choose the right tools as their project evolves. ONNX provides an open source format for AI models, both deep learning and traditional ML. It defines an extensible computation graph model, as well as definitions of built-in operators and standard data types. Currently we focus on the capabilities needed for inferencing (scoring).", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["debug"], "dependencies": [{"type": "build", "ports": ["cctools", "cmake", "clang-9.0", "py39-pytest-runner"]}, {"type": "lib", "ports": ["py39-numpy", "py39-protobuf3", "py39-setuptools", "py39-six", "py39-typing_extensions", "protobuf-c", "pybind11", "python39", "py39-future"]}, {"type": "test", "ports": ["py39-nbval", "py39-pytest", "py39-tabulate"]}], "depends_on": [{"type": "lib", "ports": ["py-onnx"]}, {"type": "run", "ports": ["py39-keras2onnx", "py39-onnxconverter-common", "py39-pytorch"]}]}, {"name": "py-onnx", "portdir": "python/py-onnx", "version": "1.8.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://onnx.ai/", "description": "Open Neural Network Exchange", "long_description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers AI developers to choose the right tools as their project evolves. ONNX provides an open source format for AI models, both deep learning and traditional ML. It defines an extensible computation graph model, as well as definitions of built-in operators and standard data types. Currently we focus on the capabilities needed for inferencing (scoring).", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-onnx"]}], "depends_on": []}, {"name": "py37-onnx", "portdir": "python/py-onnx", "version": "1.8.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://onnx.ai/", "description": "Open Neural Network Exchange", "long_description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers AI developers to choose the right tools as their project evolves. ONNX provides an open source format for AI models, both deep learning and traditional ML. It defines an extensible computation graph model, as well as definitions of built-in operators and standard data types. Currently we focus on the capabilities needed for inferencing (scoring).", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["debug"], "dependencies": [{"type": "build", "ports": ["cctools", "cmake", "clang-9.0", "py37-pytest-runner"]}, {"type": "lib", "ports": ["py37-numpy", "py37-protobuf3", "py37-setuptools", "py37-six", "py37-typing_extensions", "protobuf-c", "pybind11", "python37", "py37-future"]}, {"type": "test", "ports": ["py37-nbval", "py37-pytest", "py37-tabulate"]}], "depends_on": [{"type": "run", "ports": ["py37-keras2onnx", "py37-onnxconverter-common", "py37-pytorch"]}]}, {"name": "py-onnxconverter-common", "portdir": "python/py-onnxconverter-common", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/microsoft/onnxconverter-common", "description": "ONNX Converter and Optimization Tools", "long_description": "The onnxconverter-common package provides common functions and utilities for use in converters from various AI frameworks to ONNX. It also enables the different converters to work together to convert a model from mixed frameworks, like a scikit-learn pipeline embedding a xgboost model.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-onnxconverter-common"]}], "depends_on": []}, {"name": "py37-onnxconverter-common", "portdir": "python/py-onnxconverter-common", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/microsoft/onnxconverter-common", "description": "ONNX Converter and Optimization Tools", "long_description": "The onnxconverter-common package provides common functions and utilities for use in converters from various AI frameworks to ONNX. It also enables the different converters to work together to convert a model from mixed frameworks, like a scikit-learn pipeline embedding a xgboost model.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-numpy", "py37-onnx", "py37-protobuf3"]}], "depends_on": [{"type": "run", "ports": ["py37-keras2onnx"]}]}, {"name": "py37-openopt", "portdir": "python/py-openopt", "version": "0.5629", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.org/project/openopt/", "description": "Numerical optimization framework for python", "long_description": "OpenOpt is a free optimization framework for python. It interfaces with many different algorithms for solving optimization problems, some of which are written in C or Fortran.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-numpy", "py37-setproctitle", "py37-sortedcontainers"]}], "depends_on": [{"type": "lib", "ports": ["py-openopt"]}]}, {"name": "qt5-qtwebsockets-docs", "portdir": "aqua/qt5", "version": "5.15.2", "license": "(LGPL-3 or GPL-3 or OpenSSLException)", "platforms": "macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.qt.io", "description": "Documentation for the port qt5-qtwebsockets", "long_description": "Documentation for the port qt5-qtwebsockets", "active": true, "categories": ["aqua"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["qt5-qtwebsockets", "pkgconfig", "clang-9.0", "qt5-qttools", "qt5-sqlite-plugin"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["qt5-qtbase"]}], "depends_on": [{"type": "lib", "ports": ["qt5-qtdoc"]}, {"type": "run", "ports": ["qt5-docs"]}]}, {"name": "qt5-psql-plugin", "portdir": "aqua/qt5", "version": "5.15.2", "license": "(LGPL-3 or GPL-3 or OpenSSLException)", "platforms": "macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.qt.io", "description": "PostgreSQL Database Driver for Qt Tool Kit 5", "long_description": "PostgreSQL Database Driver for Qt Tool Kit 5", "active": true, "categories": ["aqua"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": ["postgresql13", "postgresql12", "postgresql11", "postgresql10", "postgresql96", "postgresql95", "postgresql94", "postgresql84", "debug"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["qt5-qtbase", "postgresql13"]}], "depends_on": []}, {"name": "qt5-sqlite-plugin", "portdir": "aqua/qt5", "version": "5.15.2", "license": "(LGPL-3 or GPL-3 or OpenSSLException)", "platforms": "macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.qt.io", "description": "SQLite Database Driver for Qt Tool Kit 5", "long_description": "SQLite Database Driver for Qt Tool Kit 5", "active": true, "categories": ["aqua"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": ["debug"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["qt5-qtbase", "sqlite3"]}], "depends_on": [{"type": "build", "ports": ["qt5-qtwebsockets-docs", "qt5-qtscript-docs", "qt5-qtremoteobjects-docs", "qt5-qtscxml-docs", "qt5-qt3d-docs", "qt5-qtconnectivity-docs", "qt5-qtgamepad-docs", "qt5-qtspeech-docs", "qt5-qtwebview-docs", "qt5-qttools-docs", "qt5-qtquickcontrols-docs", "py27-pyside2", "py36-pyside2", "py37-pyside2", "py38-pyside2", "py39-pyside2", "qt5-qtcreator-docs", "qt5-qtquickcontrols2-docs", "qt5-qtbase-docs", "qt5-qtwebengine-docs", "qt5-qtquicktimeline-docs", "qt5-qtquick3d-docs", "qbs-docs", "qt5-qtdeclarative-docs", "qt5-qtserialport-docs", "qt5-qtsensors-docs", "qt5-qtcharts-docs", "qt5-qtwebkit-docs", "qt5-qtwebchannel-docs", "qt5-qtimageformats-docs", "qt5-qtvirtualkeyboard-docs", "qt5-qtsvg-docs", "qt5-qtmacextras-docs", "qt5-qtlocation-docs", "qt5-qtlottie-docs", "qt5-qtxmlpatterns-docs", "qt5-qtserialbus-docs", "qt5-qtmultimedia-docs", "qt5-qtdatavis3d-docs", "qt5-qtgraphicaleffects-docs", "qt5-qtpurchasing-docs", "qt5-qtnetworkauth-docs"]}, {"type": "lib", "ports": ["qgis3", "charm-qt5", "paraview", "octave", "qt5-qtdoc", "xca"]}, {"type": "run", "ports": ["quassel", "cool-retro-term", "qt5", "QupZilla"]}]}, {"name": "py38-onnxconverter-common", "portdir": "python/py-onnxconverter-common", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/microsoft/onnxconverter-common", "description": "ONNX Converter and Optimization Tools", "long_description": "The onnxconverter-common package provides common functions and utilities for use in converters from various AI frameworks to ONNX. It also enables the different converters to work together to convert a model from mixed frameworks, like a scikit-learn pipeline embedding a xgboost model.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-numpy", "py38-onnx", "py38-protobuf3"]}], "depends_on": [{"type": "run", "ports": ["py38-transformers", "py38-keras2onnx"]}]}, {"name": "py39-onnxconverter-common", "portdir": "python/py-onnxconverter-common", "version": "1.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/microsoft/onnxconverter-common", "description": "ONNX Converter and Optimization Tools", "long_description": "The onnxconverter-common package provides common functions and utilities for use in converters from various AI frameworks to ONNX. It also enables the different converters to work together to convert a model from mixed frameworks, like a scikit-learn pipeline embedding a xgboost model.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-numpy", "py39-onnx", "py39-protobuf3"]}], "depends_on": [{"type": "lib", "ports": ["py-onnxconverter-common"]}, {"type": "run", "ports": ["py39-transformers", "py39-keras2onnx"]}]}, {"name": "py-opengl-accelerate", "portdir": "python/py-opengl-accelerate", "version": "3.1.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pyopengl.sourceforge.net/", "description": "Acceleration code for PyOpenGL", "long_description": "This set of C (Cython) extensions provides acceleration of common operations for slow points in PyOpenGL 3.x.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-opengl-accelerate"]}], "depends_on": []}, {"name": "py-openid", "portdir": "python/py-openid", "version": "2.2.5", "license": "Apache-2", "platforms": "darwin freebsd", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/openid/python-openid", "description": "Python OpenID Library", "long_description": "Python OpenID Library", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-openid"]}], "depends_on": []}, {"name": "py27-openid", "portdir": "python/py-openid", "version": "2.2.5", "license": "Apache-2", "platforms": "darwin freebsd", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/openid/python-openid", "description": "Python OpenID Library", "long_description": "Python OpenID Library", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-openid"]}]}, {"name": "py-openopt", "portdir": "python/py-openopt", "version": "0.5629", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.org/project/openopt/", "description": "Numerical optimization framework for python", "long_description": "OpenOpt is a free optimization framework for python. It interfaces with many different algorithms for solving optimization problems, some of which are written in C or Fortran.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-openopt"]}], "depends_on": []}, {"name": "py27-openopt", "portdir": "python/py-openopt", "version": "0.5629", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.org/project/openopt/", "description": "Numerical optimization framework for python", "long_description": "OpenOpt is a free optimization framework for python. It interfaces with many different algorithms for solving optimization problems, some of which are written in C or Fortran.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-numpy", "py27-setproctitle", "py27-sortedcontainers"]}], "depends_on": []}, {"name": "py36-openopt", "portdir": "python/py-openopt", "version": "0.5629", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.org/project/openopt/", "description": "Numerical optimization framework for python", "long_description": "OpenOpt is a free optimization framework for python. It interfaces with many different algorithms for solving optimization problems, some of which are written in C or Fortran.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-numpy", "py36-setproctitle", "py36-sortedcontainers"]}], "depends_on": []}, {"name": "py-opengl", "portdir": "python/py-opengl", "version": "3.1.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pyopengl.sourceforge.net/", "description": "Python binding to OpenGL", "long_description": "PyOpenGL is the cross platform Python binding to OpenGL and related APIs. The binding is created using the standard ctypes library and is provided under an extremely liberal BSD-style Open-Source licenses.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-opengl"]}], "depends_on": []}, {"name": "py27-opengl", "portdir": "python/py-opengl", "version": "3.1.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pyopengl.sourceforge.net/", "description": "Python binding to OpenGL", "long_description": "PyOpenGL is the cross platform Python binding to OpenGL and related APIs. The binding is created using the standard ctypes library and is provided under an extremely liberal BSD-style Open-Source licenses.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-Pillow", "py27-opengl-accelerate", "py27-tkinter"]}], "depends_on": [{"type": "lib", "ports": ["py27-pyqtgraph", "impressive", "py27-pyepl", "py27-pymca", "py27-trep"]}, {"type": "run", "ports": ["mandelbrot-set-viewer", "gnuradio-devel", "gnuradio37"]}]}, {"name": "py35-opengl", "portdir": "python/py-opengl", "version": "3.1.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pyopengl.sourceforge.net/", "description": "Python binding to OpenGL", "long_description": "PyOpenGL is the cross platform Python binding to OpenGL and related APIs. The binding is created using the standard ctypes library and is provided under an extremely liberal BSD-style Open-Source licenses.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-Pillow", "py35-opengl-accelerate", "py35-tkinter"]}], "depends_on": [{"type": "lib", "ports": ["py35-pyqtgraph"]}]}, {"name": "py36-opengl", "portdir": "python/py-opengl", "version": "3.1.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pyopengl.sourceforge.net/", "description": "Python binding to OpenGL", "long_description": "PyOpenGL is the cross platform Python binding to OpenGL and related APIs. The binding is created using the standard ctypes library and is provided under an extremely liberal BSD-style Open-Source licenses.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-Pillow", "py36-opengl-accelerate", "py36-tkinter"]}], "depends_on": [{"type": "lib", "ports": ["py36-pyqtgraph"]}, {"type": "run", "ports": ["py36-gpilab-framework"]}]}, {"name": "py37-opengl", "portdir": "python/py-opengl", "version": "3.1.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pyopengl.sourceforge.net/", "description": "Python binding to OpenGL", "long_description": "PyOpenGL is the cross platform Python binding to OpenGL and related APIs. The binding is created using the standard ctypes library and is provided under an extremely liberal BSD-style Open-Source licenses.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-Pillow", "py37-opengl-accelerate", "py37-tkinter"]}], "depends_on": [{"type": "lib", "ports": ["py37-pyqtgraph"]}, {"type": "run", "ports": ["py37-gpilab-framework", "gnuradio", "gnuradio-next"]}]}, {"name": "py38-opengl", "portdir": "python/py-opengl", "version": "3.1.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pyopengl.sourceforge.net/", "description": "Python binding to OpenGL", "long_description": "PyOpenGL is the cross platform Python binding to OpenGL and related APIs. The binding is created using the standard ctypes library and is provided under an extremely liberal BSD-style Open-Source licenses.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-Pillow", "py38-opengl-accelerate", "py38-tkinter"]}], "depends_on": [{"type": "lib", "ports": ["py38-pyqtgraph"]}, {"type": "run", "ports": ["py38-gpilab-framework"]}]}, {"name": "py39-flake8", "portdir": "python/py-flake8", "version": "4.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://flake8.readthedocs.org/", "description": "The modular source code checker: pep8, pyflakes and Co.", "long_description": "Flake8 runs all the tools by launching the single flake8 script. It is is a wrapper around the following tools: PyFlakes, PEP8 and the McCabe script by Ned Batchelder. It displays the warnings in a per-file, merged output, features Git and Mercurial hook and is extendable through flake8.extension entry points.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-codestyle", "py39-entrypoints", "py39-flake8-mccabe", "py39-pyflakes", "py39-setuptools", "python39"]}, {"type": "run", "ports": ["flake8_select"]}, {"type": "test", "ports": ["py39-mock", "py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py39-pyasdf", "py39-sphinx-copybutton", "py-flake8", "py39-python-lsp-server", "py39-flake8-polyfill", "py39-language-server"]}, {"type": "run", "ports": ["py39-pytest-lazy-fixture", "py39-obspy", "py39-transformers", "py39-pytest-flake8"]}, {"type": "test", "ports": ["py39-commonmark", "py39-docker", "buildbot", "py39-colour", "py39-spaCy", "py39-thinc", "py39-allennlp"]}]}, {"name": "py-openslide", "portdir": "python/py-openslide", "version": "1.1.2", "license": "LGPL-2.1 and MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://openslide.org/", "description": "Python binding for the OpenSlide library.", "long_description": "OpenSlide Python allows the OpenSlide library to be used from Python programs. OpenSlide provides a simple interface for reading whole-slide images, also known as virtual slides, which are high-resolution images used in digital pathology. These images can occupy tens of gigabytes when uncompressed, and so cannot be easily read using standard tools or libraries, which are designed for images that can be comfortably uncompressed into RAM. Whole-slide images are typically multi-resolution; OpenSlide allows reading a small amount of image data at the resolution closest to a desired zoom level.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "bgilbert", "github": "bgilbert", "ports_count": 11}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["py38-openslide"]}], "depends_on": []}, {"name": "py27-openslide", "portdir": "python/py-openslide", "version": "1.1.2", "license": "LGPL-2.1 and MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://openslide.org/", "description": "Python binding for the OpenSlide library.", "long_description": "OpenSlide Python allows the OpenSlide library to be used from Python programs. OpenSlide provides a simple interface for reading whole-slide images, also known as virtual slides, which are high-resolution images used in digital pathology. These images can occupy tens of gigabytes when uncompressed, and so cannot be easily read using standard tools or libraries, which are designed for images that can be comfortably uncompressed into RAM. Whole-slide images are typically multi-resolution; OpenSlide allows reading a small amount of image data at the resolution closest to a desired zoom level.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "bgilbert", "github": "bgilbert", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-sphinx"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["openslide", "py27-flask", "python27", "py27-Pillow"]}], "depends_on": []}, {"name": "py35-openslide", "portdir": "python/py-openslide", "version": "1.1.2", "license": "LGPL-2.1 and MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://openslide.org/", "description": "Python binding for the OpenSlide library.", "long_description": "OpenSlide Python allows the OpenSlide library to be used from Python programs. OpenSlide provides a simple interface for reading whole-slide images, also known as virtual slides, which are high-resolution images used in digital pathology. These images can occupy tens of gigabytes when uncompressed, and so cannot be easily read using standard tools or libraries, which are designed for images that can be comfortably uncompressed into RAM. Whole-slide images are typically multi-resolution; OpenSlide allows reading a small amount of image data at the resolution closest to a desired zoom level.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "bgilbert", "github": "bgilbert", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-sphinx"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["openslide", "py35-flask", "python35", "py35-Pillow"]}], "depends_on": []}, {"name": "py36-openslide", "portdir": "python/py-openslide", "version": "1.1.2", "license": "LGPL-2.1 and MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://openslide.org/", "description": "Python binding for the OpenSlide library.", "long_description": "OpenSlide Python allows the OpenSlide library to be used from Python programs. OpenSlide provides a simple interface for reading whole-slide images, also known as virtual slides, which are high-resolution images used in digital pathology. These images can occupy tens of gigabytes when uncompressed, and so cannot be easily read using standard tools or libraries, which are designed for images that can be comfortably uncompressed into RAM. Whole-slide images are typically multi-resolution; OpenSlide allows reading a small amount of image data at the resolution closest to a desired zoom level.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "bgilbert", "github": "bgilbert", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-sphinx"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["openslide", "py36-flask", "python36", "py36-Pillow"]}], "depends_on": []}, {"name": "py37-openslide", "portdir": "python/py-openslide", "version": "1.1.2", "license": "LGPL-2.1 and MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://openslide.org/", "description": "Python binding for the OpenSlide library.", "long_description": "OpenSlide Python allows the OpenSlide library to be used from Python programs. OpenSlide provides a simple interface for reading whole-slide images, also known as virtual slides, which are high-resolution images used in digital pathology. These images can occupy tens of gigabytes when uncompressed, and so cannot be easily read using standard tools or libraries, which are designed for images that can be comfortably uncompressed into RAM. Whole-slide images are typically multi-resolution; OpenSlide allows reading a small amount of image data at the resolution closest to a desired zoom level.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "bgilbert", "github": "bgilbert", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-sphinx"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["openslide", "py37-flask", "python37", "py37-Pillow"]}], "depends_on": []}, {"name": "py38-openslide", "portdir": "python/py-openslide", "version": "1.1.2", "license": "LGPL-2.1 and MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://openslide.org/", "description": "Python binding for the OpenSlide library.", "long_description": "OpenSlide Python allows the OpenSlide library to be used from Python programs. OpenSlide provides a simple interface for reading whole-slide images, also known as virtual slides, which are high-resolution images used in digital pathology. These images can occupy tens of gigabytes when uncompressed, and so cannot be easily read using standard tools or libraries, which are designed for images that can be comfortably uncompressed into RAM. Whole-slide images are typically multi-resolution; OpenSlide allows reading a small amount of image data at the resolution closest to a desired zoom level.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "bgilbert", "github": "bgilbert", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-sphinx"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["openslide", "py38-flask", "python38", "py38-Pillow"]}], "depends_on": [{"type": "lib", "ports": ["py-openslide"]}]}, {"name": "py-openssl", "portdir": "python/py-openssl", "version": "19.1.0", "license": "Apache-2", "platforms": "darwin freebsd", "epoch": 0, "replaced_by": null, "homepage": "https://pyopenssl.org/", "description": "python wrapper around the OpenSSL library", "long_description": "This python module is a rather thin wrapper around (a subset of) the OpenSSL library. With thin wrapper a lot of the object methods do nothing more than calling a corresponding function in the OpenSSL library.", "active": true, "categories": ["devel", "security", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-openssl"]}], "depends_on": []}, {"name": "py27-openssl", "portdir": "python/py-openssl", "version": "19.1.0", "license": "Apache-2", "platforms": "darwin freebsd", "epoch": 0, "replaced_by": null, "homepage": "https://pyopenssl.org/", "description": "python wrapper around the OpenSSL library", "long_description": "This python module is a rather thin wrapper around (a subset of) the OpenSSL library. With thin wrapper a lot of the object methods do nothing more than calling a corresponding function in the OpenSSL library.", "active": true, "categories": ["devel", "security", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": ["docs"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["openssl", "python27", "py27-cryptography", "py27-six"]}], "depends_on": [{"type": "lib", "ports": ["py27-service_identity", "py27-gwdatafind", "py27-lscsoft-glue", "py27-scrapy", "gajim", "py27-twilio", "py27-ndg_httpsclient", "py27-backports-ssl", "py27-epsilon"]}, {"type": "run", "ports": ["lscsoft-deps", "hellanzb"]}, {"type": "test", "ports": ["py27-trustme", "py27-libcloud"]}]}, {"name": "py37-oset", "portdir": "python/py-oset", "version": "0.1.3", "license": "PSF", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gitorious.com/sleipnir/python-oset", "description": "python ordered set implementation", "long_description": "python ordered set implementation", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-sphinxcontrib-bibtex"]}]}, {"name": "py39-openslide", "portdir": "python/py-openslide", "version": "1.1.2", "license": "LGPL-2.1 and MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://openslide.org/", "description": "Python binding for the OpenSlide library.", "long_description": "OpenSlide Python allows the OpenSlide library to be used from Python programs. OpenSlide provides a simple interface for reading whole-slide images, also known as virtual slides, which are high-resolution images used in digital pathology. These images can occupy tens of gigabytes when uncompressed, and so cannot be easily read using standard tools or libraries, which are designed for images that can be comfortably uncompressed into RAM. Whole-slide images are typically multi-resolution; OpenSlide allows reading a small amount of image data at the resolution closest to a desired zoom level.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "bgilbert", "github": "bgilbert", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-sphinx"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["openslide", "py39-flask", "python39", "py39-Pillow"]}], "depends_on": []}]}