{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=262", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=260", "results": [{"name": "plantuml", "portdir": "java/plantuml", "version": "1.2021.14", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://plantuml.com/", "description": "PlantUML is a tool for generating UML diagrams from textual description.", "long_description": "PlantUML is a tool for generating UML diagrams from textual description.", "active": true, "categories": ["java", "editors"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["apache-ant", "clang-9.0", "jlatexmath"]}, {"type": "lib", "ports": ["openjdk11"]}], "depends_on": []}, {"name": "py34-ctypeslib2", "portdir": "python/py-ctypeslib2", "version": "2.3.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": "py39-ctypeslib2", "homepage": "https://www.macports.org", "description": "Obsolete port, replaced by py39-ctypeslib2", "long_description": "This port has been replaced by py39-ctypeslib2.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": [null]}, {"type": "fetch", "ports": [null]}, {"type": "lib", "ports": [null]}, {"type": "patch", "ports": [null]}, {"type": "run", "ports": [null]}, {"type": "test", "ports": [null]}], "depends_on": []}, {"name": "py27-ctags", "portdir": "python/py-ctags", "version": "1.0.5", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/python-ctags/", "description": "Exuberant Ctags indexing python bindings", "long_description": "Exuberant Ctags supports indexing of many modern programming languages. Python is a powerful scriptable dynamic language. Using Python to access Ctags index file is a natural fit in extending an application's capability to examine source code. This project wrote a wrapper for readtags.c. I have been using the package in a couple of projects and it has been shown that it could easily handle hundreds source files.", "active": true, "categories": ["python"], "maintainers": [{"name": "ahkdiep", "github": "", "ports_count": 2}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-ctags"]}]}, {"name": "py35-ctypeslib2", "portdir": "python/py-ctypeslib2", "version": "2.3.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": "py39-ctypeslib2", "homepage": "https://www.macports.org", "description": "Obsolete port, replaced by py39-ctypeslib2", "long_description": "This port has been replaced by py39-ctypeslib2.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": [null]}, {"type": "fetch", "ports": [null]}, {"type": "lib", "ports": [null]}, {"type": "patch", "ports": [null]}, {"type": "run", "ports": [null]}, {"type": "test", "ports": [null]}], "depends_on": []}, {"name": "py-cubes", "portdir": "python/py-cubes", "version": "1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://cubes.databrewery.org/", "description": "Lightweight framework for Online Analytical Processing", "long_description": "Lightweight framework for Online Analytical Processing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-cubes"]}], "depends_on": []}, {"name": "py27-cubes", "portdir": "python/py-cubes", "version": "1.0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://cubes.databrewery.org/", "description": "Lightweight framework for Online Analytical Processing", "long_description": "Lightweight framework for Online Analytical Processing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-dateutil", "py27-jsonschema", "py27-setuptools", "py27-tz"]}], "depends_on": []}, {"name": "py-ctypeslib2", "portdir": "python/py-ctypeslib2", "version": "2.3.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/trolldbois/ctypeslib", "description": "Generate python ctypes classes from C headers.", "long_description": "This fork of ctypeslib is mainly about using the libclang >= 3.7 python bindings to generate python code from C source code, instead of gccxml.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-ctypeslib2"]}], "depends_on": []}, {"name": "py37-ctypeslib2", "portdir": "python/py-ctypeslib2", "version": "2.3.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/trolldbois/ctypeslib", "description": "Generate python ctypes classes from C headers.", "long_description": "This fork of ctypeslib is mainly about using the libclang >= 3.7 python bindings to generate python code from C source code, instead of gccxml.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-clang"]}], "depends_on": []}, {"name": "py38-ctypeslib2", "portdir": "python/py-ctypeslib2", "version": "2.3.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/trolldbois/ctypeslib", "description": "Generate python ctypes classes from C headers.", "long_description": "This fork of ctypeslib is mainly about using the libclang >= 3.7 python bindings to generate python code from C source code, instead of gccxml.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-clang"]}], "depends_on": []}, {"name": "py39-ctypeslib2", "portdir": "python/py-ctypeslib2", "version": "2.3.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/trolldbois/ctypeslib", "description": "Generate python ctypes classes from C headers.", "long_description": "This fork of ctypeslib is mainly about using the libclang >= 3.7 python bindings to generate python code from C source code, instead of gccxml.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-clang"]}], "depends_on": [{"type": "lib", "ports": ["py-ctypeslib2"]}]}, {"name": "py35-cubes", "portdir": "python/py-cubes", "version": "1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://cubes.databrewery.org/", "description": "Lightweight framework for Online Analytical Processing", "long_description": "Lightweight framework for Online Analytical Processing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35", "py35-dateutil", "py35-expressions", "py35-jsonschema", "py35-setuptools"]}], "depends_on": []}, {"name": "py36-cubes", "portdir": "python/py-cubes", "version": "1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://cubes.databrewery.org/", "description": "Lightweight framework for Online Analytical Processing", "long_description": "Lightweight framework for Online Analytical Processing", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-dateutil", "py36-expressions", "py36-jsonschema", "py36-setuptools"]}], "depends_on": [{"type": "lib", "ports": ["py-cubes"]}]}, {"name": "py-cucumber-tag-expressions", "portdir": "python/py-cucumber-tag-expressions", "version": "3.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cucumber/tag-expressions-python", "description": "Tag Expression Parser for Python", "long_description": "Cucumber can be used to implement automated tests based on scenarios described in your Gherkin feature files.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-cucumber-tag-expressions"]}], "depends_on": []}, {"name": "py27-cucumber-tag-expressions", "portdir": "python/py-cucumber-tag-expressions", "version": "3.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cucumber/tag-expressions-python", "description": "Tag Expression Parser for Python", "long_description": "Cucumber can be used to implement automated tests based on scenarios described in your Gherkin feature files.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "test", "ports": ["py27-path", "py27-pylint", "py27-pytest", "py27-pytest-html", "py27-tox", "py27-coverage", "py27-invoke"]}], "depends_on": [{"type": "run", "ports": ["py27-behave"]}]}, {"name": "py36-cucumber-tag-expressions", "portdir": "python/py-cucumber-tag-expressions", "version": "3.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cucumber/tag-expressions-python", "description": "Tag Expression Parser for Python", "long_description": "Cucumber can be used to implement automated tests based on scenarios described in your Gherkin feature files.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "test", "ports": ["py36-path", "py36-pylint", "py36-pytest", "py36-pytest-html", "py36-tox", "py36-coverage", "py36-invoke"]}], "depends_on": [{"type": "run", "ports": ["py36-behave"]}]}, {"name": "py37-cucumber-tag-expressions", "portdir": "python/py-cucumber-tag-expressions", "version": "3.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cucumber/tag-expressions-python", "description": "Tag Expression Parser for Python", "long_description": "Cucumber can be used to implement automated tests based on scenarios described in your Gherkin feature files.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-path", "py37-pylint", "py37-pytest", "py37-pytest-html", "py37-tox", "py37-coverage", "py37-invoke"]}], "depends_on": [{"type": "run", "ports": ["py37-behave"]}]}, {"name": "py38-cucumber-tag-expressions", "portdir": "python/py-cucumber-tag-expressions", "version": "3.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cucumber/tag-expressions-python", "description": "Tag Expression Parser for Python", "long_description": "Cucumber can be used to implement automated tests based on scenarios described in your Gherkin feature files.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-path", "py38-pylint", "py38-pytest", "py38-pytest-html", "py38-tox", "py38-coverage", "py38-invoke"]}], "depends_on": [{"type": "run", "ports": ["py38-behave"]}]}, {"name": "py39-cucumber-tag-expressions", "portdir": "python/py-cucumber-tag-expressions", "version": "3.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cucumber/tag-expressions-python", "description": "Tag Expression Parser for Python", "long_description": "Cucumber can be used to implement automated tests based on scenarios described in your Gherkin feature files.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "test", "ports": ["py39-path", "py39-pylint", "py39-pytest", "py39-pytest-html", "py39-tox", "py39-coverage", "py39-invoke"]}], "depends_on": [{"type": "lib", "ports": ["py-cucumber-tag-expressions"]}, {"type": "run", "ports": ["py39-behave"]}]}, {"name": "py-curlish", "portdir": "python/py-curlish", "version": "1.22", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/fireteam/curlish", "description": "curl with flames on top", "long_description": "Helpers for using OAuth 2.0 with curl", "active": true, "categories": ["devel", "net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-curlish"]}], "depends_on": []}, {"name": "py27-curlish", "portdir": "python/py-curlish", "version": "1.22", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/fireteam/curlish", "description": "curl with flames on top", "long_description": "Helpers for using OAuth 2.0 with curl", "active": true, "categories": ["devel", "net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "curl"]}, {"type": "run", "ports": ["curlish_select"]}], "depends_on": [{"type": "lib", "ports": ["py-curlish"]}]}, {"name": "py-cvxmod", "portdir": "python/py-cvxmod", "version": "0.4.6", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://cvxmod.net/", "description": "Python module for convex optimization", "long_description": "CVXMOD is a Python-based tool for expressing and solving convex optimization problems. It uses CVXOPT as its solver. It is developed by Jacob Mattingley, as PhD work under Stephen Boyd at Stanford University.", "active": true, "categories": ["devel", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-cvxmod"]}], "depends_on": []}, {"name": "py27-cvxmod", "portdir": "python/py-cvxmod", "version": "0.4.6", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://cvxmod.net/", "description": "Python module for convex optimization", "long_description": "CVXMOD is a Python-based tool for expressing and solving convex optimization problems. It uses CVXOPT as its solver. It is developed by Jacob Mattingley, as PhD work under Stephen Boyd at Stanford University.", "active": true, "categories": ["devel", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-cvxopt"]}], "depends_on": [{"type": "lib", "ports": ["py-cvxmod"]}]}, {"name": "py-cvxopt", "portdir": "python/py-cvxopt", "version": "1.2.5", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://cvxopt.org/", "description": "Python module for convex optimization", "long_description": "CVXOPT is a free software package for convex optimization based on the Python programming language. It can be used with the interactive Python interpreter, on the command line by executing Python scripts, or integrated in other software via Python extension modules. Its main purpose is to make the development of software for convex optimization applications straightforward by building on Python's extensive standard library and on the strengths of Python as a high-level programming language.", "active": true, "categories": ["math", "python"], "maintainers": [{"name": "jjstickel", "github": "jjstickel", "ports_count": 113}], "variants": ["accelerate", "atlas", "openblas"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-cvxopt"]}], "depends_on": []}, {"name": "py27-cvxopt", "portdir": "python/py-cvxopt", "version": "1.2.5", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://cvxopt.org/", "description": "Python module for convex optimization", "long_description": "CVXOPT is a free software package for convex optimization based on the Python programming language. It can be used with the interactive Python interpreter, on the command line by executing Python scripts, or integrated in other software via Python extension modules. Its main purpose is to make the development of software for convex optimization applications straightforward by building on Python's extensive standard library and on the strengths of Python as a high-level programming language.", "active": true, "categories": ["math", "python"], "maintainers": [{"name": "jjstickel", "github": "jjstickel", "ports_count": 113}], "variants": ["accelerate", "atlas", "openblas", "gsl", "fftw", "glpk", "dsdp", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["SuiteSparse_config", "SuiteSparse_AMD", "SuiteSparse_COLAMD", "SuiteSparse_CHOLMOD", "python27", "fftw-3", "glpk", "gsl", "SuiteSparse_UMFPACK", "DSDP"]}], "depends_on": [{"type": "lib", "ports": ["py27-stfio", "stimfit", "py27-cvxmod"]}]}, {"name": "py35-cvxopt", "portdir": "python/py-cvxopt", "version": "1.2.5", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://cvxopt.org/", "description": "Python module for convex optimization", "long_description": "CVXOPT is a free software package for convex optimization based on the Python programming language. It can be used with the interactive Python interpreter, on the command line by executing Python scripts, or integrated in other software via Python extension modules. Its main purpose is to make the development of software for convex optimization applications straightforward by building on Python's extensive standard library and on the strengths of Python as a high-level programming language.", "active": true, "categories": ["math", "python"], "maintainers": [{"name": "jjstickel", "github": "jjstickel", "ports_count": 113}], "variants": ["accelerate", "atlas", "openblas", "gsl", "fftw", "glpk", "dsdp", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["SuiteSparse_config", "SuiteSparse_AMD", "SuiteSparse_COLAMD", "SuiteSparse_CHOLMOD", "python35", "fftw-3", "glpk", "gsl", "SuiteSparse_UMFPACK", "DSDP"]}], "depends_on": [{"type": "lib", "ports": ["py35-stfio"]}]}, {"name": "py38-cvxopt", "portdir": "python/py-cvxopt", "version": "1.2.5", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://cvxopt.org/", "description": "Python module for convex optimization", "long_description": "CVXOPT is a free software package for convex optimization based on the Python programming language. It can be used with the interactive Python interpreter, on the command line by executing Python scripts, or integrated in other software via Python extension modules. Its main purpose is to make the development of software for convex optimization applications straightforward by building on Python's extensive standard library and on the strengths of Python as a high-level programming language.", "active": true, "categories": ["math", "python"], "maintainers": [{"name": "jjstickel", "github": "jjstickel", "ports_count": 113}], "variants": ["accelerate", "atlas", "openblas", "gsl", "fftw", "glpk", "dsdp", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["SuiteSparse_config", "SuiteSparse_AMD", "SuiteSparse_COLAMD", "SuiteSparse_CHOLMOD", "python38", "fftw-3", "glpk", "gsl", "SuiteSparse_UMFPACK", "DSDP"]}], "depends_on": [{"type": "lib", "ports": ["py-cvxopt"]}]}, {"name": "py38-cycler", "portdir": "python/py-cycler", "version": "0.11.0", "license": "(PSF or BSD)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/matplotlib/cycler", "description": "cycler: composable cycles", "long_description": "cycler: composable cycles", "active": true, "categories": ["math", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-six"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py38-matplotlib"]}]}, {"name": "py39-cycler", "portdir": "python/py-cycler", "version": "0.11.0", "license": "(PSF or BSD)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/matplotlib/cycler", "description": "cycler: composable cycles", "long_description": "cycler: composable cycles", "active": true, "categories": ["math", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-six"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-cycler", "py39-matplotlib"]}]}, {"name": "py-cython", "portdir": "python/py-cython", "version": "0.29.24", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.cython.org/", "description": "A language for writing C extension modules for Python.", "long_description": "Cython is a language that makes writing C extensions for the Python language as easy as Python itself. Cython is based on the well-known Pyrex, but supports more cutting edge functionality and optimizations", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-cython"]}], "depends_on": []}, {"name": "py-cytoolz", "portdir": "python/py-cytoolz", "version": "0.11.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytoolz/cytoolz/", "description": "Cython implementation of Toolz.", "long_description": "Cython implementation of Toolz.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-cytoolz"]}], "depends_on": []}, {"name": "py-cymem", "portdir": "python/py-cymem", "version": "2.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/explosion/cymem", "description": "Cython memory pool for RAII-style memory management", "long_description": "Cython memory pool for RAII-style memory management", "active": true, "categories": ["python"], "maintainers": [{"name": "jonesc", "github": "cjones051073", "ports_count": 175}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-cymem"]}], "depends_on": []}, {"name": "py37-curtsies", "portdir": "python/py-curtsies", "version": "0.3.10", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://curtsies.readthedocs.io", "description": "Curses-like terminal wrapper, with colored strings", "long_description": "Curses-like terminal wrapper, with colored strings", "active": true, "categories": ["python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-blessings", "py37-backports.cached-property", "py37-cwcwidth"]}], "depends_on": [{"type": "lib", "ports": ["py37-bpython"]}]}, {"name": "py27-cymem", "portdir": "python/py-cymem", "version": "2.0.6", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/explosion/cymem", "description": "Cython memory pool for RAII-style memory management", "long_description": "Cython memory pool for RAII-style memory management", "active": true, "categories": ["python"], "maintainers": [{"name": "jonesc", "github": "cjones051073", "ports_count": 175}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-cython"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py27-preshed"]}]}, {"name": "py38-boto3", "portdir": "python/py-boto3", "version": "1.20.5", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/boto/boto3", "description": "The AWS SDK for Python", "long_description": "Boto3 is the Amazon Web Services (AWS) Software Development Kit (SDK) for Python, which allows Python developers to write software that makes use of services like Amazon S3 and Amazon EC2.", "active": true, "categories": ["python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}, {"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-botocore", "py38-jmespath", "py38-s3transfer"]}], "depends_on": [{"type": "run", "ports": ["py38-allennlp", "py38-aws-sam-translator", "py38-photomosaic"]}]}, {"name": "py35-pytest-xdist", "portdir": "python/py-pytest-xdist", "version": "2.2.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/pytest-xdist", "description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "long_description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools_scm"]}, {"type": "lib", "ports": ["py35-pytest", "py35-pytest-forked", "python35", "py35-six", "py35-setuptools", "py35-execnet"]}], "depends_on": []}, {"name": "py310-botocore", "portdir": "python/py-botocore", "version": "1.23.5", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/boto/botocore", "description": "Low level data driven core of boto 3.", "long_description": "A low-level interface to a growing number of Amazon Web Services. The botocore package is the foundation for the AWS CLI as well as boto3.", "active": true, "categories": ["python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}, {"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools"]}, {"type": "lib", "ports": ["python310", "py310-urllib3", "py310-dateutil", "py310-jmespath"]}], "depends_on": [{"type": "lib", "ports": ["py310-s3transfer", "py310-awscli"]}, {"type": "run", "ports": ["py310-boto3"]}]}, {"name": "py-daemon", "portdir": "python/py-daemon", "version": "1.0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.clapper.org/software/python/daemon/", "description": "Module to daemonize the calling process", "long_description": "Module to daemonize the calling process", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-daemon"]}], "depends_on": []}, {"name": "py27-daemon", "portdir": "python/py-daemon", "version": "1.0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.clapper.org/software/python/daemon/", "description": "Module to daemonize the calling process", "long_description": "Module to daemonize the calling process", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-daemon", "bcfg2"]}]}, {"name": "py-dap", "portdir": "python/py-dap", "version": "3.2.2", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pydap.readthedocs.org/en/latest", "description": "Python implementation of the Data Access Protocol", "long_description": "A scientific protocol for data access developed by the OPeNDAP team (http://opendap.org). This implementation is developed from scratch, following the latest specification of the protocol (DAP 2.0 Draft Community Standard 2005/04/27).", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-dap"]}], "depends_on": []}, {"name": "py37-dap", "portdir": "python/py-dap", "version": "3.2.2", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pydap.readthedocs.org/en/latest", "description": "Python implementation of the Data Access Protocol", "long_description": "A scientific protocol for data access developed by the OPeNDAP team (http://opendap.org). This implementation is developed from scratch, following the latest specification of the protocol (DAP 2.0 Draft Community Standard 2005/04/27).", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-beautifulsoup4", "py37-docopt", "py37-jinja2", "python37", "py37-setuptools", "py37-six", "py37-webob", "py37-numpy"]}], "depends_on": []}, {"name": "py38-dap", "portdir": "python/py-dap", "version": "3.2.2", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pydap.readthedocs.org/en/latest", "description": "Python implementation of the Data Access Protocol", "long_description": "A scientific protocol for data access developed by the OPeNDAP team (http://opendap.org). This implementation is developed from scratch, following the latest specification of the protocol (DAP 2.0 Draft Community Standard 2005/04/27).", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-beautifulsoup4", "py38-docopt", "py38-jinja2", "python38", "py38-setuptools", "py38-six", "py38-webob", "py38-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-dap"]}]}, {"name": "py-aiobotocore", "portdir": "python/py-aiobotocore", "version": "1.3.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiobotocore", "description": "Async client for amazon services", "long_description": "Async client for amazon services", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-aiobotocore"]}], "depends_on": []}, {"name": "py36-aiobotocore", "portdir": "python/py-aiobotocore", "version": "1.3.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiobotocore", "description": "Async client for amazon services", "long_description": "Async client for amazon services", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["py36-aioitertools", "python36", "py36-wrapt", "py36-botocore", "py36-aiohttp"]}], "depends_on": [{"type": "lib", "ports": ["py36-s3fs"]}]}, {"name": "py37-aiobotocore", "portdir": "python/py-aiobotocore", "version": "1.3.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiobotocore", "description": "Async client for amazon services", "long_description": "Async client for amazon services", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-aioitertools", "python37", "py37-wrapt", "py37-botocore", "py37-aiohttp"]}], "depends_on": [{"type": "lib", "ports": ["py37-s3fs"]}]}, {"name": "py38-aiobotocore", "portdir": "python/py-aiobotocore", "version": "1.3.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiobotocore", "description": "Async client for amazon services", "long_description": "Async client for amazon services", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["py38-aioitertools", "python38", "py38-wrapt", "py38-botocore", "py38-aiohttp"]}], "depends_on": [{"type": "lib", "ports": ["py38-s3fs"]}]}, {"name": "py39-aiobotocore", "portdir": "python/py-aiobotocore", "version": "1.3.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiobotocore", "description": "Async client for amazon services", "long_description": "Async client for amazon services", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["py39-aioitertools", "python39", "py39-wrapt", "py39-botocore", "py39-aiohttp"]}], "depends_on": [{"type": "lib", "ports": ["py39-s3fs", "py-aiobotocore"]}]}, {"name": "py-databases", "portdir": "python/py-databases", "version": "0.4.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/encode/databases", "description": "Async database support for Python.", "long_description": "Databases gives you simple asyncio support for a range of databases. It allows you to make queries using the powerful SQLAlchemy Core expression language, and provides support for PostgreSQL, MySQL, and SQLite. Databases is suitable for integrating against any async Web framework, such as Starlette, Sanic, Responder, Quart, aiohttp, Tornado, or FastAPI.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-databases"]}], "depends_on": []}, {"name": "py-requests-unixsocket", "portdir": "python/py-requests-unixsocket", "version": "0.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "HTTP via a UNIX domain socket", "long_description": "This module uses py-requests to talk HTTP via a UNIX domain socket.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-requests-unixsocket"]}], "depends_on": []}, {"name": "py37-databases", "portdir": "python/py-databases", "version": "0.4.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/encode/databases", "description": "Async database support for Python.", "long_description": "Databases gives you simple asyncio support for a range of databases. It allows you to make queries using the powerful SQLAlchemy Core expression language, and provides support for PostgreSQL, MySQL, and SQLite. Databases is suitable for integrating against any async Web framework, such as Starlette, Sanic, Responder, Quart, aiohttp, Tornado, or FastAPI.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}, {"type": "run", "ports": ["py37-aiosqlite", "py37-sqlalchemy", "py37-asyncpg", "py37-aiomysql", "py37-aiopg"]}, {"type": "test", "ports": ["py37-pytest", "py37-starlette"]}], "depends_on": [{"type": "test", "ports": ["py37-starlette"]}]}, {"name": "py38-databases", "portdir": "python/py-databases", "version": "0.4.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/encode/databases", "description": "Async database support for Python.", "long_description": "Databases gives you simple asyncio support for a range of databases. It allows you to make queries using the powerful SQLAlchemy Core expression language, and provides support for PostgreSQL, MySQL, and SQLite. Databases is suitable for integrating against any async Web framework, such as Starlette, Sanic, Responder, Quart, aiohttp, Tornado, or FastAPI.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-setuptools"]}, {"type": "run", "ports": ["py38-aiosqlite", "py38-sqlalchemy", "py38-asyncpg", "py38-aiomysql", "py38-aiopg"]}, {"type": "test", "ports": ["py38-pytest", "py38-starlette"]}], "depends_on": [{"type": "test", "ports": ["py38-starlette"]}]}]}