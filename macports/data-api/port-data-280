{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=281", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=279", "results": [{"name": "py37-gunicorn", "portdir": "python/py-gunicorn", "version": "20.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gunicorn.org", "description": "WSGI HTTP Server for UNIX", "long_description": "Gunicorn 'Green Unicorn' is a Python WSGI HTTP Server for UNIX. It's a pre-fork worker model ported from Ruby's Unicorn project. The Gunicorn server is broadly compatible with various web frameworks, simply implemented, light on server resource usage, and fairly speedy.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest", "py37-pytest-cov"]}], "depends_on": [{"type": "run", "ports": ["py37-tensor2tensor"]}]}, {"name": "py38-gunicorn", "portdir": "python/py-gunicorn", "version": "20.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gunicorn.org", "description": "WSGI HTTP Server for UNIX", "long_description": "Gunicorn 'Green Unicorn' is a Python WSGI HTTP Server for UNIX. It's a pre-fork worker model ported from Ruby's Unicorn project. The Gunicorn server is broadly compatible with various web frameworks, simply implemented, light on server resource usage, and fairly speedy.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-pytest", "py38-pytest-cov"]}], "depends_on": [{"type": "run", "ports": ["py38-tensor2tensor"]}]}, {"name": "py39-gunicorn", "portdir": "python/py-gunicorn", "version": "20.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gunicorn.org", "description": "WSGI HTTP Server for UNIX", "long_description": "Gunicorn 'Green Unicorn' is a Python WSGI HTTP Server for UNIX. It's a pre-fork worker model ported from Ruby's Unicorn project. The Gunicorn server is broadly compatible with various web frameworks, simply implemented, light on server resource usage, and fairly speedy.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "test", "ports": ["py39-pytest", "py39-pytest-cov"]}], "depends_on": [{"type": "lib", "ports": ["py-gunicorn"]}, {"type": "run", "ports": ["py39-tensor2tensor"]}]}, {"name": "py-gviz_api", "portdir": "python/py-gviz_api", "version": "1.7.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/google-visualization-python/", "description": "Python API for Google Visualization", "long_description": "The Python API for Google Visualization makes it easy to convert python data structures into Google Visualization JS code, DataTable JSon construction string or JSON response for Query object.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-gviz_api"]}], "depends_on": []}, {"name": "py27-gviz_api", "portdir": "python/py-gviz_api", "version": "1.7.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/google-visualization-python/", "description": "Python API for Google Visualization", "long_description": "The Python API for Google Visualization makes it easy to convert python data structures into Google Visualization JS code, DataTable JSon construction string or JSON response for Query object.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-gviz_api"]}]}, {"name": "py-gwdatafind", "portdir": "python/py-gwdatafind", "version": "1.0.2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwdatafind.readthedocs.io", "description": "The client library for the LIGO Data Replicator (LDR) service.", "long_description": "The DataFind service allows users to query for the location of Gravitational-Wave Frame (GWF) files containing data from the current gravitational-wave detectors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-gwdatafind"]}], "depends_on": []}, {"name": "py27-gwdatafind", "portdir": "python/py-gwdatafind", "version": "1.0.2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwdatafind.readthedocs.io", "description": "The client library for the LIGO Data Replicator (LDR) service.", "long_description": "The DataFind service allows users to query for the location of Gravitational-Wave Frame (GWF) files containing data from the current gravitational-wave detectors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-ligo-segments", "py27-openssl", "py27-six"]}], "depends_on": [{"type": "lib", "ports": ["py27-dqsegdb2"]}]}, {"name": "py36-gwdatafind", "portdir": "python/py-gwdatafind", "version": "1.0.2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwdatafind.readthedocs.io", "description": "The client library for the LIGO Data Replicator (LDR) service.", "long_description": "The DataFind service allows users to query for the location of Gravitational-Wave Frame (GWF) files containing data from the current gravitational-wave detectors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-ligo-segments", "py36-openssl", "py36-six"]}], "depends_on": [{"type": "lib", "ports": ["py36-dqsegdb2"]}]}, {"name": "py37-gwdatafind", "portdir": "python/py-gwdatafind", "version": "1.0.2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwdatafind.readthedocs.io", "description": "The client library for the LIGO Data Replicator (LDR) service.", "long_description": "The DataFind service allows users to query for the location of Gravitational-Wave Frame (GWF) files containing data from the current gravitational-wave detectors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-ligo-segments", "py37-openssl", "py37-six"]}], "depends_on": [{"type": "lib", "ports": ["py37-dqsegdb2"]}]}, {"name": "py38-humanize", "portdir": "python/py-humanize", "version": "0.5.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/humanize/", "description": "Python humanize utilities", "long_description": "Python humanize utilities", "active": true, "categories": ["python"], "maintainers": [{"name": "xeron.oskom", "github": "xeron", "ports_count": 85}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["magic-wormhole"]}]}, {"name": "py38-gwdatafind", "portdir": "python/py-gwdatafind", "version": "1.0.2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwdatafind.readthedocs.io", "description": "The client library for the LIGO Data Replicator (LDR) service.", "long_description": "The DataFind service allows users to query for the location of Gravitational-Wave Frame (GWF) files containing data from the current gravitational-wave detectors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-ligo-segments", "py38-openssl", "py38-six"]}], "depends_on": [{"type": "lib", "ports": ["py38-dqsegdb2", "py-gwdatafind"]}]}, {"name": "py-gwosc", "portdir": "python/py-gwosc", "version": "0.3.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwosc.readthedocs.io", "description": "A python interface to the GW Open Science data archive", "long_description": "The `gwosc` package provides an interface to querying the open data releases hosted on <https://losc.ligo.org> from the LIGO and Virgo gravitational-wave observatories.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-gwosc"]}], "depends_on": []}, {"name": "py27-gwosc", "portdir": "python/py-gwosc", "version": "0.3.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwosc.readthedocs.io", "description": "A python interface to the GW Open Science data archive", "long_description": "The `gwosc` package provides an interface to querying the open data releases hosted on <https://losc.ligo.org> from the LIGO and Virgo gravitational-wave observatories.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-six"]}], "depends_on": []}, {"name": "py36-gwosc", "portdir": "python/py-gwosc", "version": "0.3.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwosc.readthedocs.io", "description": "A python interface to the GW Open Science data archive", "long_description": "The `gwosc` package provides an interface to querying the open data releases hosted on <https://losc.ligo.org> from the LIGO and Virgo gravitational-wave observatories.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-six"]}], "depends_on": []}, {"name": "py37-gwosc", "portdir": "python/py-gwosc", "version": "0.3.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwosc.readthedocs.io", "description": "A python interface to the GW Open Science data archive", "long_description": "The `gwosc` package provides an interface to querying the open data releases hosted on <https://losc.ligo.org> from the LIGO and Virgo gravitational-wave observatories.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-six"]}], "depends_on": []}, {"name": "py38-gwosc", "portdir": "python/py-gwosc", "version": "0.3.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwosc.readthedocs.io", "description": "A python interface to the GW Open Science data archive", "long_description": "The `gwosc` package provides an interface to querying the open data releases hosted on <https://losc.ligo.org> from the LIGO and Virgo gravitational-wave observatories.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-six"]}], "depends_on": [{"type": "lib", "ports": ["py-gwosc"]}]}, {"name": "py36-gwpy", "portdir": "python/py-gwpy", "version": "0.12.2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwpy.github.io", "description": "A python package for gravitational-wave astrophysics", "long_description": "GWpy is a collaboration-driven Python package providing tools for studying data from ground-based gravitational-wave detectors.", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["py36-dateutil", "py36-ligo-segments", "py36-ligotimegps", "py36-matplotlib", "python36", "py36-scipy", "py36-six", "py36-tqdm", "py36-numpy", "py36-astropy"]}], "depends_on": []}, {"name": "py-gym", "portdir": "python/py-gym", "version": "0.18.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/openai/gym", "description": "The OpenAI Gym A toolkit for developing and comparing your reinforcement learning agents.", "long_description": "The OpenAI Gym A toolkit for developing and comparing your reinforcement learning agents.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-gym"]}], "depends_on": []}, {"name": "py27-gwpy", "portdir": "python/py-gwpy", "version": "0.12.2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwpy.github.io", "description": "A python package for gravitational-wave astrophysics", "long_description": "GWpy is a collaboration-driven Python package providing tools for studying data from ground-based gravitational-wave detectors.", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["nds2", "gwf", "dqsegdb", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-dateutil", "py27-enum34", "py27-ligo-segments", "py27-ligotimegps", "python27", "py27-numpy", "py27-scipy", "py27-six", "py27-tqdm", "py27-matplotlib", "py27-astropy"]}], "depends_on": []}, {"name": "py37-gym", "portdir": "python/py-gym", "version": "0.18.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/openai/gym", "description": "The OpenAI Gym A toolkit for developing and comparing your reinforcement learning agents.", "long_description": "The OpenAI Gym A toolkit for developing and comparing your reinforcement learning agents.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-pyglet", "py37-scipy", "py37-cloudpickle", "py37-numpy"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "run", "ports": ["py37-tensor2tensor"]}]}, {"name": "py38-gym", "portdir": "python/py-gym", "version": "0.18.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/openai/gym", "description": "The OpenAI Gym A toolkit for developing and comparing your reinforcement learning agents.", "long_description": "The OpenAI Gym A toolkit for developing and comparing your reinforcement learning agents.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-pyglet", "py38-scipy", "py38-cloudpickle", "py38-numpy"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "run", "ports": ["py38-tensor2tensor"]}]}, {"name": "py39-gym", "portdir": "python/py-gym", "version": "0.18.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/openai/gym", "description": "The OpenAI Gym A toolkit for developing and comparing your reinforcement learning agents.", "long_description": "The OpenAI Gym A toolkit for developing and comparing your reinforcement learning agents.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-pyglet", "py39-scipy", "py39-cloudpickle", "py39-numpy"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-gym"]}, {"type": "run", "ports": ["py39-tensor2tensor"]}]}, {"name": "nq", "portdir": "sysutils/nq", "version": "0.3.1", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/leahneukirchen/nq", "description": "Unix command line queue utility", "long_description": "nq allows creating very lightweight job queue systems which require no setup, maintenance, supervision, or any long-running processes.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "landonf", "github": "landonf", "ports_count": 73}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": []}, {"name": "py-gwpy", "portdir": "python/py-gwpy", "version": "2.0.4", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwpy.github.io", "description": "A python package for gravitational-wave astrophysics", "long_description": "GWpy is a collaboration-driven Python package providing tools for studying data from ground-based gravitational-wave detectors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-gwpy"]}], "depends_on": []}, {"name": "py37-gwpy", "portdir": "python/py-gwpy", "version": "2.0.4", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwpy.github.io", "description": "A python package for gravitational-wave astrophysics", "long_description": "GWpy is a collaboration-driven Python package providing tools for studying data from ground-based gravitational-wave detectors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-pip", "py37-setuptools_scm", "py37-wheel"]}, {"type": "lib", "ports": ["py37-h5py", "py37-keyring", "py37-ligo-segments", "py37-ligotimegps", "python37", "py37-numpy", "py37-scipy", "py37-six", "py37-tqdm", "py37-matplotlib", "py37-astropy", "py37-colorama", "py37-dateutil"]}], "depends_on": []}, {"name": "py38-gwpy", "portdir": "python/py-gwpy", "version": "2.0.4", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gwpy.github.io", "description": "A python package for gravitational-wave astrophysics", "long_description": "GWpy is a collaboration-driven Python package providing tools for studying data from ground-based gravitational-wave detectors.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-pip", "py38-setuptools_scm", "py38-wheel"]}, {"type": "lib", "ports": ["py38-h5py", "py38-keyring", "py38-ligo-segments", "py38-ligotimegps", "python38", "py38-numpy", "py38-scipy", "py38-six", "py38-tqdm", "py38-matplotlib", "py38-astropy", "py38-colorama", "py38-dateutil"]}], "depends_on": []}, {"name": "py27-h11", "portdir": "python/py-h11", "version": "0.11.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-hyper/h11", "description": "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1", "long_description": "This is a little HTTP/1.1 library written from scratch in Python, heavily inspired by hyper-h2.", "active": true, "categories": ["net", "www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": []}, {"name": "py36-h11", "portdir": "python/py-h11", "version": "0.11.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-hyper/h11", "description": "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1", "long_description": "This is a little HTTP/1.1 library written from scratch in Python, heavily inspired by hyper-h2.", "active": true, "categories": ["net", "www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": []}, {"name": "py37-h11", "portdir": "python/py-h11", "version": "0.11.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-hyper/h11", "description": "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1", "long_description": "This is a little HTTP/1.1 library written from scratch in Python, heavily inspired by hyper-h2.", "active": true, "categories": ["net", "www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py37-httpcore", "py37-wsproto"]}]}, {"name": "py38-h11", "portdir": "python/py-h11", "version": "0.11.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-hyper/h11", "description": "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1", "long_description": "This is a little HTTP/1.1 library written from scratch in Python, heavily inspired by hyper-h2.", "active": true, "categories": ["net", "www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py38-httpcore", "py38-uvicorn", "py38-wsproto"]}]}, {"name": "py39-h11", "portdir": "python/py-h11", "version": "0.11.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-hyper/h11", "description": "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1", "long_description": "This is a little HTTP/1.1 library written from scratch in Python, heavily inspired by hyper-h2.", "active": true, "categories": ["net", "www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-h11", "py39-httpcore", "py39-uvicorn", "py39-wsproto"]}]}, {"name": "py-h2", "portdir": "python/py-h2", "version": "3.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-hyper.org/projects/h2/", "description": "Hyper-h2: A pure-Python HTTP/2 protocol stack", "long_description": "Hyper-h2 is a HTTP/2 protocol stack, written entirely in Python. The goal of Hyper-h2 is to be a 100% RFC 7540 compatible implementation of a complete HTTP/2 protocol stack for the Python ecosystem, build on a set of finite state machines. It should be usable in all programs regardless of concurrency model or environment. To achieve this, Hyper-h2 is entirely self-contained: it does no I/O of any kind, leaving that up to a wrapper library to control. This ensures that it can seamlessly work in all kinds of environments, from single-threaded code to Twisted. Its secondary goals are to be fast, clear, and efficient.", "active": true, "categories": ["net", "www", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-h2"]}], "depends_on": []}, {"name": "py27-h2", "portdir": "python/py-h2", "version": "3.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-hyper.org/projects/h2/", "description": "Hyper-h2: A pure-Python HTTP/2 protocol stack", "long_description": "Hyper-h2 is a HTTP/2 protocol stack, written entirely in Python. The goal of Hyper-h2 is to be a 100% RFC 7540 compatible implementation of a complete HTTP/2 protocol stack for the Python ecosystem, build on a set of finite state machines. It should be usable in all programs regardless of concurrency model or environment. To achieve this, Hyper-h2 is entirely self-contained: it does no I/O of any kind, leaving that up to a wrapper library to control. This ensures that it can seamlessly work in all kinds of environments, from single-threaded code to Twisted. Its secondary goals are to be fast, clear, and efficient.", "active": true, "categories": ["net", "www", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-enum34", "py27-hpack", "py27-hyperframe"]}], "depends_on": []}, {"name": "py35-h2", "portdir": "python/py-h2", "version": "3.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-hyper.org/projects/h2/", "description": "Hyper-h2: A pure-Python HTTP/2 protocol stack", "long_description": "Hyper-h2 is a HTTP/2 protocol stack, written entirely in Python. The goal of Hyper-h2 is to be a 100% RFC 7540 compatible implementation of a complete HTTP/2 protocol stack for the Python ecosystem, build on a set of finite state machines. It should be usable in all programs regardless of concurrency model or environment. To achieve this, Hyper-h2 is entirely self-contained: it does no I/O of any kind, leaving that up to a wrapper library to control. This ensures that it can seamlessly work in all kinds of environments, from single-threaded code to Twisted. Its secondary goals are to be fast, clear, and efficient.", "active": true, "categories": ["net", "www", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-hpack", "py35-hyperframe"]}], "depends_on": []}, {"name": "py36-h2", "portdir": "python/py-h2", "version": "3.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-hyper.org/projects/h2/", "description": "Hyper-h2: A pure-Python HTTP/2 protocol stack", "long_description": "Hyper-h2 is a HTTP/2 protocol stack, written entirely in Python. The goal of Hyper-h2 is to be a 100% RFC 7540 compatible implementation of a complete HTTP/2 protocol stack for the Python ecosystem, build on a set of finite state machines. It should be usable in all programs regardless of concurrency model or environment. To achieve this, Hyper-h2 is entirely self-contained: it does no I/O of any kind, leaving that up to a wrapper library to control. This ensures that it can seamlessly work in all kinds of environments, from single-threaded code to Twisted. Its secondary goals are to be fast, clear, and efficient.", "active": true, "categories": ["net", "www", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-hpack", "py36-hyperframe"]}], "depends_on": []}, {"name": "py37-h2", "portdir": "python/py-h2", "version": "3.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-hyper.org/projects/h2/", "description": "Hyper-h2: A pure-Python HTTP/2 protocol stack", "long_description": "Hyper-h2 is a HTTP/2 protocol stack, written entirely in Python. The goal of Hyper-h2 is to be a 100% RFC 7540 compatible implementation of a complete HTTP/2 protocol stack for the Python ecosystem, build on a set of finite state machines. It should be usable in all programs regardless of concurrency model or environment. To achieve this, Hyper-h2 is entirely self-contained: it does no I/O of any kind, leaving that up to a wrapper library to control. This ensures that it can seamlessly work in all kinds of environments, from single-threaded code to Twisted. Its secondary goals are to be fast, clear, and efficient.", "active": true, "categories": ["net", "www", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-hpack", "py37-hyperframe"]}], "depends_on": [{"type": "lib", "ports": ["py37-mitmproxy"]}]}, {"name": "py38-h2", "portdir": "python/py-h2", "version": "3.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-hyper.org/projects/h2/", "description": "Hyper-h2: A pure-Python HTTP/2 protocol stack", "long_description": "Hyper-h2 is a HTTP/2 protocol stack, written entirely in Python. The goal of Hyper-h2 is to be a 100% RFC 7540 compatible implementation of a complete HTTP/2 protocol stack for the Python ecosystem, build on a set of finite state machines. It should be usable in all programs regardless of concurrency model or environment. To achieve this, Hyper-h2 is entirely self-contained: it does no I/O of any kind, leaving that up to a wrapper library to control. This ensures that it can seamlessly work in all kinds of environments, from single-threaded code to Twisted. Its secondary goals are to be fast, clear, and efficient.", "active": true, "categories": ["net", "www", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-hpack", "py38-hyperframe"]}], "depends_on": [{"type": "lib", "ports": ["py38-mitmproxy"]}]}, {"name": "py-hachoir-core", "portdir": "python/py-hachoir-core", "version": "1.3.3", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/hachoir-core", "description": "Library represents binary file as a tree of Python objects", "long_description": "Hachoir is a Python library used to represent of a binary file as a tree of Python objects. Each object has a type, a value, an address, etc. The goal is to be able to know the meaning of each bit in a file.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-hachoir-core"]}], "depends_on": []}, {"name": "py27-hachoir-core", "portdir": "python/py-hachoir-core", "version": "1.3.3", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/hachoir-core", "description": "Library represents binary file as a tree of Python objects", "long_description": "Hachoir is a Python library used to represent of a binary file as a tree of Python objects. Each object has a type, a value, an address, etc. The goal is to be able to know the meaning of each bit in a file.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-hachoir-core", "py27-hachoir-metadata", "py27-hachoir-parser", "py27-hachoir-urwid"]}]}, {"name": "py35-hat-trie", "portdir": "python/py-hat-trie", "version": "0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/kmike/hat-trie/", "description": "HAT-Trie for Python.", "long_description": "HAT-Trie for Python.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py-hachoir-metadata", "portdir": "python/py-hachoir-metadata", "version": "1.3.3", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/hachoir-metadata", "description": "hachoir-metadata extracts metadata from multimedia files", "long_description": "hachoir-metadata extracts metadata from multimedia files: music, picture, video, but also archives. It supports most common file formats: Program: exe Archives: bzip2, gzip, zip, tar Video: ASF format (WMV video), AVI, Matroska (MKV), WebM video, Quicktime (MOV), Ogg/Theora, Real media (RM) Audio: MPEG audio/MP3, WAV, Sun/NeXT audio, Ogg/Vorbis (OGG), MIDI, AIFF, AIFC, Real audio (RA) Image: bmp, cur, emf, ico, gif, jpg/jpeg, pcx, png, tga, tiff, wmf, xcf Misc: Torrent", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-hachoir-metadata"]}], "depends_on": []}, {"name": "py27-hachoir-metadata", "portdir": "python/py-hachoir-metadata", "version": "1.3.3", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/hachoir-metadata", "description": "hachoir-metadata extracts metadata from multimedia files", "long_description": "hachoir-metadata extracts metadata from multimedia files: music, picture, video, but also archives. It supports most common file formats: Program: exe Archives: bzip2, gzip, zip, tar Video: ASF format (WMV video), AVI, Matroska (MKV), WebM video, Quicktime (MOV), Ogg/Theora, Real media (RM) Audio: MPEG audio/MP3, WAV, Sun/NeXT audio, Ogg/Vorbis (OGG), MIDI, AIFF, AIFC, Real audio (RA) Image: bmp, cur, emf, ico, gif, jpg/jpeg, pcx, png, tga, tiff, wmf, xcf Misc: Torrent", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-hachoir-core", "py27-hachoir-parser"]}], "depends_on": [{"type": "lib", "ports": ["py-hachoir-metadata"]}]}, {"name": "py36-msgpack", "portdir": "python/py-msgpack", "version": "1.0.2", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://msgpack.org/", "description": "MessagePack (de)serializer for Python.", "long_description": "MessagePack (de)serializer for Python.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-mmtf-python", "py36-neovim", "py36-distributed"]}, {"type": "run", "ports": ["py36-oslo-serialization"]}]}, {"name": "py-hgexperimental", "portdir": "python/py-hgexperimental", "version": "0.0.20181109", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/facebook/hg-experimental", "description": "This is a collection of proof-of-concept Mercurial extensions written at Facebook: smartlog, githelp, backups, and fbamend.", "long_description": "This is a collection of proof-of-concept Mercurial extensions written at Facebook: smartlog, githelp, backups, and fbamend.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-hgexperimental"]}], "depends_on": []}, {"name": "py36-asynctest", "portdir": "python/py-asynctest", "version": "0.13.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Martiusweb/asynctest", "description": "Enhance the standard unittest package with features for testing asyncio libraries", "long_description": "The package asynctest is built on top of the standard unittest module and cuts down boilerplate code when testing libraries for asyncio.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-aiohttp"]}]}, {"name": "py-hachoir-parser", "portdir": "python/py-hachoir-parser", "version": "1.3.4", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/hachoir-parser", "description": "78 parser for common binary file formats using Hachoir framework", "long_description": "hachoir-parser is a package of most common file format parsers written for the Hachoir framework. Currently, 78 parsers are supported (some only partially). File System: ext2, fat12, fat16, fat32, iso9660, linux_swap, MBR, ntfs, ReiserFS Program: elf, exe, javac, EFI pifv, prc, pyc, pyo Archive: 7zip, ace, bzip2, cab, gzip, mar, rar, rpm, tar, unix_archive, zip Audio: aiff, fasttracker2, flac, itunesdb, midi, mod, MPEG-1 audio, ptm, ra, s3m, snd Container: asn1, mkv, ogg, rm, riff, swf Video: asf, flv, mov, MPEG-1/2 PS, MPEG-2 TS Game: blp1, blp2, lucasarts_font, spiderman_video, zsnes Image: bmp, gif, ico, jpeg/jpg, pcx, png, psd, tga, tiff, wmf, xcf Misc: 3do, 3ds, bplist, chm, gnomekeyring, hlp, lnk, ole2, pcf, pdf, tcpdump, torrent, ttf", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-hachoir-parser"]}], "depends_on": []}, {"name": "py27-hachoir-parser", "portdir": "python/py-hachoir-parser", "version": "1.3.4", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/hachoir-parser", "description": "78 parser for common binary file formats using Hachoir framework", "long_description": "hachoir-parser is a package of most common file format parsers written for the Hachoir framework. Currently, 78 parsers are supported (some only partially). File System: ext2, fat12, fat16, fat32, iso9660, linux_swap, MBR, ntfs, ReiserFS Program: elf, exe, javac, EFI pifv, prc, pyc, pyo Archive: 7zip, ace, bzip2, cab, gzip, mar, rar, rpm, tar, unix_archive, zip Audio: aiff, fasttracker2, flac, itunesdb, midi, mod, MPEG-1 audio, ptm, ra, s3m, snd Container: asn1, mkv, ogg, rm, riff, swf Video: asf, flv, mov, MPEG-1/2 PS, MPEG-2 TS Game: blp1, blp2, lucasarts_font, spiderman_video, zsnes Image: bmp, gif, ico, jpeg/jpg, pcx, png, psd, tga, tiff, wmf, xcf Misc: 3do, 3ds, bplist, chm, gnomekeyring, hlp, lnk, ole2, pcf, pdf, tcpdump, torrent, ttf", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-hachoir-core"]}], "depends_on": [{"type": "lib", "ports": ["py27-hachoir-metadata", "py-hachoir-parser", "py27-hachoir-urwid"]}]}, {"name": "py-hachoir-urwid", "portdir": "python/py-hachoir-urwid", "version": "1.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/hachoir-urwid/1.1", "description": "Binary file explorer using Hachoir and urwid libraries", "long_description": "hachoir-urwid is a binary file explorer based on Hachoir library to parse the files. Using this tool you can exactly know the meaning of each bit/byte of your files. With direction keys, you can navigate in the field tree. The key h will disable human display and switch to raw display. It is sometime useful when you would like to compare hexadecimal data and Hachoir reprensentation.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-hachoir-urwid"]}], "depends_on": []}, {"name": "py27-hachoir-urwid", "portdir": "python/py-hachoir-urwid", "version": "1.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/hachoir-urwid/1.1", "description": "Binary file explorer using Hachoir and urwid libraries", "long_description": "hachoir-urwid is a binary file explorer based on Hachoir library to parse the files. Using this tool you can exactly know the meaning of each bit/byte of your files. With direction keys, you can navigate in the field tree. The key h will disable human display and switch to raw display. It is sometime useful when you would like to compare hexadecimal data and Hachoir reprensentation.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-hachoir-core", "py27-hachoir-parser", "py27-urwid"]}], "depends_on": [{"type": "lib", "ports": ["py-hachoir-urwid"]}]}, {"name": "py-harstorage", "portdir": "python/py-harstorage", "version": "1.0", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pavel-paulau/harstorage", "description": "Free repository for performance measurements", "long_description": "HAR Storage is repository for automated client-side performance testing. It's built on MongoDB and Pylons.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-harstorage"]}], "depends_on": []}]}