{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=249", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=247", "results": [{"name": "py-asynctest", "portdir": "python/py-asynctest", "version": "0.13.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Martiusweb/asynctest", "description": "Enhance the standard unittest package with features for testing asyncio libraries", "long_description": "The package asynctest is built on top of the standard unittest module and cuts down boilerplate code when testing libraries for asyncio.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-asynctest"]}], "depends_on": []}, {"name": "py37-asynctest", "portdir": "python/py-asynctest", "version": "0.13.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Martiusweb/asynctest", "description": "Enhance the standard unittest package with features for testing asyncio libraries", "long_description": "The package asynctest is built on top of the standard unittest module and cuts down boilerplate code when testing libraries for asyncio.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-aiohttp"]}, {"type": "test", "ports": ["py37-mitmproxy"]}]}, {"name": "py38-asynctest", "portdir": "python/py-asynctest", "version": "0.13.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Martiusweb/asynctest", "description": "Enhance the standard unittest package with features for testing asyncio libraries", "long_description": "The package asynctest is built on top of the standard unittest module and cuts down boilerplate code when testing libraries for asyncio.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "test", "ports": ["py38-mitmproxy"]}]}, {"name": "py39-asynctest", "portdir": "python/py-asynctest", "version": "0.13.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Martiusweb/asynctest", "description": "Enhance the standard unittest package with features for testing asyncio libraries", "long_description": "The package asynctest is built on top of the standard unittest module and cuts down boilerplate code when testing libraries for asyncio.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-asynctest"]}, {"type": "test", "ports": ["py39-mitmproxy"]}]}, {"name": "py-atpy", "portdir": "python/py-atpy", "version": "0.9.7", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://atpy.readthedocs.org/", "description": "ATpy: Astronomical Tables in Python", "long_description": "ATpy is a Python module aimed at seamlessly reading, creating, manipulating, and writing tables of astronomical data. To date, the following formats are supported: ASCII, FITS, VO, HDF5, and IPAC tables, and SQLite, MySQL, and PostgreSQL databases.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-atpy"]}], "depends_on": []}, {"name": "py-atpublic", "portdir": "python/py-atpublic", "version": "1.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://public.readthedocs.io", "description": "@public decorator for Python", "long_description": "A very simple decorator and function which populates a module's __all__ and optionally the module globals.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "danchr", "github": "danchr", "ports_count": 103}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-atpublic"]}], "depends_on": []}, {"name": "py38-atpublic", "portdir": "python/py-atpublic", "version": "1.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://public.readthedocs.io", "description": "@public decorator for Python", "long_description": "A very simple decorator and function which populates a module's __all__ and optionally the module globals.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "danchr", "github": "danchr", "ports_count": 103}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-aiosmtpd", "py-atpublic"]}]}, {"name": "py36-atpy", "portdir": "python/py-atpy", "version": "0.9.7", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://atpy.readthedocs.org/", "description": "ATpy: Astronomical Tables in Python", "long_description": "ATpy is a Python module aimed at seamlessly reading, creating, manipulating, and writing tables of astronomical data. To date, the following formats are supported: ASCII, FITS, VO, HDF5, and IPAC tables, and SQLite, MySQL, and PostgreSQL databases.", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["hdf5", "vo", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-astropy", "py36-numpy"]}], "depends_on": []}, {"name": "py35-atpy", "portdir": "python/py-atpy", "version": "0.9.7", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://atpy.readthedocs.org/", "description": "ATpy: Astronomical Tables in Python", "long_description": "ATpy is a Python module aimed at seamlessly reading, creating, manipulating, and writing tables of astronomical data. To date, the following formats are supported: ASCII, FITS, VO, HDF5, and IPAC tables, and SQLite, MySQL, and PostgreSQL databases.", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["hdf5", "vo", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-astropy", "py35-numpy"]}], "depends_on": []}, {"name": "py-attr", "portdir": "python/py-attr", "version": "0.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytesting/attr", "description": "Simple decorator to set attributes of target function or class in a DRY way", "long_description": "Simple decorator to set attributes of target function or class in a DRY way", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-attr"]}], "depends_on": []}, {"name": "py27-attr", "portdir": "python/py-attr", "version": "0.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytesting/attr", "description": "Simple decorator to set attributes of target function or class in a DRY way", "long_description": "Simple decorator to set attributes of target function or class in a DRY way", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py36-attr", "portdir": "python/py-attr", "version": "0.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytesting/attr", "description": "Simple decorator to set attributes of target function or class in a DRY way", "long_description": "Simple decorator to set attributes of target function or class in a DRY way", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-test-runner"]}]}, {"name": "py37-attr", "portdir": "python/py-attr", "version": "0.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytesting/attr", "description": "Simple decorator to set attributes of target function or class in a DRY way", "long_description": "Simple decorator to set attributes of target function or class in a DRY way", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-test-runner"]}]}, {"name": "py38-attr", "portdir": "python/py-attr", "version": "0.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytesting/attr", "description": "Simple decorator to set attributes of target function or class in a DRY way", "long_description": "Simple decorator to set attributes of target function or class in a DRY way", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-test-runner"]}]}, {"name": "py39-attr", "portdir": "python/py-attr", "version": "0.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytesting/attr", "description": "Simple decorator to set attributes of target function or class in a DRY way", "long_description": "Simple decorator to set attributes of target function or class in a DRY way", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["kb", "py-attr"]}]}, {"name": "py-audioread", "portdir": "python/py-audioread", "version": "2.1.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/beetbox/audioread", "description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for Python.", "long_description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for Python. Decode audio files using whichever backend is available. The library currently supports: Gstreamer via PyGObject; Core Audio on Mac OS X via ctypes (PyObjC not required); MAD via the pymad bindings; FFmpeg or Libav via its command-line interface; The standard library wave, aifc, and sunau modules (for uncompressed audio formats).", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-audioread"]}], "depends_on": []}, {"name": "py37-audioread", "portdir": "python/py-audioread", "version": "2.1.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/beetbox/audioread", "description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for Python.", "long_description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for Python. Decode audio files using whichever backend is available. The library currently supports: Gstreamer via PyGObject; Core Audio on Mac OS X via ctypes (PyObjC not required); MAD via the pymad bindings; FFmpeg or Libav via its command-line interface; The standard library wave, aifc, and sunau modules (for uncompressed audio formats).", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-pytest-runner", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py37-acoustid"]}, {"type": "run", "ports": ["py37-librosa"]}]}, {"name": "py38-audioread", "portdir": "python/py-audioread", "version": "2.1.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/beetbox/audioread", "description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for Python.", "long_description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for Python. Decode audio files using whichever backend is available. The library currently supports: Gstreamer via PyGObject; Core Audio on Mac OS X via ctypes (PyObjC not required); MAD via the pymad bindings; FFmpeg or Libav via its command-line interface; The standard library wave, aifc, and sunau modules (for uncompressed audio formats).", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-pytest-runner", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py38-acoustid"]}, {"type": "run", "ports": ["py38-librosa"]}]}, {"name": "py27-atomicwrites", "portdir": "python/py-atomicwrites", "version": "1.4.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/untitaker/python-atomicwrites", "description": "Powerful Python library for atomic file writes", "long_description": "Powerful Python library for atomic file writes", "active": true, "categories": ["python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py27-pytest"]}]}, {"name": "py35-atomicwrites", "portdir": "python/py-atomicwrites", "version": "1.4.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/untitaker/python-atomicwrites", "description": "Powerful Python library for atomic file writes", "long_description": "Powerful Python library for atomic file writes", "active": true, "categories": ["python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": []}, {"name": "py38-testpath", "portdir": "python/py-testpath", "version": "0.5.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/jupyter/testpath", "description": "Test utilities for code working with files and commands.", "long_description": "Test utilities for code working with files and commands.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-nbconvert"]}]}, {"name": "py-autopep8", "portdir": "python/py-autopep8", "version": "1.6.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/hhatto/autopep8", "description": "A tool that automatically formats Python code to conform to the PEP 8 style guide", "long_description": "autopep8 automatically formats Python code to conform to the PEP 8 style guide. It uses the pycodestyle utility to determine what parts of the code needs to be formatted. autopep8 is capable of fixing most of the formatting issues that can be reported by pycodestyle.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-autopep8"]}], "depends_on": []}, {"name": "py39-audioread", "portdir": "python/py-audioread", "version": "2.1.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/beetbox/audioread", "description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for Python.", "long_description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for Python. Decode audio files using whichever backend is available. The library currently supports: Gstreamer via PyGObject; Core Audio on Mac OS X via ctypes (PyObjC not required); MAD via the pymad bindings; FFmpeg or Libav via its command-line interface; The standard library wave, aifc, and sunau modules (for uncompressed audio formats).", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-pytest-runner", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-audioread", "py39-acoustid"]}, {"type": "run", "ports": ["py39-librosa"]}]}, {"name": "py-authkit", "portdir": "python/py-authkit", "version": "0.3.0pre5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.org/project/AuthKit/", "description": "An authentication and authorization toolkit for WSGI applications and frameworks", "long_description": "An authentication and authorization toolkit for WSGI applications and frameworks", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py27-authkit"]}], "depends_on": []}, {"name": "py27-authkit", "portdir": "python/py-authkit", "version": "0.3.0pre5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.org/project/AuthKit/", "description": "An authentication and authorization toolkit for WSGI applications and frameworks", "long_description": "An authentication and authorization toolkit for WSGI applications and frameworks", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-authkit"]}]}, {"name": "py-autobahn", "portdir": "python/py-autobahn", "version": "21.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://crossbar.io/autobahn", "description": "WebSocket client & server library WAMP real time framework", "long_description": "WebSocket client & server library WAMP real time framework", "active": true, "categories": ["python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-autobahn"]}], "depends_on": []}, {"name": "py38-autobahn", "portdir": "python/py-autobahn", "version": "21.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://crossbar.io/autobahn", "description": "WebSocket client & server library WAMP real time framework", "long_description": "WebSocket client & server library WAMP real time framework", "active": true, "categories": ["python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-cbor", "py38-cbor2", "py38-cffi", "py38-cryptography", "py38-flatbuffers", "py38-msgpack", "py38-openssl", "py38-passlib", "py38-pynacl", "py38-pyqrcode", "py38-python-snappy", "py38-pytrie", "py38-service_identity", "py38-twisted", "py38-txaio", "py38-u-msgpack-python", "py38-ujson", "py38-attrs", "py38-argon2-cffi"]}], "depends_on": [{"type": "lib", "ports": ["magic-wormhole"]}]}, {"name": "py39-autobahn", "portdir": "python/py-autobahn", "version": "21.3.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://crossbar.io/autobahn", "description": "WebSocket client & server library WAMP real time framework", "long_description": "WebSocket client & server library WAMP real time framework", "active": true, "categories": ["python"], "maintainers": [{"name": "mojca", "github": "mojca", "ports_count": 190}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-cbor", "py39-cbor2", "py39-cffi", "py39-cryptography", "py39-flatbuffers", "py39-msgpack", "py39-openssl", "py39-passlib", "py39-pynacl", "py39-pyqrcode", "py39-python-snappy", "py39-pytrie", "py39-service_identity", "py39-twisted", "py39-txaio", "py39-u-msgpack-python", "py39-ujson", "py39-attrs", "py39-argon2-cffi"]}], "depends_on": [{"type": "lib", "ports": ["py-autobahn"]}, {"type": "run", "ports": ["buildbot"]}]}, {"name": "py27-automat", "portdir": "python/py-automat", "version": "20.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/glyph/automat", "description": "A library for concise, idiomatic Python expression of finite-state automata", "long_description": "Automat is a library for concise, idiomatic Python expression of finite-state automata (particularly deterministic finite-state transducers).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["py27-m2r", "clang-9.0", "py27-setuptools_scm"]}, {"type": "lib", "ports": ["python27", "py27-setuptools"]}, {"type": "run", "ports": ["py27-six", "py27-attrs"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py27-twisted"]}]}, {"name": "py35-automat", "portdir": "python/py-automat", "version": "20.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/glyph/automat", "description": "A library for concise, idiomatic Python expression of finite-state automata", "long_description": "Automat is a library for concise, idiomatic Python expression of finite-state automata (particularly deterministic finite-state transducers).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["py35-m2r", "clang-9.0", "py35-setuptools_scm"]}, {"type": "lib", "ports": ["python35", "py35-setuptools"]}, {"type": "run", "ports": ["py35-six", "py35-attrs"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py35-twisted"]}]}, {"name": "py36-automat", "portdir": "python/py-automat", "version": "20.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/glyph/automat", "description": "A library for concise, idiomatic Python expression of finite-state automata", "long_description": "Automat is a library for concise, idiomatic Python expression of finite-state automata (particularly deterministic finite-state transducers).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["py36-m2r", "clang-9.0", "py36-setuptools_scm"]}, {"type": "lib", "ports": ["python36", "py36-setuptools"]}, {"type": "run", "ports": ["py36-six", "py36-attrs"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py36-twisted"]}]}, {"name": "mysql8-server", "portdir": "databases/mysql8", "version": "8.0.27", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://dev.mysql.com", "description": "Run mysql8 as server", "long_description": "Run mysql8 as server", "active": true, "categories": ["databases"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "run", "ports": ["mysql8"]}], "depends_on": []}, {"name": "xorg-libXevie", "portdir": "x11/xorg-libXevie", "version": "1.0.3", "license": "X11", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.x.org", "description": "X.org llibXevie", "long_description": "X.org llibXevie", "active": true, "categories": ["devel", "x11"], "maintainers": [{"name": "jeremyhu", "github": "jeremyhu", "ports_count": 260}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["xorg-libXext", "xorg-xorgproto"]}], "depends_on": [{"type": "lib", "ports": ["gdm"]}]}, {"name": "py39-testpath", "portdir": "python/py-testpath", "version": "0.5.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/jupyter/testpath", "description": "Test utilities for code working with files and commands.", "long_description": "Test utilities for code working with files and commands.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py39-nbconvert", "py-testpath"]}]}, {"name": "py36-awesome_slugify", "portdir": "python/py-awesome_slugify", "version": "1.6.5", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/awesome-slugify", "description": "Flexible slugify function", "long_description": "Flexible slugify function", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "esafak", "github": "esafak", "ports_count": 74}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-nose", "py36-regex", "py36-unidecode"]}], "depends_on": [{"type": "lib", "ports": ["py-awesome_slugify"]}]}, {"name": "py-aws-sam-translator", "portdir": "python/py-aws-sam-translator", "version": "1.22.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/awslabs/serverless-application-model", "description": "AWS SAM Translator is a library that transform SAM templates into AWS CloudFormation templates", "long_description": "AWS SAM Translator is a library that transform SAM templates into AWS CloudFormation templates", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-aws-sam-translator"]}], "depends_on": []}, {"name": "py37-aws-sam-translator", "portdir": "python/py-aws-sam-translator", "version": "1.22.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/awslabs/serverless-application-model", "description": "AWS SAM Translator is a library that transform SAM templates into AWS CloudFormation templates", "long_description": "AWS SAM Translator is a library that transform SAM templates into AWS CloudFormation templates", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-six", "py37-jsonschema", "py37-boto3"]}, {"type": "test", "ports": ["py37-mock", "py37-parameterized", "py37-pytest", "py37-yaml"]}], "depends_on": [{"type": "run", "ports": ["py37-cfn-lint"]}]}, {"name": "py38-aws-sam-translator", "portdir": "python/py-aws-sam-translator", "version": "1.22.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/awslabs/serverless-application-model", "description": "AWS SAM Translator is a library that transform SAM templates into AWS CloudFormation templates", "long_description": "AWS SAM Translator is a library that transform SAM templates into AWS CloudFormation templates", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-six", "py38-jsonschema", "py38-boto3"]}, {"type": "test", "ports": ["py38-mock", "py38-parameterized", "py38-pytest", "py38-yaml"]}], "depends_on": [{"type": "lib", "ports": ["py-aws-sam-translator"]}, {"type": "run", "ports": ["py38-cfn-lint"]}]}, {"name": "py-axiom", "portdir": "python/py-axiom", "version": "0.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/axiom", "description": "Axiom is an object database, or alternatively, an object-relational mapper, implemented on top of Python.", "long_description": "Axiom is an object database, or alternatively, an object-relational mapper, implemented on top of Python. Its primary goal is to provide an object-oriented layer with the key aspects of OOP (Object Oriented Programming), i.e. polymorphism and message dispatch, without hindering the power of an RDBMS (Relational DataBase Management System).", "active": true, "categories": ["databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-axiom"]}], "depends_on": []}, {"name": "py27-axiom", "portdir": "python/py-axiom", "version": "0.8.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/axiom", "description": "Axiom is an object database, or alternatively, an object-relational mapper, implemented on top of Python.", "long_description": "Axiom is an object database, or alternatively, an object-relational mapper, implemented on top of Python. Its primary goal is to provide an object-oriented layer with the key aspects of OOP (Object Oriented Programming), i.e. polymorphism and message dispatch, without hindering the power of an RDBMS (Relational DataBase Management System).", "active": true, "categories": ["databases", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools_scm"]}, {"type": "lib", "ports": ["python27", "py27-epsilon", "py27-twisted"]}], "depends_on": [{"type": "lib", "ports": ["coherence", "py-axiom"]}]}, {"name": "py-axolotl", "portdir": "python/py-axolotl", "version": "0.2.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl", "description": "Python implementation of libaxolotl", "long_description": "Python implementation of libaxolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-axolotl"]}], "depends_on": []}, {"name": "py27-axolotl", "portdir": "python/py-axolotl", "version": "0.2.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl", "description": "Python implementation of libaxolotl", "long_description": "Python implementation of libaxolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "run", "ports": ["py27-protobuf3", "py27-axolotl-curve25519", "py27-cryptography"]}, {"type": "test", "ports": ["py27-nose"]}], "depends_on": []}, {"name": "py36-axolotl", "portdir": "python/py-axolotl", "version": "0.2.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl", "description": "Python implementation of libaxolotl", "long_description": "Python implementation of libaxolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-protobuf3", "py36-axolotl-curve25519", "py36-cryptography"]}, {"type": "test", "ports": ["py36-nose"]}], "depends_on": []}, {"name": "py37-axolotl", "portdir": "python/py-axolotl", "version": "0.2.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl", "description": "Python implementation of libaxolotl", "long_description": "Python implementation of libaxolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-protobuf3", "py37-axolotl-curve25519", "py37-cryptography"]}, {"type": "test", "ports": ["py37-nose"]}], "depends_on": []}, {"name": "py38-axolotl", "portdir": "python/py-axolotl", "version": "0.2.3", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl", "description": "Python implementation of libaxolotl", "long_description": "Python implementation of libaxolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-protobuf3", "py38-axolotl-curve25519", "py38-cryptography"]}, {"type": "test", "ports": ["py38-nose"]}], "depends_on": [{"type": "lib", "ports": ["py-axolotl"]}]}, {"name": "py-axolotl-curve25519", "portdir": "python/py-axolotl-curve25519", "version": "0.4.1.post2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl-curve25519", "description": "curve25519 for py-axolotl", "long_description": "Python implementation of curve25519 with ed25519 signatures for py-axolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-axolotl-curve25519"]}], "depends_on": []}, {"name": "py27-axolotl-curve25519", "portdir": "python/py-axolotl-curve25519", "version": "0.4.1.post2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl-curve25519", "description": "curve25519 for py-axolotl", "long_description": "Python implementation of curve25519 with ed25519 signatures for py-axolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "run", "ports": ["py27-axolotl"]}]}, {"name": "py36-axolotl-curve25519", "portdir": "python/py-axolotl-curve25519", "version": "0.4.1.post2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl-curve25519", "description": "curve25519 for py-axolotl", "long_description": "Python implementation of curve25519 with ed25519 signatures for py-axolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "run", "ports": ["py36-axolotl"]}]}, {"name": "py37-axolotl-curve25519", "portdir": "python/py-axolotl-curve25519", "version": "0.4.1.post2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl-curve25519", "description": "curve25519 for py-axolotl", "long_description": "Python implementation of curve25519 with ed25519 signatures for py-axolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "run", "ports": ["py37-axolotl"]}]}, {"name": "py38-axolotl-curve25519", "portdir": "python/py-axolotl-curve25519", "version": "0.4.1.post2", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tgalal/python-axolotl-curve25519", "description": "curve25519 for py-axolotl", "long_description": "Python implementation of curve25519 with ed25519 signatures for py-axolotl", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py-axolotl-curve25519"]}, {"type": "run", "ports": ["py38-axolotl"]}]}]}