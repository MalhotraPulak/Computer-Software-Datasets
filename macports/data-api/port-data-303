{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=304", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=302", "results": [{"name": "py27-nose-exclude", "portdir": "python/py-nose-exclude", "version": "0.5.0", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/kgrandis/nose-exclude", "description": "Exclude specific directories from nosetests runs", "long_description": "Nose plugin that allows you to easily specify directories to be excluded from testing.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-nose", "py27-setuptools"]}], "depends_on": []}, {"name": "py35-nose-exclude", "portdir": "python/py-nose-exclude", "version": "0.5.0", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/kgrandis/nose-exclude", "description": "Exclude specific directories from nosetests runs", "long_description": "Nose plugin that allows you to easily specify directories to be excluded from testing.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35", "py35-nose", "py35-setuptools"]}], "depends_on": []}, {"name": "py36-nose-exclude", "portdir": "python/py-nose-exclude", "version": "0.5.0", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/kgrandis/nose-exclude", "description": "Exclude specific directories from nosetests runs", "long_description": "Nose plugin that allows you to easily specify directories to be excluded from testing.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-nose", "py36-setuptools"]}], "depends_on": []}, {"name": "py37-nose-exclude", "portdir": "python/py-nose-exclude", "version": "0.5.0", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/kgrandis/nose-exclude", "description": "Exclude specific directories from nosetests runs", "long_description": "Nose plugin that allows you to easily specify directories to be excluded from testing.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-nose", "py37-setuptools"]}], "depends_on": []}, {"name": "py-nose-progressive", "portdir": "python/py-nose-progressive", "version": "1.5.2", "license": "GPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/erikrose/nose-progressive", "description": "Nose plugin to show progress bar and tracebacks during tests", "long_description": "Nose plugin to show progress bar and tracebacks during tests", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-nose-progressive"]}], "depends_on": []}, {"name": "py27-nose-progressive", "portdir": "python/py-nose-progressive", "version": "1.5.2", "license": "GPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/erikrose/nose-progressive", "description": "Nose plugin to show progress bar and tracebacks during tests", "long_description": "Nose plugin to show progress bar and tracebacks during tests", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-blessings", "py27-nose"]}], "depends_on": [{"type": "lib", "ports": ["py-nose-progressive"]}]}, {"name": "py-nose-skipreq", "portdir": "python/py-nose-skipreq", "version": "2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tdavis/nose-skipreq", "description": "nose plugin that will skip Google API RequestError exceptions", "long_description": "This is a simple nose plugin which acts like the SkipTest plugin for Google's RequestError exception.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-nose-skipreq"]}], "depends_on": []}, {"name": "py27-nose-skipreq", "portdir": "python/py-nose-skipreq", "version": "2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tdavis/nose-skipreq", "description": "nose plugin that will skip Google API RequestError exceptions", "long_description": "This is a simple nose plugin which acts like the SkipTest plugin for Google's RequestError exception.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-gdata", "py27-nose"]}], "depends_on": [{"type": "lib", "ports": ["py-nose-skipreq"]}]}, {"name": "py-nose-testconfig", "portdir": "python/py-nose-testconfig", "version": "0.10", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/jnoller/nose-testconfig", "description": "Test Configuration plugin for nosetests.", "long_description": "nose-testconfig is a plugin to the nose test framework which provides a faculty for passing test-specific (or test-run specific) configuration data to the tests being executed.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-nose-testconfig"]}], "depends_on": []}, {"name": "py27-nose-testconfig", "portdir": "python/py-nose-testconfig", "version": "0.10", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/jnoller/nose-testconfig", "description": "Test Configuration plugin for nosetests.", "long_description": "nose-testconfig is a plugin to the nose test framework which provides a faculty for passing test-specific (or test-run specific) configuration data to the tests being executed.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-nose"]}], "depends_on": [{"type": "lib", "ports": ["py-nose-testconfig"]}]}, {"name": "py-nose_xunitmp", "portdir": "python/py-nose_xunitmp", "version": "0.4.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Ignas/nose_xunitmp", "description": "Xunit output when running multiprocess tests using nose", "long_description": "Nose plugin that makes xunit xml reports work when running tests on more than one cpu.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-nose_xunitmp"]}], "depends_on": []}, {"name": "py37-nose_xunitmp", "portdir": "python/py-nose_xunitmp", "version": "0.4.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Ignas/nose_xunitmp", "description": "Xunit output when running multiprocess tests using nose", "long_description": "Nose plugin that makes xunit xml reports work when running tests on more than one cpu.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-nose"]}], "depends_on": [{"type": "test", "ports": ["py37-apache-beam"]}]}, {"name": "py38-nose_xunitmp", "portdir": "python/py-nose_xunitmp", "version": "0.4.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Ignas/nose_xunitmp", "description": "Xunit output when running multiprocess tests using nose", "long_description": "Nose plugin that makes xunit xml reports work when running tests on more than one cpu.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-nose"]}], "depends_on": [{"type": "test", "ports": ["py38-apache-beam"]}]}, {"name": "py39-nose_xunitmp", "portdir": "python/py-nose_xunitmp", "version": "0.4.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Ignas/nose_xunitmp", "description": "Xunit output when running multiprocess tests using nose", "long_description": "Nose plugin that makes xunit xml reports work when running tests on more than one cpu.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-nose"]}], "depends_on": [{"type": "lib", "ports": ["py-nose_xunitmp"]}, {"type": "test", "ports": ["py39-apache-beam"]}]}, {"name": "py-nosexcover", "portdir": "python/py-nosexcover", "version": "1.0.11", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cmheisel/nose-xcover/", "description": "Extends nose.plugins.cover to add Cobertura-style XML reports", "long_description": "A companion to the built-in nose.plugins.cover, this plugin will write out an XML coverage report to a file named coverage.xml. It will honor all the options you pass to the Nose coverage plugin, especially --cover-package.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-nosexcover"]}], "depends_on": []}, {"name": "py27-nosexcover", "portdir": "python/py-nosexcover", "version": "1.0.11", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cmheisel/nose-xcover/", "description": "Extends nose.plugins.cover to add Cobertura-style XML reports", "long_description": "A companion to the built-in nose.plugins.cover, this plugin will write out an XML coverage report to a file named coverage.xml. It will honor all the options you pass to the Nose coverage plugin, especially --cover-package.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-nose"]}], "depends_on": [{"type": "lib", "ports": ["py-nosexcover"]}]}, {"name": "py-note-seq", "portdir": "python/py-note-seq", "version": "0.0.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://magenta.tensorflow.org/", "description": "Use machine learning to create art and music.", "long_description": "Use machine learning to create art and music.. This is the home for our serializable NoteSequence representation along with utilities for: creating them from various formats (e.g., MIDI, abc, MusicXML); manipulating them (e.g., slicing, quantizing) extracting components (e.g., melodies, drum tracks, chord); exporting them (e.g., to MIDI or audio); or converting them to representations useful for model training (e.g., one-hot tensors).", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-note-seq"]}], "depends_on": []}, {"name": "py37-note-seq", "portdir": "python/py-note-seq", "version": "0.0.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://magenta.tensorflow.org/", "description": "Use machine learning to create art and music.", "long_description": "Use machine learning to create art and music.. This is the home for our serializable NoteSequence representation along with utilities for: creating them from various formats (e.g., MIDI, abc, MusicXML); manipulating them (e.g., slicing, quantizing) extracting components (e.g., melodies, drum tracks, chord); exporting them (e.g., to MIDI or audio); or converting them to representations useful for model training (e.g., one-hot tensors).", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-bokeh", "py37-intervaltree", "py37-ipython", "py37-librosa", "py37-numba", "py37-numpy", "py37-pretty-midi", "py37-protobuf3", "py37-scikit-image", "py37-scipy", "py37-pandas", "py37-absl", "py37-attrs"]}, {"type": "test", "ports": ["py37-pylint", "py37-pytest", "py37-pytest-xdist"]}], "depends_on": [{"type": "run", "ports": ["py37-magenta"]}]}, {"name": "py38-note-seq", "portdir": "python/py-note-seq", "version": "0.0.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://magenta.tensorflow.org/", "description": "Use machine learning to create art and music.", "long_description": "Use machine learning to create art and music.. This is the home for our serializable NoteSequence representation along with utilities for: creating them from various formats (e.g., MIDI, abc, MusicXML); manipulating them (e.g., slicing, quantizing) extracting components (e.g., melodies, drum tracks, chord); exporting them (e.g., to MIDI or audio); or converting them to representations useful for model training (e.g., one-hot tensors).", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-bokeh", "py38-intervaltree", "py38-ipython", "py38-librosa", "py38-numba", "py38-numpy", "py38-pretty-midi", "py38-protobuf3", "py38-scikit-image", "py38-scipy", "py38-pandas", "py38-absl", "py38-attrs"]}, {"type": "test", "ports": ["py38-pylint", "py38-pytest", "py38-pytest-xdist"]}], "depends_on": [{"type": "run", "ports": ["py38-magenta"]}]}, {"name": "py39-note-seq", "portdir": "python/py-note-seq", "version": "0.0.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://magenta.tensorflow.org/", "description": "Use machine learning to create art and music.", "long_description": "Use machine learning to create art and music.. This is the home for our serializable NoteSequence representation along with utilities for: creating them from various formats (e.g., MIDI, abc, MusicXML); manipulating them (e.g., slicing, quantizing) extracting components (e.g., melodies, drum tracks, chord); exporting them (e.g., to MIDI or audio); or converting them to representations useful for model training (e.g., one-hot tensors).", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-bokeh", "py39-intervaltree", "py39-ipython", "py39-librosa", "py39-numba", "py39-numpy", "py39-pretty-midi", "py39-protobuf3", "py39-scikit-image", "py39-scipy", "py39-pandas", "py39-absl", "py39-attrs"]}, {"type": "test", "ports": ["py39-pylint", "py39-pytest", "py39-pytest-xdist"]}], "depends_on": [{"type": "lib", "ports": ["py-note-seq"]}, {"type": "run", "ports": ["py39-magenta"]}]}, {"name": "py-notify-python", "portdir": "python/py-notify-python", "version": "0.1.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.galago-project.org/", "description": "libnotify python bindings", "long_description": "libnotify sends desktop notifications to a notification daemon, as defined in the Desktop Notifications spec. These notifications can be used to inform the user about an event or display some form of information without getting in the user's way. python-notify provides the Python bindings for libnotify", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-notify-python"]}], "depends_on": []}, {"name": "py27-notify-python", "portdir": "python/py-notify-python", "version": "0.1.1", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.galago-project.org/", "description": "libnotify python bindings", "long_description": "libnotify sends desktop notifications to a notification daemon, as defined in the Desktop Notifications spec. These notifications can be used to inform the user about an event or display some form of information without getting in the user's way. python-notify provides the Python bindings for libnotify", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["libnotify", "python27", "py27-pygtk"]}], "depends_on": [{"type": "lib", "ports": ["py-notify-python", "terminator"]}]}, {"name": "py-novaclient", "portdir": "python/py-novaclient", "version": "17.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://docs.openstack.org/python-novaclient/latest/", "description": "Command line for openstack api", "long_description": "This is a client for the OpenStack Nova API. There's a Python API (the novaclient module), and a command-line script (nova). Each implements 100% of the OpenStack Nova API.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-novaclient"]}], "depends_on": []}, {"name": "py36-novaclient", "portdir": "python/py-novaclient", "version": "17.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://docs.openstack.org/python-novaclient/latest/", "description": "Command line for openstack api", "long_description": "This is a client for the OpenStack Nova API. There's a Python API (the novaclient module), and a command-line script (nova). Each implements 100% of the OpenStack Nova API.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools", "py36-pbr"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-oslo-serialization", "py36-oslo-utils", "py36-prettytable", "py36-simplejson", "py36-stevedore", "py36-oslo-i18n", "py36-keystoneauth1", "py36-iso8601"]}], "depends_on": [{"type": "run", "ports": ["py36-openstackclient"]}]}, {"name": "py37-novaclient", "portdir": "python/py-novaclient", "version": "17.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://docs.openstack.org/python-novaclient/latest/", "description": "Command line for openstack api", "long_description": "This is a client for the OpenStack Nova API. There's a Python API (the novaclient module), and a command-line script (nova). Each implements 100% of the OpenStack Nova API.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools", "py37-pbr"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-oslo-serialization", "py37-oslo-utils", "py37-prettytable", "py37-simplejson", "py37-stevedore", "py37-oslo-i18n", "py37-keystoneauth1", "py37-iso8601"]}], "depends_on": [{"type": "run", "ports": ["py37-openstackclient"]}]}, {"name": "py38-novaclient", "portdir": "python/py-novaclient", "version": "17.2.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://docs.openstack.org/python-novaclient/latest/", "description": "Command line for openstack api", "long_description": "This is a client for the OpenStack Nova API. There's a Python API (the novaclient module), and a command-line script (nova). Each implements 100% of the OpenStack Nova API.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools", "py38-pbr"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-oslo-serialization", "py38-oslo-utils", "py38-prettytable", "py38-simplejson", "py38-stevedore", "py38-oslo-i18n", "py38-keystoneauth1", "py38-iso8601"]}], "depends_on": [{"type": "lib", "ports": ["py-novaclient"]}, {"type": "run", "ports": ["py38-openstackclient"]}]}, {"name": "py-novas", "portdir": "python/py-novas", "version": "3.1.1.4", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/novas/", "description": "Naval Observatory Vector Astrometry Software, Python Edition", "long_description": "Python ctypes wrapper for Naval Observatory Vector Astrometry Software (NOVAS). Provides extremely accurate astrometric coordinate conversions and position of solar system objects.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-novas"]}], "depends_on": []}, {"name": "py27-novas", "portdir": "python/py-novas", "version": "3.1.1.4", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/novas/", "description": "Naval Observatory Vector Astrometry Software, Python Edition", "long_description": "Python ctypes wrapper for Naval Observatory Vector Astrometry Software (NOVAS). Provides extremely accurate astrometric coordinate conversions and position of solar system objects.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py35-novas", "portdir": "python/py-novas", "version": "3.1.1.4", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/novas/", "description": "Naval Observatory Vector Astrometry Software, Python Edition", "long_description": "Python ctypes wrapper for Naval Observatory Vector Astrometry Software (NOVAS). Provides extremely accurate astrometric coordinate conversions and position of solar system objects.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-novas", "portdir": "python/py-novas", "version": "3.1.1.4", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/novas/", "description": "Naval Observatory Vector Astrometry Software, Python Edition", "long_description": "Python ctypes wrapper for Naval Observatory Vector Astrometry Software (NOVAS). Provides extremely accurate astrometric coordinate conversions and position of solar system objects.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py-novas"]}]}, {"name": "py-novas_de405", "portdir": "python/py-novas_de405", "version": "1997", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/novas_de405/", "description": "High-precision JPL DE405 solar system ephemeris", "long_description": "This is the high-precision JPL DE405 solar system ephemeris, packaged for use by the novas Python package.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-novas_de405"]}], "depends_on": []}, {"name": "py27-novas_de405", "portdir": "python/py-novas_de405", "version": "1997", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/novas_de405/", "description": "High-precision JPL DE405 solar system ephemeris", "long_description": "This is the high-precision JPL DE405 solar system ephemeris, packaged for use by the novas Python package.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py35-novas_de405", "portdir": "python/py-novas_de405", "version": "1997", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/novas_de405/", "description": "High-precision JPL DE405 solar system ephemeris", "long_description": "This is the high-precision JPL DE405 solar system ephemeris, packaged for use by the novas Python package.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-novas_de405", "portdir": "python/py-novas_de405", "version": "1997", "license": "unknown", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/novas_de405/", "description": "High-precision JPL DE405 solar system ephemeris", "long_description": "This is the high-precision JPL DE405 solar system ephemeris, packaged for use by the novas Python package.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py-novas_de405"]}]}, {"name": "py-ntplib", "portdir": "python/py-ntplib", "version": "0.3.3", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ntplib", "description": "Simple interface to query NTP servers from Python.", "long_description": "This module offers a simple interface to query NTP servers from Python. It also provides utility text (mode, leap indicator, ...). Since it is pure Python, and only depends on core modules, it should work on any platform with a decent Python implementation.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-ntplib"]}], "depends_on": []}, {"name": "py37-ntplib", "portdir": "python/py-ntplib", "version": "0.3.3", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ntplib", "description": "Simple interface to query NTP servers from Python.", "long_description": "This module offers a simple interface to query NTP servers from Python. It also provides utility text (mode, leap indicator, ...). Since it is pure Python, and only depends on core modules, it should work on any platform with a decent Python implementation.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py38-ntplib", "portdir": "python/py-ntplib", "version": "0.3.3", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ntplib", "description": "Simple interface to query NTP servers from Python.", "long_description": "This module offers a simple interface to query NTP servers from Python. It also provides utility text (mode, leap indicator, ...). Since it is pure Python, and only depends on core modules, it should work on any platform with a decent Python implementation.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": []}, {"name": "py27-oauth2client", "portdir": "python/py-oauth2client", "version": "4.1.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/google/oauth2client/", "description": "client library for OAuth 2.0", "long_description": "client library for OAuth 2.0", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-httplib2", "python27", "py27-six", "py27-rsa", "py27-asn1-modules"]}], "depends_on": [{"type": "lib", "ports": ["gcalcli"]}]}, {"name": "py39-ntplib", "portdir": "python/py-ntplib", "version": "0.3.3", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ntplib", "description": "Simple interface to query NTP servers from Python.", "long_description": "This module offers a simple interface to query NTP servers from Python. It also provides utility text (mode, leap indicator, ...). Since it is pure Python, and only depends on core modules, it should work on any platform with a decent Python implementation.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-ntplib"]}]}, {"name": "py-numba", "portdir": "python/py-numba", "version": "0.53.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://numba.pydata.org/", "description": "Numba is a NumPy aware dynamic compiler for Python.", "long_description": "Numba is an Open Source NumPy-aware optimizing compiler for Python. It uses the remarkable LLVM compiler infrastructure to compile Python syntax to machine code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["tbb"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-numba"]}], "depends_on": []}, {"name": "py27-numba", "portdir": "python/py-numba", "version": "0.47.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://numba.pydata.org/", "description": "Numba is a NumPy aware dynamic compiler for Python.", "long_description": "Numba is an Open Source NumPy-aware optimizing compiler for Python. It uses the remarkable LLVM compiler infrastructure to compile Python syntax to machine code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["tbb", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-funcsigs", "py27-llvmlite", "python27", "py27-singledispatch", "py27-numpy", "py27-enum34"]}], "depends_on": []}, {"name": "py35-numba", "portdir": "python/py-numba", "version": "0.47.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://numba.pydata.org/", "description": "Numba is a NumPy aware dynamic compiler for Python.", "long_description": "Numba is an Open Source NumPy-aware optimizing compiler for Python. It uses the remarkable LLVM compiler infrastructure to compile Python syntax to machine code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["tbb", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-llvmlite", "py35-numpy"]}], "depends_on": []}, {"name": "py36-numba", "portdir": "python/py-numba", "version": "0.53.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://numba.pydata.org/", "description": "Numba is a NumPy aware dynamic compiler for Python.", "long_description": "Numba is an Open Source NumPy-aware optimizing compiler for Python. It uses the remarkable LLVM compiler infrastructure to compile Python syntax to machine code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["tbb", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-llvmlite", "py36-numpy"]}], "depends_on": []}, {"name": "py26-numeric", "portdir": "python/py-numeric", "version": "24.2", "license": "PSF", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://numpy.scipy.org/", "description": "fast numerical array language for python", "long_description": "Numerical Python adds a fast, compact, multidimensional array language facility to Python.", "active": true, "categories": ["devel", "math", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python26"]}], "depends_on": []}, {"name": "py37-numba", "portdir": "python/py-numba", "version": "0.53.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://numba.pydata.org/", "description": "Numba is a NumPy aware dynamic compiler for Python.", "long_description": "Numba is an Open Source NumPy-aware optimizing compiler for Python. It uses the remarkable LLVM compiler infrastructure to compile Python syntax to machine code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["tbb", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-llvmlite", "py37-numpy"]}], "depends_on": [{"type": "run", "ports": ["py37-librosa", "py37-magenta", "py37-note-seq", "py37-resampy", "py37-umap-learn"]}]}, {"name": "py38-numba", "portdir": "python/py-numba", "version": "0.53.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://numba.pydata.org/", "description": "Numba is a NumPy aware dynamic compiler for Python.", "long_description": "Numba is an Open Source NumPy-aware optimizing compiler for Python. It uses the remarkable LLVM compiler infrastructure to compile Python syntax to machine code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["tbb", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-llvmlite", "py38-numpy"]}], "depends_on": [{"type": "run", "ports": ["py38-librosa", "py38-magenta", "py38-note-seq", "py38-resampy", "py38-umap-learn"]}]}, {"name": "py39-numba", "portdir": "python/py-numba", "version": "0.53.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://numba.pydata.org/", "description": "Numba is a NumPy aware dynamic compiler for Python.", "long_description": "Numba is an Open Source NumPy-aware optimizing compiler for Python. It uses the remarkable LLVM compiler infrastructure to compile Python syntax to machine code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["tbb", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-llvmlite", "py39-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-numba"]}, {"type": "run", "ports": ["py39-librosa", "py39-magenta", "py39-note-seq", "py39-resampy", "py39-umap-learn"]}]}, {"name": "py-numeric", "portdir": "python/py-numeric", "version": "24.2", "license": "PSF", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://numpy.scipy.org/", "description": "fast numerical array language for python", "long_description": "Numerical Python adds a fast, compact, multidimensional array language facility to Python.", "active": true, "categories": ["devel", "math", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-numeric"]}], "depends_on": []}, {"name": "py27-numeric", "portdir": "python/py-numeric", "version": "24.2", "license": "PSF", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://numpy.scipy.org/", "description": "fast numerical array language for python", "long_description": "Numerical Python adds a fast, compact, multidimensional array language facility to Python.", "active": true, "categories": ["devel", "math", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["gazpacho", "py27-kiwi", "py-numeric", "py27-pedal", "pdb2pqr"]}]}, {"name": "py-numexpr", "portdir": "python/py-numexpr", "version": "2.7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pydata/numexpr", "description": "Multiple-operator array expression evaluator", "long_description": "The numexpr package evaluates multiple-operator array expressions many times faster than NumPy can. It accepts the expression as a string, analyzes it, rewrites it more efficiently, and compiles it on the fly into code for its internal virtual machine (VM). Due to its integrated just-in-time (JIT) compiler, it does not require a compiler at runtime.", "active": true, "categories": ["math", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-numexpr"]}], "depends_on": []}]}