{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=409", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=407", "results": [{"name": "py-sphinx-autodoc-typehints", "portdir": "python/py-sphinx-autodoc-typehints", "version": "1.12.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/agronholm/sphinx-autodoc-typehints", "description": "Type hints (PEP 484) support for the Sphinx autodoc extension", "long_description": "This extension allows you to use Python 3 annotations for documenting acceptable argument types and return value types of functions.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-sphinx-autodoc-typehints"]}], "depends_on": []}, {"name": "py36-sphinx-autodoc-typehints", "portdir": "python/py-sphinx-autodoc-typehints", "version": "1.12.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/agronholm/sphinx-autodoc-typehints", "description": "Type hints (PEP 484) support for the Sphinx autodoc extension", "long_description": "This extension allows you to use Python 3 annotations for documenting acceptable argument types and return value types of functions.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools", "py36-setuptools_scm"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-sphinx"]}], "depends_on": []}, {"name": "py37-sphinx-autodoc-typehints", "portdir": "python/py-sphinx-autodoc-typehints", "version": "1.12.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/agronholm/sphinx-autodoc-typehints", "description": "Type hints (PEP 484) support for the Sphinx autodoc extension", "long_description": "This extension allows you to use Python 3 annotations for documenting acceptable argument types and return value types of functions.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools", "py37-setuptools_scm"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-sphinx"]}], "depends_on": []}, {"name": "py38-sphinx-autodoc-typehints", "portdir": "python/py-sphinx-autodoc-typehints", "version": "1.12.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/agronholm/sphinx-autodoc-typehints", "description": "Type hints (PEP 484) support for the Sphinx autodoc extension", "long_description": "This extension allows you to use Python 3 annotations for documenting acceptable argument types and return value types of functions.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools", "py38-setuptools_scm"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-sphinx"]}], "depends_on": []}, {"name": "py35-sphinxcontrib-htmlhelp", "portdir": "python/py-sphinxcontrib-htmlhelp", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.sphinx-doc.org/", "description": "a sphinx extension which renders HTML help files", "long_description": "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-docutils"]}], "depends_on": [{"type": "run", "ports": ["py35-sphinx"]}]}, {"name": "py310-jinja2", "portdir": "python/py-jinja2", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://palletsprojects.com/p/jinja/", "description": "Python based sandboxed template engine", "long_description": "Jinja is a sandboxed template engine written in pure Python licensed under the BSD license. It provides a Django-like non-XML syntax and compiles templates into executable python code. It's basically a combination of Django templates and python code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["py310-setuptools", "py310-wheel", "py310-build", "clang-9.0", "py310-python-install"]}, {"type": "lib", "ports": ["py310-markupsafe", "python310"]}], "depends_on": [{"type": "lib", "ports": ["py310-cookiecutter", "py310-jinja2-time", "py310-nbconvert", "py310-notebook"]}, {"type": "run", "ports": ["py310-sphinx"]}]}, {"name": "py39-jinja2", "portdir": "python/py-jinja2", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://palletsprojects.com/p/jinja/", "description": "Python based sandboxed template engine", "long_description": "Jinja is a sandboxed template engine written in pure Python licensed under the BSD license. It provides a Django-like non-XML syntax and compiles templates into executable python code. It's basically a combination of Django templates and python code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["py39-python-install", "py39-wheel", "py39-build", "clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["py39-markupsafe", "python39"]}], "depends_on": [{"type": "build", "ports": ["py39-numpydoc", "py39-astropy", "py39-spaCy-models"]}, {"type": "lib", "ports": ["py39-bokeh", "py39-rpy2", "py39-flask", "py39-jupyter_server", "py39-jupyterlab", "py39-jupyterlab_server", "py39-notebook", "py-jinja2", "usd", "py39-upt-macports", "py39-ansible-core", "qutebrowser", "py39-cookiecutter", "py39-jinja2-time", "py39-altair", "py39-nbconvert"]}, {"type": "run", "ports": ["py39-libpysal", "buildbot", "pyinfra", "commitizen", "qgis3", "py39-myst-parser", "py39-sphinx"]}]}, {"name": "py-sphinxcontrib-htmlhelp", "portdir": "python/py-sphinxcontrib-htmlhelp", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.sphinx-doc.org/", "description": "a sphinx extension which renders HTML help files", "long_description": "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-sphinxcontrib-htmlhelp"]}], "depends_on": []}, {"name": "py36-sphinxcontrib-htmlhelp", "portdir": "python/py-sphinxcontrib-htmlhelp", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.sphinx-doc.org/", "description": "a sphinx extension which renders HTML help files", "long_description": "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-docutils"]}], "depends_on": [{"type": "run", "ports": ["py36-sphinx"]}]}, {"name": "py36-pyicu", "portdir": "python/py-pyicu", "version": "2.8", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gitlab.pyicu.org/main/pyicu", "description": "Python extension wrapping the ICU C++ API", "long_description": "Python extension wrapping the ICU C++ API", "active": true, "categories": ["textproc", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["icu", "python36"]}, {"type": "test", "ports": ["py36-pytest", "py36-six"]}], "depends_on": [{"type": "run", "ports": ["py36-natsort"]}]}, {"name": "py37-rich", "portdir": "python/py-rich", "version": "10.13.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://rich.readthedocs.io/en/latest/", "description": "Python library for rich text and beautiful formatting in the terminal", "long_description": "Python library for rich text and beautiful formatting in the terminal. The Rich API makes it easy to add color and style to terminal output. Rich can also render pretty tables, progress bars, markdown, syntax highlighted source code, tracebacks, and more \u2014 out of the box.", "active": true, "categories": ["python"], "maintainers": [{"name": "harensdeveloper", "github": "harens", "ports_count": 95}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-typing_extensions", "py37-pygments", "py37-colorama", "py37-commonmark"]}], "depends_on": [{"type": "lib", "ports": ["py37-enrich"]}]}, {"name": "py37-rpy2", "portdir": "python/py-rpy2", "version": "3.4.5", "license": "(MPL-1.1 or LGPL-2.1+)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://rpy.sourceforge.net/rpy2.html", "description": "A simple and efficient access to R from Python", "long_description": "rpy2 is a redesign and rewrite of rpy. It is providing a low-level interface to R, a proposed high-level interface, including wrappers to graphical libraries, as well as R-like structures and functions.", "active": true, "categories": ["science", "math", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["openmp", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["R", "py37-cffi", "py37-jinja2", "libomp", "py37-simplegeneric", "py37-tz", "py37-tzlocal", "py37-pytest", "python37"]}], "depends_on": []}, {"name": "py27-dill", "portdir": "python/py-dill", "version": "0.3.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/uqfoundation/dill", "description": "serialize all of python extends python's pickle module", "long_description": "dill extends python's pickle module for serializing and de-serializing python objects to the majority of the built-in python types. It provides the user the same interface as the pickle module, and also includes some additional features. In addition to pickling python objects, dill provides the ability to save the state of an interpreter session in a single command.", "active": true, "categories": ["python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}, {"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py38-gpilab-framework", "portdir": "python/py-gpilab-framework", "version": "1.3.0", "license": "LGPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://gpilab.com", "description": "This is the GPI Framework project.", "long_description": "This is the GPI Framework project. The framework constitutes the main process that provides a canvas for graphically organizing and assembling algorithm components called 'Nodes'. The framework also contains the PyFI C++ interface for simplifying the generation of Python extension modules.", "active": true, "categories": ["python"], "maintainers": [{"name": "eborisch", "github": "eborisch", "ports_count": 165}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-numpy", "py38-psutil", "py38-pyqt5", "py38-qtpy", "python38"]}, {"type": "run", "ports": ["eigen3", "fftw-3", "fftw-3-single", "gpilab_select", "py38-Pillow", "py38-json-tricks", "py38-opengl", "py38-pep8", "py38-pyflakes", "py38-qimage2ndarray", "py38-scipy", "py38-sip", "astyle"]}], "depends_on": [{"type": "lib", "ports": ["py38-gpilab-core"]}]}, {"name": "py38-rpy2", "portdir": "python/py-rpy2", "version": "3.4.5", "license": "(MPL-1.1 or LGPL-2.1+)", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://rpy.sourceforge.net/rpy2.html", "description": "A simple and efficient access to R from Python", "long_description": "rpy2 is a redesign and rewrite of rpy. It is providing a low-level interface to R, a proposed high-level interface, including wrappers to graphical libraries, as well as R-like structures and functions.", "active": true, "categories": ["science", "math", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["openmp", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["R", "py38-cffi", "py38-jinja2", "libomp", "py38-simplegeneric", "py38-tz", "py38-tzlocal", "py38-pytest", "python38"]}], "depends_on": []}, {"name": "sane-backends", "portdir": "graphics/sane-backends", "version": "1.0.31", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.sane-project.org/", "description": "Backends for scanner access", "long_description": "These are the backends for the Scanner Access Now Easy project. They allow you to access various scanners either locally or remotely using saned.", "active": true, "categories": ["graphics"], "maintainers": [], "variants": ["no_local", "pnm", "gphoto2", "avahi", "escl", "universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["openssl", "libjpeg-turbo", "tiff", "zlib", "net-snmp", "libxml2", "avahi", "libusb"]}], "depends_on": [{"type": "lib", "ports": ["sane-frontends", "twain-sane", "libksane", "xsane"]}]}, {"name": "py-myst-parser", "portdir": "python/py-myst-parser", "version": "0.15.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/executablebooks/MyST-Parser", "description": "An extended commonmark compliant parser, with bridges to docutils & sphinx.", "long_description": "MyST is a flavor of markdown that is designed for simplicity, flexibility, and extensibility. This repository serves as the reference implementation of MyST Markdown, as well as a collection of tools to support working with MyST in Python and Sphinx. It contains an extended CommonMark-compliant parser using markdown-it-py, as well as a Sphinx extension that allows you to write MyST Markdown in Sphinx.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-myst-parser"]}], "depends_on": []}, {"name": "py37-jinja2", "portdir": "python/py-jinja2", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://palletsprojects.com/p/jinja/", "description": "Python based sandboxed template engine", "long_description": "Jinja is a sandboxed template engine written in pure Python licensed under the BSD license. It provides a Django-like non-XML syntax and compiles templates into executable python code. It's basically a combination of Django templates and python code.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "jmr", "github": "jmroot", "ports_count": 201}], "variants": [], "dependencies": [{"type": "build", "ports": ["py37-python-install", "py37-wheel", "py37-build", "clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-markupsafe", "python37"]}], "depends_on": [{"type": "build", "ports": ["py37-spaCy-models", "py37-astropy", "py37-numpydoc"]}, {"type": "lib", "ports": ["py37-eli5", "py37-flask", "py37-flask-babel", "py37-jupyter_server", "py37-jupyterlab", "py37-jupyterlab_server", "py37-mpld3", "py37-notebook", "py37-rpy2", "py37-dap", "py37-altair", "py37-nbconvert", "py37-bokeh", "py37-upt-macports", "py37-ansible-core", "py37-cookiecutter", "py37-jinja2-time"]}, {"type": "run", "ports": ["py37-libpysal", "py37-sphinx", "py37-myst-parser"]}]}, {"name": "py-thinc", "portdir": "python/py-thinc", "version": "8.0.13", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/explosion/thinc", "description": "spaCy's Machine Learning library for NLP in Python", "long_description": "spaCy's Machine Learning library for NLP in Python", "active": true, "categories": ["python"], "maintainers": [{"name": "jonesc", "github": "cjones051073", "ports_count": 175}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-thinc"]}], "depends_on": []}, {"name": "poetry", "portdir": "python/poetry", "version": "1.1.11", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-poetry.org/", "description": "Python dependency management and packaging made easy.", "long_description": "Poetry: Dependency Management for Python. Poetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "davidgilman1", "github": "dgilman", "ports_count": 46}], "variants": ["python37", "python38", "python39"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["py39-cachy", "py39-cleo", "py39-clikit", "py39-crashtest", "py39-html5lib", "py39-keyring", "py39-lockfile", "py39-packaging", "python39", "py39-pkginfo", "py39-poetry-core", "py39-requests", "py39-requests-toolbelt", "py39-shellingham", "py39-tomlkit", "py39-virtualenv", "py39-pexpect", "py39-cachecontrol"]}], "depends_on": [{"type": "build", "ports": ["py38-cipheycore", "py39-cipheycore", "py36-alagitpull", "py37-alagitpull", "py38-alagitpull", "py39-alagitpull", "py37-pygmsh", "py38-pygmsh", "py39-pygmsh"]}]}, {"name": "py35-dill", "portdir": "python/py-dill", "version": "0.3.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/uqfoundation/dill", "description": "serialize all of python extends python's pickle module", "long_description": "dill extends python's pickle module for serializing and de-serializing python objects to the majority of the built-in python types. It provides the user the same interface as the pickle module, and also includes some additional features. In addition to pickling python objects, dill provides the ability to save the state of an interpreter session in a single command.", "active": false, "categories": ["python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py38-sphinxcontrib-htmlhelp", "portdir": "python/py-sphinxcontrib-htmlhelp", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.sphinx-doc.org/", "description": "a sphinx extension which renders HTML help files", "long_description": "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-docutils"]}], "depends_on": [{"type": "run", "ports": ["py38-sphinx"]}]}, {"name": "hugin-app", "portdir": "graphics/hugin-app", "version": "2019.2.0", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://hugin.sourceforge.net", "description": "Panorama photo stitcher", "long_description": "An easy to use cross-platform panoramic imaging toolchain based on Panorama Tools. With hugin you can assemble a mosaic of photographs into a complete immersive panorama, stitch any series of overlapping pictures and much more.", "active": true, "categories": ["graphics"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": ["debug", "accelerate", "atlas", "openblas", "python36", "python37", "python38", "python39", "python310", "universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "pkgconfig", "cmake"]}, {"type": "lib", "ports": ["swig-python", "exiv2", "glew", "lcms2", "libjpeg-turbo", "libpano13", "libpng", "openexr", "ilmbase", "zlib", "vigra", "wxWidgets-3.0", "python39", "fftw-3", "flann", "boost171", "tiff", "sqlite3", "gettext"]}, {"type": "run", "ports": ["p5.28-image-exiftool", "enblend"]}], "depends_on": [{"type": "run", "ports": ["luminance-hdr"]}]}, {"name": "py39-sphinxcontrib-htmlhelp", "portdir": "python/py-sphinxcontrib-htmlhelp", "version": "2.0.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.sphinx-doc.org/", "description": "a sphinx extension which renders HTML help files", "long_description": "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files.", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-docutils"]}], "depends_on": [{"type": "build", "ports": ["cmake-devel-docs", "notmuch"]}, {"type": "lib", "ports": ["py-sphinxcontrib-htmlhelp"]}, {"type": "run", "ports": ["py39-sphinx"]}]}, {"name": "enchant2", "portdir": "textproc/enchant2", "version": "2.3.1", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/AbiWord/enchant", "description": "Generic spell checking library", "long_description": "Enchant aims to provide a simple but comprehensive abstraction for dealing with different spell checking libraries in a consistent way. Installs in parallel with legacy Enchant 1.x versions without conflict.", "active": true, "categories": ["devel", "textproc"], "maintainers": [], "variants": ["aspell", "hunspell", "nuspell", "applespell", "universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["glib2"]}], "depends_on": [{"type": "lib", "ports": ["py35-enchant", "py36-enchant", "py37-enchant", "py38-enchant", "py39-enchant", "py310-enchant", "cherrytree", "gspell", "webkit2-gtk", "webkit2-gtk-devel", "gtkspell3"]}]}, {"name": "procenv", "portdir": "sysutils/procenv", "version": "0.60", "license": "GPL-3", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/jamesodhunt/procenv", "description": "Command-line utility to show process environment", "long_description": "procenv is a simple command-line utility, written in C and licensed under the GPL, that dumps all attributes of the environment in which it runs, in well-structured plain ASCII, JSON (YAML), XML or CSV.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "harens", "github": "harens", "ports_count": 12}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["autoconf", "automake", "libtool", "pkgconfig", "clang-9.0"]}], "depends_on": []}, {"name": "sqlite3", "portdir": "databases/sqlite3", "version": "3.36.0", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.sqlite.org/", "description": "an embedded SQL database engine", "long_description": "SQLite3 is an SQL database engine in a C library. Programs that link the SQLite3 library can have SQL database access without running a separate RDBMS process. The distribution comes with a standalone command-line access program (sqlite3) that can be used to administer an SQLite3 database and which serves as an example of how to use the SQLite3 library.", "active": true, "categories": ["databases"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["zlib", "libedit", "ncurses"]}], "depends_on": [{"type": "build", "ports": ["sqlitewrapped"]}, {"type": "lib", "ports": ["monotone-devel", "subversion", "subversion-javahlbindings", "subversion-perlbindings-5.28", "subversion-perlbindings-5.30", "subversion-perlbindings-5.32", "subversion-rubybindings", "zorba", "subversion-python27bindings", "mediatomb", "libpreludedb", "qt6-sqlite-plugin", "janet-sqlite3", "mame", "webkit2-gtk-devel", "darktable", "monotone", "cadabra2", "kget", "qgis3", "seed", "xmms2", "xeus-sqlite", "Akumuli", "darwinbuild-legacy", "hyperscan", "python310", "python39", "spatialite", "textmate2", "gdal", "qgis", "balsa", "subversion-pythonbindings-2.7", "subversion-pythonbindings-3.5", "subversion-pythonbindings-3.6", "subversion-pythonbindings-3.7", "subversion-pythonbindings-3.8", "subversion-pythonbindings-3.9", "Io", "exim", "rspamd", "gdb-apple", "qt4-mac-sqlite3-plugin", "apr-util", "telepathy-logger", "libdbi-drivers", "libzdb-sqlite3", "sqlitecpp", "darwinbuild", "kyua", "sqlitebrowser", "radlib", "subversion-perlbindings-5.26", "hugin-app", "xmoto", "proj6", "proj7", "wview", "aircrack-ng", "sequoia-pgp", "softhsm", "dupd", "gearmand", "rpm", "rpm54", "sleuthkit", "bzrtp", "grilo-plugins", "poco", "libsoup", "SQLClient", "openslide", "javasqlite", "kopete", "neko", "gnupg2", "python32", "python33", "qore-sqlite3-module", "bogofilter", "muchsync", "apophenia", "py37-dlib", "py38-dlib", "py39-dlib", "xmltv", "minidlna", "moodss", "ncdc", "ocaml-sqlite3", "python311-devel", "tippecanoe", "pure-sql3", "py27-apsw", "py35-apsw", "py36-apsw", "py37-apsw", "py38-apsw", "nss", "tracker", "fluent-bit", "py27-sqlite", "py27-yum-metadata-parser", "rb-sqlite3", "rb19-sqlite3", "python38", "macports.sqlext", "ocropus", "xlsx2csv", "FileZilla", "mongrel2", "audacity-legacy", "audacity-devel", "python27", "python34", "python35", "python36", "python37", "php81-sqlite", "php80-sqlite", "php74-sqlite", "qt53-qtwebkit", "phantomjs-qt-qtwebkit", "phantomjs-qt-sqlite-plugin", "qt53-sqlite-plugin", "qt55-qtwebkit", "qt55-sqlite-plugin", "qt56-qtwebkit", "qt56-sqlite-plugin", "qt57-qtwebkit", "php73-sqlite", "qt57-sqlite-plugin", "qt58-qtwebkit", "qt58-sqlite-plugin", "qt59-qtwebkit", "php72-sqlite", "qt59-sqlite-plugin", "php71-sqlite", "php70-sqlite", "php56-sqlite", "php55-sqlite", "php54-sqlite", "evolution-data-server", "php53-sqlite", "proj8", "limesuite", "limesuite-devel", "tagtool", "pypy", "pypy36", "avidemux", "pypy37", "pypy38", "freeciv", "freeciv-x11", "gnubg", "gst", "logjam", "gnomint", "lnav", "bibledit", "libreoffice", "qt5-qtwebkit", "newsboat", "qt5-sqlite-plugin", "qt511-qtwebkit", "cherrytree", "gramps", "epiphany", "qt511-sqlite-plugin", "qt513-qtwebkit", "libchamplain", "liferea", "qt513-sqlite-plugin", "yelp", "python26", "bulk_extractor", "zathura", "zathura-docs", "darktable-devel", "midori", "webkit-gtk", "webkit-gtk3", "webkit-gtk-2.0", "webkit-gtk3-2.0", "webkit2-gtk"]}, {"type": "run", "ports": ["auto-multiple-choice-devel", "sqliteman", "auto-multiple-choice"]}]}, {"name": "sqlite3-tcl", "portdir": "databases/sqlite3", "version": "3.36.0", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.sqlite.org/", "description": "an embedded SQL database engine", "long_description": "SQLite3 is an SQL database engine in a C library. Programs that link the SQLite3 library can have SQL database access without running a separate RDBMS process. The distribution comes with a standalone command-line access program (sqlite3) that can be used to administer an SQLite3 database and which serves as an example of how to use the SQLite3 library.", "active": true, "categories": ["databases"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["tcl"]}], "depends_on": []}, {"name": "py-palettable", "portdir": "python/py-palettable", "version": "3.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jiffyclub.github.io/palettable/", "description": "Color palettes for Python", "long_description": "Palettable (formerly brewer2mpl) is a library of color palettes for Python. It's written in pure Python with no dependencies, but it can supply color maps for matplotlib. You can use Palettable to customize matplotlib plots or supply colors for a web application.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "joe.fowler", "github": "joefowler", "ports_count": 52}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-palettable"]}], "depends_on": []}, {"name": "lilypond", "portdir": "textproc/lilypond", "version": "2.22.1", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://lilypond.org", "description": "An automated engraving system for typesetting sheet music.", "long_description": "Lilypond is a unix-based automated engraving system that generates beautiful sheet music from input files. Lilypond uses its own input format, .ly, which in many ways is similar to LaTeX. Lilypond can export sheet music to PDF, EPS, SVG, and PNG formats, and can also create MIDI files.", "active": true, "categories": ["textproc"], "maintainers": [{"name": "snc", "github": "nerdling", "ports_count": 129}], "variants": ["mactex", "docs"], "dependencies": [{"type": "build", "ports": ["urw-core35-fonts", "p5.28-podlators", "p5.28-scalar-list-utils", "texlive-fonts-recommended", "texlive-metapost", "texinfo", "autoconf", "bison", "flex", "gmake", "pkgconfig", "fontforge", "netpbm", "t1utils", "clang-9.0", "p5.28-encode", "p5.28-pod-escapes", "p5.28-pod-simple"]}, {"type": "lib", "ports": ["ghostscript", "extractpdfmark", "pango", "python310", "guile18"]}], "depends_on": [{"type": "run", "ports": ["denemo"]}]}, {"name": "sqlite3-tools", "portdir": "databases/sqlite3", "version": "3.36.0", "license": "public-domain", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.sqlite.org/", "description": "A bundle of command-line tools for managing SQLite database files", "long_description": "A bundle of command-line tools for managing SQLite database files, including the sqldiff program and the sqlite3_analyzer program.", "active": true, "categories": ["databases"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["zlib", "tcl"]}], "depends_on": []}, {"name": "py37-palettable", "portdir": "python/py-palettable", "version": "3.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jiffyclub.github.io/palettable/", "description": "Color palettes for Python", "long_description": "Palettable (formerly brewer2mpl) is a library of color palettes for Python. It's written in pure Python with no dependencies, but it can supply color maps for matplotlib. You can use Palettable to customize matplotlib plots or supply colors for a web application.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "joe.fowler", "github": "joefowler", "ports_count": 52}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "run", "ports": ["py37-pymatgen"]}]}, {"name": "gocryptfs", "portdir": "fuse/gocryptfs", "version": "2.2.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://nuetzlich.net/gocryptfs/", "description": "Encrypted overlay filesystem written in Go", "long_description": "Encrypted overlay filesystem written in Go", "active": true, "categories": ["fuse"], "maintainers": [{"name": "macports", "github": "MarcelBochtler", "ports_count": 4}], "variants": ["openssl"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "go", "clang-9.0", "pandoc"]}, {"type": "lib", "ports": ["macfuse"]}], "depends_on": []}, {"name": "py38-palettable", "portdir": "python/py-palettable", "version": "3.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://jiffyclub.github.io/palettable/", "description": "Color palettes for Python", "long_description": "Palettable (formerly brewer2mpl) is a library of color palettes for Python. It's written in pure Python with no dependencies, but it can supply color maps for matplotlib. You can use Palettable to customize matplotlib plots or supply colors for a web application.", "active": true, "categories": ["graphics", "python"], "maintainers": [{"name": "joe.fowler", "github": "joefowler", "ports_count": 52}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "run", "ports": ["py38-pymatgen"]}]}, {"name": "librsvg", "portdir": "graphics/librsvg", "version": "2.52.3", "license": "(GPL-2+ or LGPL-2+)", "platforms": "darwin", "epoch": 2, "replaced_by": null, "homepage": "https://wiki.gnome.org/Projects/LibRsvg", "description": "GNOME implementation of rsvg.", "long_description": "GNOME implementation of rsvg.", "active": true, "categories": ["graphics", "gnome"], "maintainers": [{"name": "devans", "github": "dbevans", "ports_count": 1871}, {"name": "mascguy", "github": "mascguy", "ports_count": 129}], "variants": ["universal", "x11", "quartz"], "dependencies": [{"type": "build", "ports": ["cargo", "pkgconfig", "rust", "clang-13"]}, {"type": "extract", "ports": ["xz"]}, {"type": "lib", "ports": ["libxml2", "glib2", "pango", "gobject-introspection", "cairo", "gdk-pixbuf2", "vala"]}], "depends_on": [{"type": "build", "ports": ["gerbv", "libfive", "xlog", "tortoisehg", "kitty", "quodlibet", "octave", "lite-xl", "lite-xl-luajit", "gnome-photos", "meld", "gtkwave"]}, {"type": "lib", "ports": ["pspp-devel", "xmlroff", "AfterStep", "fvwm2", "homebank", "openbox", "darktable-devel", "darktable", "gstreamer1-gst-plugins-bad", "gimp2-devel", "abiword-x11", "gstreamer010-gst-plugins-bad", "ffmpeg", "ffmpeg-devel", "emacs-app", "emacs-app-devel", "solfege", "evas", "gtk2hs", "t4k_common", "xboard", "adwaita-icon-theme", "eog", "glabels", "gnome-chess", "gnome-panel", "gnome-system-monitor", "gnome-themes-extra", "gnome3-core", "goffice", "gpodder", "gthumb", "MyPaint", "OpenSceneGraph", "OpenSceneGraph-devel", "gegl", "gegl-0.3", "gegl-devel", "gimp2", "gimp3-devel", "pdfpc", "vips", "claws-mail", "deluge", "pinpoint", "denemo", "gpredict"]}, {"type": "run", "ports": ["py39-sphinxcontrib-svg2pdfconverter", "py310-sphinxcontrib-svg2pdfconverter", "dia", "auto-multiple-choice", "py38-sphinxcontrib-svg2pdfconverter", "py37-sphinxcontrib-svg2pdfconverter", "py35-sphinxcontrib-svg2pdfconverter", "auto-multiple-choice-devel", "py36-sphinxcontrib-svg2pdfconverter"]}]}, {"name": "py39-wxmplot", "portdir": "python/py-wxmplot", "version": "0.9.45", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://newville.github.io/wxmplot", "description": "Provides wxPython widgets and python functions for displaying numerical data.", "long_description": "Provides wxPython widgets and python functions for displaying numerical data. wxmplot bridges the gap between matplotlib and wxPython by providing wxPython widgets and user-friendly functions for basic 2D line plots, image display, and some custom plots.", "active": true, "categories": ["python"], "maintainers": [{"name": "joe.fowler", "github": "joefowler", "ports_count": 52}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-matplotlib", "py39-numpy", "py39-wxpython-4.0"]}], "depends_on": [{"type": "lib", "ports": ["py-wxmplot"]}, {"type": "run", "ports": ["py39-xraylarch"]}]}, {"name": "boost176-numpy", "portdir": "devel/boost176", "version": "1.76.0", "license": "Boost-1", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.boost.org", "description": "Boost.Numpy library", "long_description": "Boost.Numpy library", "active": true, "categories": ["devel"], "maintainers": [{"name": "michaelld", "github": "michaelld", "ports_count": 382}, {"name": "mascguy", "github": "mascguy", "ports_count": 129}], "variants": ["clang10", "clang11", "clang12", "clang13", "clang50", "mpich", "openmpi", "python27", "python35", "python36", "python37", "python38", "python39", "debug", "no_static", "clang60", "clang70", "clang80", "clang90", "clangdevel", "no_single", "universal", "cmake_scripts"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-numpy", "boost176"]}], "depends_on": [{"type": "lib", "ports": ["ompl", "openvdb", "boost-numpy"]}]}, {"name": "py-wxutils", "portdir": "python/py-wxutils", "version": "0.2.4", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/newville/wxutils", "description": "Provides wxPython utilities and convenience functions.", "long_description": "Provides wxPython utilities and convenience functions. The wxutils library is a small collection of functions and classes, and is by no means comprehensive. The aim is to simplify code, reduce boiler-plate, make wxPython coding a bit more python-like, and prevent repeating code across several projects.", "active": true, "categories": ["python"], "maintainers": [{"name": "joe.fowler", "github": "joefowler", "ports_count": 52}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-wxutils"]}], "depends_on": []}, {"name": "py-alagitpull", "portdir": "python/py-alagitpull", "version": "0.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/git-pull/alagitpull", "description": "Cleverly-named alabaster sub-theme for git-pull projects", "long_description": "Cleverly-named alabaster sub-theme for git-pull projects", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-alagitpull"]}], "depends_on": []}, {"name": "py36-alagitpull", "portdir": "python/py-alagitpull", "version": "0.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/git-pull/alagitpull", "description": "Cleverly-named alabaster sub-theme for git-pull projects", "long_description": "Cleverly-named alabaster sub-theme for git-pull projects", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "poetry", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-alabaster"]}], "depends_on": []}, {"name": "opencv", "portdir": "graphics/opencv", "version": "3.4.14", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": "opencv3", "homepage": "https://www.macports.org", "description": "Obsolete port, replaced by opencv3", "long_description": "This port has been replaced by opencv3.", "active": true, "categories": ["graphics", "science"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": [null]}, {"type": "fetch", "ports": [null]}, {"type": "lib", "ports": [null]}, {"type": "patch", "ports": [null]}, {"type": "run", "ports": [null]}, {"type": "test", "ports": [null]}], "depends_on": []}, {"name": "py37-alagitpull", "portdir": "python/py-alagitpull", "version": "0.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/git-pull/alagitpull", "description": "Cleverly-named alabaster sub-theme for git-pull projects", "long_description": "Cleverly-named alabaster sub-theme for git-pull projects", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "poetry", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-alabaster"]}], "depends_on": []}, {"name": "py38-alagitpull", "portdir": "python/py-alagitpull", "version": "0.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/git-pull/alagitpull", "description": "Cleverly-named alabaster sub-theme for git-pull projects", "long_description": "Cleverly-named alabaster sub-theme for git-pull projects", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "poetry", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-alabaster"]}], "depends_on": []}, {"name": "py39-alagitpull", "portdir": "python/py-alagitpull", "version": "0.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/git-pull/alagitpull", "description": "Cleverly-named alabaster sub-theme for git-pull projects", "long_description": "Cleverly-named alabaster sub-theme for git-pull projects", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "poetry", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-alabaster"]}], "depends_on": [{"type": "lib", "ports": ["py-alagitpull"]}]}, {"name": "py-recommonmark", "portdir": "python/py-recommonmark", "version": "0.7.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/readthedocs/recommonmark", "description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "long_description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "active": true, "categories": ["textproc", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-recommonmark"]}], "depends_on": []}, {"name": "py36-recommonmark", "portdir": "python/py-recommonmark", "version": "0.7.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/readthedocs/recommonmark", "description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "long_description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "active": true, "categories": ["textproc", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-setuptools"]}, {"type": "run", "ports": ["py36-docutils", "py36-commonmark", "py36-sphinx"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": []}, {"name": "py37-recommonmark", "portdir": "python/py-recommonmark", "version": "0.7.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/readthedocs/recommonmark", "description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "long_description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "active": true, "categories": ["textproc", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}, {"type": "run", "ports": ["py37-docutils", "py37-commonmark", "py37-sphinx"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": []}, {"name": "py38-recommonmark", "portdir": "python/py-recommonmark", "version": "0.7.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/readthedocs/recommonmark", "description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "long_description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "active": true, "categories": ["textproc", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-setuptools"]}, {"type": "run", "ports": ["py38-docutils", "py38-commonmark", "py38-sphinx"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "run", "ports": ["py38-transformers"]}]}, {"name": "py39-recommonmark", "portdir": "python/py-recommonmark", "version": "0.7.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/readthedocs/recommonmark", "description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "long_description": "Enables writing CommonMark inside of Docutils & Sphinx projects.", "active": true, "categories": ["textproc", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-setuptools"]}, {"type": "run", "ports": ["py39-docutils", "py39-commonmark", "py39-sphinx"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-recommonmark"]}, {"type": "run", "ports": ["py39-transformers"]}]}, {"name": "py-sphinx-issues", "portdir": "python/py-sphinx-issues", "version": "1.2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/sloria/sphinx-issues", "description": "A Sphinx plugin linking to your project's issue tracker.", "long_description": "", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-sphinx-issues"]}], "depends_on": []}]}