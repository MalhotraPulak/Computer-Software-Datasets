{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=300", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=298", "results": [{"name": "py35-monotonic", "portdir": "python/py-monotonic", "version": "1.6", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/atdt/monotonic", "description": "An implementation of time.monotonic() for Python 2", "long_description": "An implementation of time.monotonic() for Python 2", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-mmtf-python", "portdir": "python/py-mmtf-python", "version": "1.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/rcsb/mmtf-python", "description": "The python implementation of the MMTF API, decoder and encoder.", "long_description": "The python implementation of the MMTF API, decoder and encoder. The macromolecular transmission format (MMTF) is a binary encoding of biological structures. This repository holds the Python 2 and 3 compatible API, encoding and decoding libraries.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "giovanni.bussi", "github": "GiovanniBussi", "ports_count": 61}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-msgpack"]}, {"type": "test", "ports": ["py36-nose", "py36-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py36-MDAnalysis"]}]}, {"name": "py37-mmtf-python", "portdir": "python/py-mmtf-python", "version": "1.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/rcsb/mmtf-python", "description": "The python implementation of the MMTF API, decoder and encoder.", "long_description": "The python implementation of the MMTF API, decoder and encoder. The macromolecular transmission format (MMTF) is a binary encoding of biological structures. This repository holds the Python 2 and 3 compatible API, encoding and decoding libraries.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "giovanni.bussi", "github": "GiovanniBussi", "ports_count": 61}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-msgpack"]}, {"type": "test", "ports": ["py37-nose", "py37-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py37-MDAnalysis"]}]}, {"name": "py38-mmtf-python", "portdir": "python/py-mmtf-python", "version": "1.1.2", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/rcsb/mmtf-python", "description": "The python implementation of the MMTF API, decoder and encoder.", "long_description": "The python implementation of the MMTF API, decoder and encoder. The macromolecular transmission format (MMTF) is a binary encoding of biological structures. This repository holds the Python 2 and 3 compatible API, encoding and decoding libraries.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "giovanni.bussi", "github": "GiovanniBussi", "ports_count": 61}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-msgpack"]}, {"type": "test", "ports": ["py38-nose", "py38-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py38-MDAnalysis", "py-mmtf-python"]}]}, {"name": "py-mock", "portdir": "python/py-mock", "version": "4.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://mock.readthedocs.org/en/latest/", "description": "Rolling backport of unittest.mock for all Pythons", "long_description": "Rolling backport of unittest.mock for all Pythons.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-mock"]}], "depends_on": []}, {"name": "py27-mock", "portdir": "python/py-mock", "version": "3.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://mock.readthedocs.org/en/latest/", "description": "Rolling backport of unittest.mock for all Pythons", "long_description": "Rolling backport of unittest.mock for all Pythons.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-funcsigs", "py27-six"]}], "depends_on": [{"type": "lib", "ports": ["py27-visa", "py27-docx", "py27-flask-restful", "py27-MDAnalysis"]}, {"type": "run", "ports": ["py27-obspy", "lscsoft-deps", "py27-cartopy"]}, {"type": "test", "ports": ["py27-language-server", "py27-python-jsonrpc-server", "py27-xkcdpass", "py27-aniso8601", "py27-behave", "py27-bqplot", "py27-colour", "py27-cssutils", "py27-csvkit", "py27-geopy", "py27-json-rpc", "py27-m2r", "py27-pygraphviz", "py27-requests-cache", "py27-scandir", "py27-supervisor", "py27-transaction", "py27-tzlocal", "py27-webtest", "py27-wurlitzer", "py27-selectors2", "py27-columnize", "py27-dateutil", "py27-freezegun", "py27-qtpy", "py27-flake8", "py27-xarray", "py27-ddt", "py27-docker", "py27-libcloud", "py27-oauthlib", "buildbot-0.8", "buildbot-slave-0.8", "py27-hcloud"]}]}, {"name": "py35-mock", "portdir": "python/py-mock", "version": "3.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://mock.readthedocs.org/en/latest/", "description": "Rolling backport of unittest.mock for all Pythons", "long_description": "Rolling backport of unittest.mock for all Pythons.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-six"]}], "depends_on": [{"type": "run", "ports": ["py35-cartopy"]}, {"type": "test", "ports": ["py35-python-jsonrpc-server", "py35-bqplot", "py35-cssutils", "py35-geopy", "py35-libcloud", "py35-m2r", "py35-oauthlib", "py35-pygraphviz", "py35-requests-cache", "py35-transaction", "py35-webtest", "py35-wurlitzer", "py35-columnize", "py35-freezegun", "py35-qtpy", "py35-flake8", "py35-language-server", "py35-ddt"]}]}, {"name": "py36-mock", "portdir": "python/py-mock", "version": "4.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://mock.readthedocs.org/en/latest/", "description": "Rolling backport of unittest.mock for all Pythons", "long_description": "Rolling backport of unittest.mock for all Pythons.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "build", "ports": ["py36-acme"]}, {"type": "lib", "ports": ["py36-MDAnalysis", "py36-visa", "py36-thinc"]}, {"type": "run", "ports": ["py36-cartopy", "py36-pytest-mock"]}, {"type": "test", "ports": ["py36-bqplot", "py36-colour", "py36-cssutils", "py36-geopy", "py36-m2r", "py36-pygraphviz", "py36-requests-cache", "py36-libcloud", "py36-transaction", "py36-tzlocal", "py36-webtest", "py36-wurlitzer", "py36-columnize", "py36-freezegun", "py36-python-lsp-jsonrpc", "py36-qtpy", "py36-flake8", "py36-ddt", "py36-srsly", "py36-spaCy", "py36-oauthlib", "py36-python-lsp-server", "py36-language-server", "py36-python-jsonrpc-server", "py36-behave"]}]}, {"name": "py38-mock", "portdir": "python/py-mock", "version": "4.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://mock.readthedocs.org/en/latest/", "description": "Rolling backport of unittest.mock for all Pythons", "long_description": "Rolling backport of unittest.mock for all Pythons.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "build", "ports": ["py38-acme", "py38-tensorflow", "py38-tensorflow1"]}, {"type": "lib", "ports": ["py38-docx", "py38-MDAnalysis", "py38-visa", "py38-thinc"]}, {"type": "run", "ports": ["py38-apache-beam", "py38-cartopy", "py38-pytest-mock", "py38-pytest-shutil"]}, {"type": "test", "ports": ["py38-colour", "py38-cssutils", "py38-geopy", "py38-m2r", "py38-parameterized", "py38-pytest-virtualenv", "py38-requests-cache", "py38-spaCy", "py38-transaction", "py38-treq", "py38-tzlocal", "py38-wurlitzer", "py38-columnize", "py38-freezegun", "py38-python-lsp-jsonrpc", "py38-qtpy", "py38-flake8", "py38-pyshark", "py38-ddt", "py38-srsly", "py38-hcloud", "py38-docker", "py38-libcloud", "py38-oauthlib", "py38-python-lsp-server", "http-prompt", "py38-language-server", "py38-python-jsonrpc-server", "py38-aws-sam-translator", "py38-behave", "py38-cfn-lint"]}]}, {"name": "py39-mock", "portdir": "python/py-mock", "version": "4.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://mock.readthedocs.org/en/latest/", "description": "Rolling backport of unittest.mock for all Pythons", "long_description": "Rolling backport of unittest.mock for all Pythons.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "build", "ports": ["py39-tensorflow1", "py39-acme", "py39-tensorflow"]}, {"type": "lib", "ports": ["certbot-dns-gehirn", "py-mock", "certbot-dns-google", "certbot-dns-linode", "certbot-dns-luadns", "certbot-dns-nsone", "certbot-dns-ovh", "certbot-dns-rfc2136", "certbot-dns-route53", "certbot-dns-sakuracloud", "certbot", "certbot-dns-namecheap", "certbot-dns-dnsimple", "certbot-dns-dnsmadeeasy", "certbot-dns-cloudxns", "certbot-dns-digitalocean", "py39-thinc", "certbot-apache", "certbot-nginx", "certbot-dns-cloudflare"]}, {"type": "run", "ports": ["py39-pytest-mock", "py39-cartopy", "py39-apache-beam"]}, {"type": "test", "ports": ["py39-ddt", "py39-srsly", "py39-hcloud", "gtk-doc", "py39-docker", "py39-oauthlib", "py39-python-lsp-server", "tortoisehg", "py39-language-server", "py39-python-jsonrpc-server", "buildbot", "buildbot-worker", "py39-behave", "py39-colour", "py39-cssutils", "py39-geopy", "py39-m2r", "py39-parameterized", "py39-spaCy", "py39-treq", "py39-tzlocal", "py39-wurlitzer", "py39-columnize", "py39-freezegun", "py39-python-lsp-jsonrpc", "py39-qtpy", "py39-flake8", "py39-pyshark"]}]}, {"name": "py-moin", "portdir": "python/py-moin", "version": "1.9.10", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://moinmo.in/", "description": "a Python-based WikiEngine", "long_description": "MoinMoin is an advanced, easy to use and extensible WikiEngine with a large community of users. Said in a few words, it is about collaboration on easily editable web pages.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-moin"]}], "depends_on": []}, {"name": "py27-moin", "portdir": "python/py-moin", "version": "1.9.10", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://moinmo.in/", "description": "a Python-based WikiEngine", "long_description": "MoinMoin is an advanced, easy to use and extensible WikiEngine with a large community of users. Said in a few words, it is about collaboration on easily editable web pages.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-moin"]}]}, {"name": "py-mongoalchemy", "portdir": "python/py-mongoalchemy", "version": "0.21", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.mongoalchemy.org", "description": "Document-Object Mapper/Toolkit for Mongo Databases", "long_description": "MongoAlchemy is a layer on top of the Python MongoDB driver which adds client-side schema definitions, an easier to work with and programmatic query language, and a Document-Object mapper which allows python objects to be saved and loaded into the database in a type-safe way.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-mongoalchemy"]}], "depends_on": []}, {"name": "py27-mongoalchemy", "portdir": "python/py-mongoalchemy", "version": "0.21", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.mongoalchemy.org", "description": "Document-Object Mapper/Toolkit for Mongo Databases", "long_description": "MongoAlchemy is a layer on top of the Python MongoDB driver which adds client-side schema definitions, an easier to work with and programmatic query language, and a Document-Object mapper which allows python objects to be saved and loaded into the database in a type-safe way.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-pymongo"]}], "depends_on": [{"type": "lib", "ports": ["py27-flask-mongoalchemy", "py-mongoalchemy"]}]}, {"name": "py-mongoengine", "portdir": "python/py-mongoengine", "version": "0.18.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mongoengine.org/", "description": "MongoEngine is a Document-Object Mapper (think ORM, but for document databases) for working with MongoDB from Python.", "long_description": "MongoEngine is a Document-Object Mapper (think ORM, but for document databases) for working with MongoDB from Python. It uses a simple declarative API, similar to the Django ORM.", "active": true, "categories": ["python"], "maintainers": [{"name": "cal", "github": "neverpanic", "ports_count": 58}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-mongoengine"]}], "depends_on": []}, {"name": "py27-mongoengine", "portdir": "python/py-mongoengine", "version": "0.18.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mongoengine.org/", "description": "MongoEngine is a Document-Object Mapper (think ORM, but for document databases) for working with MongoDB from Python.", "long_description": "MongoEngine is a Document-Object Mapper (think ORM, but for document databases) for working with MongoDB from Python. It uses a simple declarative API, similar to the Django ORM.", "active": true, "categories": ["python"], "maintainers": [{"name": "cal", "github": "neverpanic", "ports_count": 58}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-pymongo", "py27-six"]}], "depends_on": []}, {"name": "py35-mongoengine", "portdir": "python/py-mongoengine", "version": "0.18.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mongoengine.org/", "description": "MongoEngine is a Document-Object Mapper (think ORM, but for document databases) for working with MongoDB from Python.", "long_description": "MongoEngine is a Document-Object Mapper (think ORM, but for document databases) for working with MongoDB from Python. It uses a simple declarative API, similar to the Django ORM.", "active": true, "categories": ["python"], "maintainers": [{"name": "cal", "github": "neverpanic", "ports_count": 58}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-pymongo", "py35-six"]}], "depends_on": []}, {"name": "py36-mongoengine", "portdir": "python/py-mongoengine", "version": "0.18.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://mongoengine.org/", "description": "MongoEngine is a Document-Object Mapper (think ORM, but for document databases) for working with MongoDB from Python.", "long_description": "MongoEngine is a Document-Object Mapper (think ORM, but for document databases) for working with MongoDB from Python. It uses a simple declarative API, similar to the Django ORM.", "active": true, "categories": ["python"], "maintainers": [{"name": "cal", "github": "neverpanic", "ports_count": 58}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-pymongo", "py36-six"]}], "depends_on": [{"type": "lib", "ports": ["py-mongoengine"]}]}, {"name": "py36-python-lsp-black", "portdir": "python/py-python-lsp-black", "version": "1.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-lsp/python-lsp-black", "description": "Black plugin for python-lsp-server", "long_description": "Black plugin for python-lsp-server. Forked from pyls-black (https://github.com/rupert/pyls-black).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-black", "py36-setuptools", "py36-python-lsp-server"]}], "depends_on": [{"type": "run", "ports": ["py36-spyder-devel", "py36-spyder"]}]}, {"name": "py-mongoose", "portdir": "python/py-mongoose", "version": "0.1", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://themongoose.sourceforge.net/", "description": "advanced python exception handler", "long_description": "Mongoose catches runaway Pythons. It provides a graceful exit and report when an uncaught Python exception occurs in deployed production or beta software, catches and reports otherwise unhandled Python exceptions in a helpful and extensible manner, automatically generates an unique Mongoose Incident Identifier to help you track the same bug across multiple computers.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-mongoose"]}], "depends_on": []}, {"name": "py27-mongoose", "portdir": "python/py-mongoose", "version": "0.1", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://themongoose.sourceforge.net/", "description": "advanced python exception handler", "long_description": "Mongoose catches runaway Pythons. It provides a graceful exit and report when an uncaught Python exception occurs in deployed production or beta software, catches and reports otherwise unhandled Python exceptions in a helpful and extensible manner, automatically generates an unique Mongoose Incident Identifier to help you track the same bug across multiple computers.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-mongoose"]}]}, {"name": "py-monotonic", "portdir": "python/py-monotonic", "version": "1.6", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/atdt/monotonic", "description": "An implementation of time.monotonic() for Python 2", "long_description": "An implementation of time.monotonic() for Python 2", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-monotonic"]}], "depends_on": []}, {"name": "py35-montage", "portdir": "python/py-montage", "version": "0.9.9", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.astropy.org/montage-wrapper/", "description": "Montage python wrapper", "long_description": "Python-montage is a pure python module that provides a Python API to the Montage Astronomical Image Mosaic Engine, including both functions to access individual Montage commands, and high-level functions to facilitate mosaicking and re-projecting.", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-astropy", "py35-numpy", "montage"]}], "depends_on": []}, {"name": "py27-montage", "portdir": "python/py-montage", "version": "0.9.9", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.astropy.org/montage-wrapper/", "description": "Montage python wrapper", "long_description": "Python-montage is a pure python module that provides a Python API to the Montage Astronomical Image Mosaic Engine, including both functions to access individual Montage commands, and high-level functions to facilitate mosaicking and re-projecting.", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "run", "ports": ["py27-astropy", "py27-numpy", "montage"]}], "depends_on": []}, {"name": "py-montage", "portdir": "python/py-montage", "version": "0.9.9", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.astropy.org/montage-wrapper/", "description": "Montage python wrapper", "long_description": "Python-montage is a pure python module that provides a Python API to the Montage Astronomical Image Mosaic Engine, including both functions to access individual Montage commands, and high-level functions to facilitate mosaicking and re-projecting.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-montage"]}], "depends_on": []}, {"name": "py27-monotonic", "portdir": "python/py-monotonic", "version": "1.6", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/atdt/monotonic", "description": "An implementation of time.monotonic() for Python 2", "long_description": "An implementation of time.monotonic() for Python 2", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-eventlet", "py27-tornado", "py27-fasteners"]}]}, {"name": "py36-monotonic", "portdir": "python/py-monotonic", "version": "1.6", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/atdt/monotonic", "description": "An implementation of time.monotonic() for Python 2", "long_description": "An implementation of time.monotonic() for Python 2", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-eventlet"]}]}, {"name": "py37-monotonic", "portdir": "python/py-monotonic", "version": "1.6", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/atdt/monotonic", "description": "An implementation of time.monotonic() for Python 2", "long_description": "An implementation of time.monotonic() for Python 2", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-eventlet"]}]}, {"name": "py38-monotonic", "portdir": "python/py-monotonic", "version": "1.6", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/atdt/monotonic", "description": "An implementation of time.monotonic() for Python 2", "long_description": "An implementation of time.monotonic() for Python 2", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-eventlet"]}]}, {"name": "py39-monotonic", "portdir": "python/py-monotonic", "version": "1.6", "license": "Apache", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/atdt/monotonic", "description": "An implementation of time.monotonic() for Python 2", "long_description": "An implementation of time.monotonic() for Python 2", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-monotonic", "py39-eventlet"]}]}, {"name": "py36-montage", "portdir": "python/py-montage", "version": "0.9.9", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.astropy.org/montage-wrapper/", "description": "Montage python wrapper", "long_description": "Python-montage is a pure python module that provides a Python API to the Montage Astronomical Image Mosaic Engine, including both functions to access individual Montage commands, and high-level functions to facilitate mosaicking and re-projecting.", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-astropy", "py36-numpy", "montage"]}], "depends_on": []}, {"name": "py37-montage", "portdir": "python/py-montage", "version": "0.9.9", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.astropy.org/montage-wrapper/", "description": "Montage python wrapper", "long_description": "Python-montage is a pure python module that provides a Python API to the Montage Astronomical Image Mosaic Engine, including both functions to access individual Montage commands, and high-level functions to facilitate mosaicking and re-projecting.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-astropy", "py37-numpy", "montage"]}], "depends_on": []}, {"name": "py-morbid", "portdir": "python/py-morbid", "version": "0.8.7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.morbidq.com/", "description": "A Twisted-based publish/subscribe messaging server that uses the STOMP protocol", "long_description": "Morbid is a STOMP publish/subscribe server with absolutely no potential to cluster. It supports publish/subscribe topics, and runs as a single node.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-morbid"]}], "depends_on": []}, {"name": "py27-morbid", "portdir": "python/py-morbid", "version": "0.8.7.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.morbidq.com/", "description": "A Twisted-based publish/subscribe messaging server that uses the STOMP protocol", "long_description": "Morbid is a STOMP publish/subscribe server with absolutely no potential to cluster. It supports publish/subscribe topics, and runs as a single node.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-stomper", "py27-twisted"]}], "depends_on": [{"type": "lib", "ports": ["py-morbid", "py27-orbited"]}]}, {"name": "py-moviepy", "portdir": "python/py-moviepy", "version": "1.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://zulko.github.io/moviepy/", "description": "Video editing with Python", "long_description": "MoviePy (full documentation) is a Python library for video editing: cutting, concatenations, title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects. See the gallery for some examples of use.MoviePy can read and write all the most common audio and video formats, including GIF, and runs on Windows/Mac/Linux, with Python 2.7+ and 3 (or only Python 3.4+ from v.1.0).", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-moviepy"]}], "depends_on": []}, {"name": "py37-moviepy", "portdir": "python/py-moviepy", "version": "1.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://zulko.github.io/moviepy/", "description": "Video editing with Python", "long_description": "MoviePy (full documentation) is a Python library for video editing: cutting, concatenations, title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects. See the gallery for some examples of use.MoviePy can read and write all the most common audio and video formats, including GIF, and runs on Windows/Mac/Linux, with Python 2.7+ and 3 (or only Python 3.4+ from v.1.0).", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-imageio-ffmpeg", "py37-numpy", "py37-proglog", "py37-requests", "py37-decorator", "py37-imageio"]}, {"type": "test", "ports": ["py37-coverage", "py37-pytest", "py37-pytest-cov", "py37-python-coveralls"]}], "depends_on": [{"type": "run", "ports": ["py37-photomosaic"]}]}, {"name": "py38-moviepy", "portdir": "python/py-moviepy", "version": "1.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://zulko.github.io/moviepy/", "description": "Video editing with Python", "long_description": "MoviePy (full documentation) is a Python library for video editing: cutting, concatenations, title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects. See the gallery for some examples of use.MoviePy can read and write all the most common audio and video formats, including GIF, and runs on Windows/Mac/Linux, with Python 2.7+ and 3 (or only Python 3.4+ from v.1.0).", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-imageio-ffmpeg", "py38-numpy", "py38-proglog", "py38-requests", "py38-decorator", "py38-imageio"]}, {"type": "test", "ports": ["py38-coverage", "py38-pytest", "py38-pytest-cov", "py38-python-coveralls"]}], "depends_on": [{"type": "run", "ports": ["py38-photomosaic"]}]}, {"name": "py39-moviepy", "portdir": "python/py-moviepy", "version": "1.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://zulko.github.io/moviepy/", "description": "Video editing with Python", "long_description": "MoviePy (full documentation) is a Python library for video editing: cutting, concatenations, title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects. See the gallery for some examples of use.MoviePy can read and write all the most common audio and video formats, including GIF, and runs on Windows/Mac/Linux, with Python 2.7+ and 3 (or only Python 3.4+ from v.1.0).", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-imageio-ffmpeg", "py39-numpy", "py39-proglog", "py39-requests", "py39-decorator", "py39-imageio"]}, {"type": "test", "ports": ["py39-coverage", "py39-pytest", "py39-pytest-cov", "py39-python-coveralls"]}], "depends_on": [{"type": "lib", "ports": ["py-moviepy"]}, {"type": "run", "ports": ["py39-photomosaic"]}]}, {"name": "py-mox", "portdir": "python/py-mox", "version": "0.5.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/pymox/", "description": "An object-mocking framework for Python", "long_description": "Mox will make mock objects for you, so you don't have to create your own! It mocks the public/protected interfaces of Python objects. You set up your mock objects expected behavior using a domain specific language (DSL), which makes it easy to use, understand, and refactor!", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-mox"]}], "depends_on": []}, {"name": "py35-mssql", "portdir": "python/py-mssql", "version": "2.1.4", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pymssql.org", "description": "A simple database interface to MS-SQL for Python.", "long_description": "A simple database interface to MS-SQL for Python.", "active": true, "categories": ["databases", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-cython", "py35-setuptools", "py35-setuptools-git"]}, {"type": "lib", "ports": ["freetds", "python35"]}], "depends_on": []}, {"name": "py27-mox", "portdir": "python/py-mox", "version": "0.5.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/pymox/", "description": "An object-mocking framework for Python", "long_description": "Mox will make mock objects for you, so you don't have to create your own! It mocks the public/protected interfaces of Python objects. You set up your mock objects expected behavior using a domain specific language (DSL), which makes it easy to use, understand, and refactor!", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-mox"]}]}, {"name": "py-mpdclient2", "portdir": "python/py-mpdclient2", "version": "0.48", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pygmy.berlios.de/", "description": "Python MPD client library", "long_description": "Python library interfacing with MPD. Taken from Pygmy.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-mpdclient2"]}], "depends_on": []}, {"name": "py27-mpdclient2", "portdir": "python/py-mpdclient2", "version": "0.48", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://pygmy.berlios.de/", "description": "Python MPD client library", "long_description": "Python library interfacing with MPD. Taken from Pygmy.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["lastmp", "py-mpdclient2"]}]}, {"name": "py-mpi4py", "portdir": "python/py-mpi4py", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/mpi4py/mpi4py", "description": "MPI for Python - Python bindings for MPI", "long_description": "MPI for Python (mpi4py) provides bindings of the Message Passing Interface (MPI) standard for the Python programming language, allowing any Python program to exploit multiple processors. This package is constructed on top of the MPI-1/MPI-2 specification and provides an object oriented interface which closely follows MPI-2 C++ bindings. It supports point-to-point (sends, receives) and collective (broadcasts, scatters, gathers) communications of any picklable Python object as well as optimized communications of Python object exposing the single-segment buffer interface (NumPy arrays, builtin bytes/string/array objects).", "active": true, "categories": ["python"], "maintainers": [], "variants": ["clang10", "clang11", "clang50", "clang60", "clang70", "clang80", "clang90", "clangdevel", "g95", "gcc10", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "gfortran", "mpich", "openmpi"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-mpi4py", "mpich-clang90"]}], "depends_on": []}, {"name": "py27-mpi4py", "portdir": "python/py-mpi4py", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/mpi4py/mpi4py", "description": "MPI for Python - Python bindings for MPI", "long_description": "MPI for Python (mpi4py) provides bindings of the Message Passing Interface (MPI) standard for the Python programming language, allowing any Python program to exploit multiple processors. This package is constructed on top of the MPI-1/MPI-2 specification and provides an object oriented interface which closely follows MPI-2 C++ bindings. It supports point-to-point (sends, receives) and collective (broadcasts, scatters, gathers) communications of any picklable Python object as well as optimized communications of Python object exposing the single-segment buffer interface (NumPy arrays, builtin bytes/string/array objects).", "active": true, "categories": ["python"], "maintainers": [], "variants": ["clang10", "clang11", "clang50", "clang60", "clang70", "clang80", "clang90", "clangdevel", "g95", "gcc10", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "gfortran", "mpich", "openmpi", "interpreter"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-cython", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "mpich-clang90"]}], "depends_on": [{"type": "lib", "ports": ["py27-petsc4py"]}, {"type": "test", "ports": ["hpddm"]}]}, {"name": "py36-mpi4py", "portdir": "python/py-mpi4py", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/mpi4py/mpi4py", "description": "MPI for Python - Python bindings for MPI", "long_description": "MPI for Python (mpi4py) provides bindings of the Message Passing Interface (MPI) standard for the Python programming language, allowing any Python program to exploit multiple processors. This package is constructed on top of the MPI-1/MPI-2 specification and provides an object oriented interface which closely follows MPI-2 C++ bindings. It supports point-to-point (sends, receives) and collective (broadcasts, scatters, gathers) communications of any picklable Python object as well as optimized communications of Python object exposing the single-segment buffer interface (NumPy arrays, builtin bytes/string/array objects).", "active": true, "categories": ["python"], "maintainers": [], "variants": ["clang10", "clang11", "clang50", "clang60", "clang70", "clang80", "clang90", "clangdevel", "g95", "gcc10", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "gfortran", "mpich", "openmpi", "interpreter"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-cython", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "mpich-clang90"]}], "depends_on": [{"type": "lib", "ports": ["py36-petsc4py"]}]}, {"name": "py37-python-lsp-black", "portdir": "python/py-python-lsp-black", "version": "1.0.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/python-lsp/python-lsp-black", "description": "Black plugin for python-lsp-server", "long_description": "Black plugin for python-lsp-server. Forked from pyls-black (https://github.com/rupert/pyls-black).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-black", "py37-setuptools", "py37-python-lsp-server"]}], "depends_on": [{"type": "run", "ports": ["py37-spyder-devel", "py37-spyder"]}]}, {"name": "py37-mpi4py", "portdir": "python/py-mpi4py", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/mpi4py/mpi4py", "description": "MPI for Python - Python bindings for MPI", "long_description": "MPI for Python (mpi4py) provides bindings of the Message Passing Interface (MPI) standard for the Python programming language, allowing any Python program to exploit multiple processors. This package is constructed on top of the MPI-1/MPI-2 specification and provides an object oriented interface which closely follows MPI-2 C++ bindings. It supports point-to-point (sends, receives) and collective (broadcasts, scatters, gathers) communications of any picklable Python object as well as optimized communications of Python object exposing the single-segment buffer interface (NumPy arrays, builtin bytes/string/array objects).", "active": true, "categories": ["python"], "maintainers": [], "variants": ["clang10", "clang11", "clang50", "clang60", "clang70", "clang80", "clang90", "clangdevel", "g95", "gcc10", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "gfortran", "mpich", "openmpi", "interpreter"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-cython", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "mpich-clang90"]}], "depends_on": [{"type": "lib", "ports": ["py37-petsc4py"]}]}, {"name": "py38-mpi4py", "portdir": "python/py-mpi4py", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/mpi4py/mpi4py", "description": "MPI for Python - Python bindings for MPI", "long_description": "MPI for Python (mpi4py) provides bindings of the Message Passing Interface (MPI) standard for the Python programming language, allowing any Python program to exploit multiple processors. This package is constructed on top of the MPI-1/MPI-2 specification and provides an object oriented interface which closely follows MPI-2 C++ bindings. It supports point-to-point (sends, receives) and collective (broadcasts, scatters, gathers) communications of any picklable Python object as well as optimized communications of Python object exposing the single-segment buffer interface (NumPy arrays, builtin bytes/string/array objects).", "active": true, "categories": ["python"], "maintainers": [], "variants": ["clang10", "clang11", "clang50", "clang60", "clang70", "clang80", "clang90", "clangdevel", "g95", "gcc10", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "gfortran", "mpich", "openmpi", "interpreter"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-cython", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "mpich-clang90"]}], "depends_on": [{"type": "lib", "ports": ["py38-petsc4py"]}]}, {"name": "py39-mpi4py", "portdir": "python/py-mpi4py", "version": "3.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/mpi4py/mpi4py", "description": "MPI for Python - Python bindings for MPI", "long_description": "MPI for Python (mpi4py) provides bindings of the Message Passing Interface (MPI) standard for the Python programming language, allowing any Python program to exploit multiple processors. This package is constructed on top of the MPI-1/MPI-2 specification and provides an object oriented interface which closely follows MPI-2 C++ bindings. It supports point-to-point (sends, receives) and collective (broadcasts, scatters, gathers) communications of any picklable Python object as well as optimized communications of Python object exposing the single-segment buffer interface (NumPy arrays, builtin bytes/string/array objects).", "active": true, "categories": ["python"], "maintainers": [], "variants": ["clang10", "clang11", "clang50", "clang60", "clang70", "clang80", "clang90", "clangdevel", "g95", "gcc10", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "gfortran", "mpich", "openmpi", "interpreter"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-cython", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "mpich-clang90"]}], "depends_on": [{"type": "lib", "ports": ["py-mpi4py", "py39-petsc4py"]}]}]}