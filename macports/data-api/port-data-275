{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=276", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=274", "results": [{"name": "py38-gacode", "portdir": "python/py-gacode", "version": "0.57", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://gacode.io", "description": "python bindings for the GACODE suite", "long_description": "python bindings for the GACODE suite", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": ["clang10", "clang11", "clang50", "clang60", "clang70", "clang80", "clang90", "clangdevel", "g95", "gcc10", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "gfortran", "universal"], "dependencies": [{"type": "build", "ports": ["gcc10", "clang-9.0"]}, {"type": "lib", "ports": ["libgcc10", "libgcc", "python38", "py38-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-gacode"]}]}, {"name": "py-gammapy", "portdir": "python/py-gammapy", "version": "0.18.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://gammapy.org/", "description": "A Python package for gamma-ray astronomy", "long_description": "A Python package for gamma-ray astronomy", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-gammapy"]}], "depends_on": []}, {"name": "py27-gammapy", "portdir": "python/py-gammapy", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://gammapy.org/", "description": "A Python package for gamma-ray astronomy", "long_description": "A Python package for gamma-ray astronomy", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "run", "ports": ["py27-matplotlib", "py27-numpy", "py27-regions", "py27-scipy", "py27-yaml", "py27-click", "py27-astropy"]}], "depends_on": []}, {"name": "py37-future", "portdir": "python/py-future", "version": "0.18.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-future.org/", "description": "Provides clean single-source support for Python 3 and 2", "long_description": "The Python package future is the missing compatibility layer between Python 3 and Python 2. It allows you to use a single, clean Python 3.x-compatible codebase to support both Python 3 and Python 2 with minimal overhead. The futurize script aids in converting code from either Python 2 or Python 3 to code compatible with both platforms.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "build", "ports": ["py37-tensorflow1", "py37-tensorflow"]}, {"type": "lib", "ports": ["py37-pytorch", "py37-fipy", "py37-geocoder", "py37-instrumentkit", "py37-obspy", "py37-rasa-nlu", "py37-stomper", "py37-uncertainties", "py37-onnx", "py37-barnaba", "py37-canmatrix"]}, {"type": "run", "ports": ["py37-tensorflow-datasets", "py37-tensor2tensor", "py37-pytorch-lightning", "py37-olm", "py37-hcloud", "py37-mesh-tensorflow"]}, {"type": "test", "ports": ["py37-apache-beam"]}]}, {"name": "py35-gammapy", "portdir": "python/py-gammapy", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://gammapy.org/", "description": "A Python package for gamma-ray astronomy", "long_description": "A Python package for gamma-ray astronomy", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-matplotlib", "py35-numpy", "py35-regions", "py35-scipy", "py35-yaml", "py35-click", "py35-astropy"]}], "depends_on": []}, {"name": "py38-future", "portdir": "python/py-future", "version": "0.18.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-future.org/", "description": "Provides clean single-source support for Python 3 and 2", "long_description": "The Python package future is the missing compatibility layer between Python 3 and Python 2. It allows you to use a single, clean Python 3.x-compatible codebase to support both Python 3 and Python 2 with minimal overhead. The futurize script aids in converting code from either Python 2 or Python 3 to code compatible with both platforms.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-setuptools"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "build", "ports": ["py38-tensorflow1", "py38-tensorflow"]}, {"type": "lib", "ports": ["py38-pytorch", "py38-asciimatics", "py38-geocoder", "py38-instrumentkit", "py38-obspy", "py38-uncertainties", "pybombs", "pybombs-devel", "py38-onnx"]}, {"type": "run", "ports": ["py38-olm", "py38-mesh-tensorflow", "py38-pytorch-lightning", "py38-tensorflow-datasets", "py38-hcloud", "py38-tensor2tensor"]}, {"type": "test", "ports": ["py38-apache-beam"]}]}, {"name": "py39-future", "portdir": "python/py-future", "version": "0.18.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://python-future.org/", "description": "Provides clean single-source support for Python 3 and 2", "long_description": "The Python package future is the missing compatibility layer between Python 3 and Python 2. It allows you to use a single, clean Python 3.x-compatible codebase to support both Python 3 and Python 2 with minimal overhead. The futurize script aids in converting code from either Python 2 or Python 3 to code compatible with both platforms.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-setuptools"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "build", "ports": ["py39-tensorflow", "py39-tensorflow1"]}, {"type": "lib", "ports": ["py39-pytorch", "py39-molmod", "certbot-dns-linode", "certbot-dns-luadns", "certbot-dns-nsone", "certbot-dns-ovh", "certbot-dns-rfc2136", "certbot-dns-route53", "certbot-dns-sakuracloud", "py-future", "py39-uncertainties", "py39-onnx", "funky", "glances", "proselint", "py39-geocoder", "py39-obspy", "certbot", "certbot-apache", "certbot-nginx", "certbot-dns-cloudflare", "certbot-dns-cloudxns", "certbot-dns-digitalocean", "certbot-dns-dnsimple", "certbot-dns-dnsmadeeasy", "certbot-dns-gehirn", "certbot-dns-google"]}, {"type": "run", "ports": ["py39-olm", "py39-mesh-tensorflow", "py39-pytorch-lightning", "py39-tensorflow-datasets", "duplicity", "py39-tensor2tensor", "py39-hcloud", "buildbot-worker"]}, {"type": "test", "ports": ["py39-apache-beam"]}]}, {"name": "py38-wcmatch", "portdir": "python/py-wcmatch", "version": "8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/facelessuser/wcmatch", "description": "Wilcard File Name matching library.", "long_description": "Wildcard Match provides an enhanced fnmatch, glob, and pathlib library in order to provide file matching and globbing that more closely follows the features found in Bash.", "active": true, "categories": ["python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-bracex"]}], "depends_on": []}, {"name": "py39-wcmatch", "portdir": "python/py-wcmatch", "version": "8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/facelessuser/wcmatch", "description": "Wilcard File Name matching library.", "long_description": "Wildcard Match provides an enhanced fnmatch, glob, and pathlib library in order to provide file matching and globbing that more closely follows the features found in Bash.", "active": true, "categories": ["python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-bracex"]}], "depends_on": [{"type": "lib", "ports": ["py-wcmatch", "ansible-lint"]}]}, {"name": "py310-wcmatch", "portdir": "python/py-wcmatch", "version": "8.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/facelessuser/wcmatch", "description": "Wilcard File Name matching library.", "long_description": "Wildcard Match provides an enhanced fnmatch, glob, and pathlib library in order to provide file matching and globbing that more closely follows the features found in Bash.", "active": true, "categories": ["python"], "maintainers": [{"name": "judaew", "github": "judaew", "ports_count": 257}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools"]}, {"type": "lib", "ports": ["python310"]}, {"type": "run", "ports": ["py310-bracex"]}], "depends_on": []}, {"name": "ioping", "portdir": "sysutils/ioping", "version": "1.2", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/koct9i/ioping", "description": "Simple disk I/0 latency measuring tool", "long_description": "A tool to monitor I/O latency in real time. It shows disk latency in the same way as ping shows network latency.", "active": true, "categories": ["sysutils"], "maintainers": [{"name": "harensdeveloper", "github": "harens", "ports_count": 95}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}], "depends_on": []}, {"name": "py36-gammapy", "portdir": "python/py-gammapy", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://gammapy.org/", "description": "A Python package for gamma-ray astronomy", "long_description": "A Python package for gamma-ray astronomy", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-matplotlib", "py36-numpy", "py36-regions", "py36-scipy", "py36-yaml", "py36-click", "py36-astropy"]}], "depends_on": []}, {"name": "py-gchartwrapper", "portdir": "python/py-gchartwrapper", "version": "0.9", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/google-chartwrapper/", "description": "Easily create Google charts using Python syntax and data objects.", "long_description": "Python wrapper for the Google Chart API. The wrapper can render the URL of the Google chart, based on your parameters, or it can render an HTML img tag to insert into webpages on the fly. Made for dynamic python websites (Django, Zope, CGI, etc.) that need on the fly chart generation without any extra modules.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-gchartwrapper"]}], "depends_on": []}, {"name": "py27-gchartwrapper", "portdir": "python/py-gchartwrapper", "version": "0.9", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/google-chartwrapper/", "description": "Easily create Google charts using Python syntax and data objects.", "long_description": "Python wrapper for the Google Chart API. The wrapper can render the URL of the Google chart, based on your parameters, or it can render an HTML img tag to insert into webpages on the fly. Made for dynamic python websites (Django, Zope, CGI, etc.) that need on the fly chart generation without any extra modules.", "active": true, "categories": ["www", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-gchartwrapper"]}]}, {"name": "py-gcn", "portdir": "python/py-gcn", "version": "0.1.19", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/lpsinger/pygcn", "description": "anonymous VOEvent client for receiving GCN/TAN notices in XML format", "long_description": "Anonymous VOEvent client for receiving GCN/TAN notices in XML format. The Gamma-ray Coordinates Network/Transient Astronomy Network (GCN/TAN, http://gcn.gsfc.nasa.gov) is a system for distributing astronomical alerts, largely focused on operations of and detections from high-energy satellite missions. This package implements a simple client that anonymously listens for VOEvent (http://www.ivoa.net/documents/VOEvent) XML format notices over the custom TCP/IP VOEvent Transport Protocol (http://www.ivoa.net/documents/Notes/VOEventTransport).", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-gcn"]}], "depends_on": []}, {"name": "py27-gcn", "portdir": "python/py-gcn", "version": "0.1.19", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/lpsinger/pygcn", "description": "anonymous VOEvent client for receiving GCN/TAN notices in XML format", "long_description": "Anonymous VOEvent client for receiving GCN/TAN notices in XML format. The Gamma-ray Coordinates Network/Transient Astronomy Network (GCN/TAN, http://gcn.gsfc.nasa.gov) is a system for distributing astronomical alerts, largely focused on operations of and detections from high-energy satellite missions. This package implements a simple client that anonymously listens for VOEvent (http://www.ivoa.net/documents/VOEvent) XML format notices over the custom TCP/IP VOEvent Transport Protocol (http://www.ivoa.net/documents/Notes/VOEventTransport).", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-six"]}], "depends_on": []}, {"name": "py35-gcn", "portdir": "python/py-gcn", "version": "0.1.19", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/lpsinger/pygcn", "description": "anonymous VOEvent client for receiving GCN/TAN notices in XML format", "long_description": "Anonymous VOEvent client for receiving GCN/TAN notices in XML format. The Gamma-ray Coordinates Network/Transient Astronomy Network (GCN/TAN, http://gcn.gsfc.nasa.gov) is a system for distributing astronomical alerts, largely focused on operations of and detections from high-energy satellite missions. This package implements a simple client that anonymously listens for VOEvent (http://www.ivoa.net/documents/VOEvent) XML format notices over the custom TCP/IP VOEvent Transport Protocol (http://www.ivoa.net/documents/Notes/VOEventTransport).", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-six"]}], "depends_on": []}, {"name": "py36-gcn", "portdir": "python/py-gcn", "version": "0.1.19", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/lpsinger/pygcn", "description": "anonymous VOEvent client for receiving GCN/TAN notices in XML format", "long_description": "Anonymous VOEvent client for receiving GCN/TAN notices in XML format. The Gamma-ray Coordinates Network/Transient Astronomy Network (GCN/TAN, http://gcn.gsfc.nasa.gov) is a system for distributing astronomical alerts, largely focused on operations of and detections from high-energy satellite missions. This package implements a simple client that anonymously listens for VOEvent (http://www.ivoa.net/documents/VOEvent) XML format notices over the custom TCP/IP VOEvent Transport Protocol (http://www.ivoa.net/documents/Notes/VOEventTransport).", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-six"]}], "depends_on": []}, {"name": "py-gdal", "portdir": "python/py-gdal", "version": "3.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.gdal.org", "description": "GDAL: Geospatial Data Abstraction Library", "long_description": "This Python package and extensions are a number of tools for programming and manipulating the GDAL Geospatial Data Abstraction Library.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-gdal"]}], "depends_on": []}, {"name": "py37-gcn", "portdir": "python/py-gcn", "version": "0.1.19", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/lpsinger/pygcn", "description": "anonymous VOEvent client for receiving GCN/TAN notices in XML format", "long_description": "Anonymous VOEvent client for receiving GCN/TAN notices in XML format. The Gamma-ray Coordinates Network/Transient Astronomy Network (GCN/TAN, http://gcn.gsfc.nasa.gov) is a system for distributing astronomical alerts, largely focused on operations of and detections from high-energy satellite missions. This package implements a simple client that anonymously listens for VOEvent (http://www.ivoa.net/documents/VOEvent) XML format notices over the custom TCP/IP VOEvent Transport Protocol (http://www.ivoa.net/documents/Notes/VOEventTransport).", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-six"]}], "depends_on": [{"type": "lib", "ports": ["py-gcn"]}]}, {"name": "py27-gdal", "portdir": "python/py-gdal", "version": "3.2.3", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://www.gdal.org", "description": "GDAL: Geospatial Data Abstraction Library", "long_description": "This Python package and extensions are a number of tools for programming and manipulating the GDAL Geospatial Data Abstraction Library.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["gdal", "python27", "py27-numpy"]}], "depends_on": [{"type": "lib", "ports": ["qgis", "py27-cartopy", "py27-obspy"]}]}, {"name": "py-gd", "portdir": "python/py-gd", "version": "0.59", "license": "Permissive", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Solomoriah/gdmodule", "description": "py-gd is a python wrapper for the GD library", "long_description": "py-gd is a python wrapper for the graphics library GD so you can use python to create/manipulate images (png, jpeg) by drawing lines, text, doing flood-fills, etc.", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-gd"]}], "depends_on": []}, {"name": "py27-gd", "portdir": "python/py-gd", "version": "0.59", "license": "Permissive", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Solomoriah/gdmodule", "description": "py-gd is a python wrapper for the GD library", "long_description": "py-gd is a python wrapper for the graphics library GD so you can use python to create/manipulate images (png, jpeg) by drawing lines, text, doing flood-fills, etc.", "active": true, "categories": ["graphics", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["gd2", "giflib", "python27"]}], "depends_on": [{"type": "lib", "ports": ["py-gd"]}, {"type": "run", "ports": ["py27-sisynala"]}]}, {"name": "py35-gdal", "portdir": "python/py-gdal", "version": "3.2.3", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://www.gdal.org", "description": "GDAL: Geospatial Data Abstraction Library", "long_description": "This Python package and extensions are a number of tools for programming and manipulating the GDAL Geospatial Data Abstraction Library.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["gdal", "python35", "py35-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py35-cartopy", "py35-obspy"]}]}, {"name": "py36-gdal", "portdir": "python/py-gdal", "version": "3.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.gdal.org", "description": "GDAL: Geospatial Data Abstraction Library", "long_description": "This Python package and extensions are a number of tools for programming and manipulating the GDAL Geospatial Data Abstraction Library.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["gdal", "python36", "py36-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py36-cartopy", "py36-isce2", "py36-obspy"]}, {"type": "run", "ports": ["py36-isce2"]}]}, {"name": "py37-gdal", "portdir": "python/py-gdal", "version": "3.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.gdal.org", "description": "GDAL: Geospatial Data Abstraction Library", "long_description": "This Python package and extensions are a number of tools for programming and manipulating the GDAL Geospatial Data Abstraction Library.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["gdal", "python37", "py37-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py37-cartopy", "py37-isce2", "py37-obspy"]}, {"type": "run", "ports": ["py37-isce2"]}]}, {"name": "py39-gdal", "portdir": "python/py-gdal", "version": "3.3.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://www.gdal.org", "description": "GDAL: Geospatial Data Abstraction Library", "long_description": "This Python package and extensions are a number of tools for programming and manipulating the GDAL Geospatial Data Abstraction Library.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["gdal", "python39", "py39-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-gdal", "qgis3", "py39-cartopy", "py39-obspy"]}]}, {"name": "py-gdata", "portdir": "python/py-gdata", "version": "2.0.18", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/gdata-python-client/", "description": "Google Data API Python Client Library", "long_description": "The Google Data Python Client Library provides a library that makes it easy to access data through the Google Data APIs. Many Google services (such as Google Calendar and Documents) support the Google Data API protocol.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-gdata"]}], "depends_on": []}, {"name": "py27-gdata", "portdir": "python/py-gdata", "version": "2.0.18", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://code.google.com/p/gdata-python-client/", "description": "Google Data API Python Client Library", "long_description": "The Google Data Python Client Library provides a library that makes it easy to access data through the Google Data APIs. Many Google services (such as Google Calendar and Documents) support the Google Data API protocol.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["coherence", "youtube-upload", "py-gdata", "py27-nose-skipreq", "googlecl"]}]}, {"name": "py-generator", "portdir": "python/py-generator", "version": "0.1.20120721", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/knepley/code-generator", "description": "Cxx generator for python", "long_description": "Cxx generator for python", "active": true, "categories": ["devel", "science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-generator"]}], "depends_on": []}, {"name": "py27-generator", "portdir": "python/py-generator", "version": "0.1.20120721", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/knepley/code-generator", "description": "Cxx generator for python", "long_description": "Cxx generator for python", "active": true, "categories": ["devel", "science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py35-generator", "portdir": "python/py-generator", "version": "0.1.20120721", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/knepley/code-generator", "description": "Cxx generator for python", "long_description": "Cxx generator for python", "active": true, "categories": ["devel", "science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py-genshi", "portdir": "python/py-genshi", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://genshi.edgewall.org/", "description": "Python toolkit for generation of output for the web", "long_description": "Genshi is a Python library that provides an integrated set of components for parsing, generating, and processing HTML, XML or other textual content for output generation on the web.", "active": true, "categories": ["textproc", "www", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-genshi"]}], "depends_on": []}, {"name": "py36-genshi", "portdir": "python/py-genshi", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://genshi.edgewall.org/", "description": "Python toolkit for generation of output for the web", "long_description": "Genshi is a Python library that provides an integrated set of components for parsing, generating, and processing HTML, XML or other textual content for output generation on the web.", "active": true, "categories": ["textproc", "www", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py-genshi"]}]}, {"name": "py37-aiohttp", "portdir": "python/py-aiohttp", "version": "3.8.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiohttp", "description": "Async http client/server framework", "long_description": "aiohttp key futures are the support for both client and server side of HTTP protocol, support for both client and server Web-Sockets out-of-the-box without the Callback Hell and Web-server's middlewares and pluggable routing.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "miguel", "github": "ipglider", "ports_count": 59}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-async-timeout", "py37-asynctest", "py37-attrs", "py37-brotli", "py37-cchardet", "python37", "py37-typing_extensions", "py37-yarl", "py37-charset-normalizer", "py37-aiosignal", "py37-frozenlist", "py37-multidict", "py37-aiodns"]}], "depends_on": [{"type": "lib", "ports": ["py37-slackclient", "py37-discordpy", "py37-aiojobs", "py37-aiobotocore", "py37-parfive"]}, {"type": "run", "ports": ["py37-engineio", "py37-socketio"]}]}, {"name": "py38-aiohttp", "portdir": "python/py-aiohttp", "version": "3.8.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiohttp", "description": "Async http client/server framework", "long_description": "aiohttp key futures are the support for both client and server side of HTTP protocol, support for both client and server Web-Sockets out-of-the-box without the Callback Hell and Web-server's middlewares and pluggable routing.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "miguel", "github": "ipglider", "ports_count": 59}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["py38-async-timeout", "py38-attrs", "py38-brotli", "py38-cchardet", "python38", "py38-yarl", "py38-charset-normalizer", "py38-aiosignal", "py38-frozenlist", "py38-multidict", "py38-aiodns"]}], "depends_on": [{"type": "lib", "ports": ["py38-slackclient", "py38-discordpy", "py38-aiojobs", "py38-aiobotocore", "py38-parfive"]}, {"type": "run", "ports": ["py38-engineio", "py38-socketio"]}]}, {"name": "py39-aiohttp", "portdir": "python/py-aiohttp", "version": "3.8.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/aiohttp", "description": "Async http client/server framework", "long_description": "aiohttp key futures are the support for both client and server side of HTTP protocol, support for both client and server Web-Sockets out-of-the-box without the Callback Hell and Web-server's middlewares and pluggable routing.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "miguel", "github": "ipglider", "ports_count": 59}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["py39-async-timeout", "py39-attrs", "py39-brotli", "py39-cchardet", "python39", "py39-yarl", "py39-charset-normalizer", "py39-aiosignal", "py39-frozenlist", "py39-multidict", "py39-aiodns"]}], "depends_on": [{"type": "lib", "ports": ["py39-parfive", "py39-aiojobs", "py-aiohttp", "py39-aiobotocore", "py39-slackclient", "py39-discordpy"]}, {"type": "run", "ports": ["py39-engineio", "py39-socketio"]}]}, {"name": "py-gensim", "portdir": "python/py-gensim", "version": "4.1.2", "license": "LGPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://radimrehurek.com/gensim/", "description": "Python framework for fast Vector Space Modelling", "long_description": "Gensim is a Python library for topic modelling, document indexing and similarity retrieval with large corpora. Target audience is the natural language processing (NLP) and information retrieval (IR) community.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-gensim"]}], "depends_on": []}, {"name": "nxcomp", "portdir": "net/nxcomp", "version": "3.5.99.22", "license": "GPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://wiki.x2go.org/doku.php/wiki:libs:nx-libs", "description": "nxcomp is the X compression library by NX", "long_description": "nxcomp is a library compressing X commands to be passed over network for use with the X2Go suite.", "active": true, "categories": ["net"], "maintainers": [{"name": "ionic", "github": "Ionic", "ports_count": 24}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "autoconf", "automake", "libtool", "pkgconfig"]}, {"type": "lib", "ports": ["libjpeg-turbo", "libpng", "xorg-xorgproto", "zlib"]}], "depends_on": [{"type": "lib", "ports": ["nxproxy"]}]}, {"name": "py-geoalchemy", "portdir": "python/py-geoalchemy", "version": "0.7.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.geoalchemy.org/", "description": "Python SQL ORM Geospatial", "long_description": "GeoAlchemy is an extension of SQLAlchemy. It provides support for Geospatial data types at the ORM layer using SQLAlchemy. It aims to support spatial operations and relations specified by the Open Geospatial Consortium (OGC). The project started under Google Summer of Code Program under the mentorship of Mark Ramm-Christensen.", "active": true, "categories": ["databases", "python"], "maintainers": [{"name": "jls", "github": "", "ports_count": 2}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-geoalchemy"]}], "depends_on": []}, {"name": "py27-geoalchemy", "portdir": "python/py-geoalchemy", "version": "0.7.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.geoalchemy.org/", "description": "Python SQL ORM Geospatial", "long_description": "GeoAlchemy is an extension of SQLAlchemy. It provides support for Geospatial data types at the ORM layer using SQLAlchemy. It aims to support spatial operations and relations specified by the Open Geospatial Consortium (OGC). The project started under Google Summer of Code Program under the mentorship of Mark Ramm-Christensen.", "active": true, "categories": ["databases", "python"], "maintainers": [{"name": "jls", "github": "", "ports_count": 2}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-psycopg2", "py27-sqlalchemy"]}], "depends_on": [{"type": "lib", "ports": ["py-geoalchemy"]}]}, {"name": "py-geocoder", "portdir": "python/py-geocoder", "version": "1.38.1", "license": "MIT", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/DenisCarriere/geocoder", "description": "Simple and consistent geocoding library.", "long_description": "Simple and consistent geocoding library.", "active": true, "categories": ["python"], "maintainers": [{"name": "ra1nb0w", "github": "ra1nb0w", "ports_count": 126}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-geocoder"]}], "depends_on": []}, {"name": "py27-geocoder", "portdir": "python/py-geocoder", "version": "1.38.1", "license": "MIT", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/DenisCarriere/geocoder", "description": "Simple and consistent geocoding library.", "long_description": "Simple and consistent geocoding library.", "active": true, "categories": ["python"], "maintainers": [{"name": "ra1nb0w", "github": "ra1nb0w", "ports_count": 126}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-future", "py27-ratelim", "python27", "py27-six", "py27-requests", "py27-click"]}], "depends_on": []}, {"name": "py36-geocoder", "portdir": "python/py-geocoder", "version": "1.38.1", "license": "MIT", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/DenisCarriere/geocoder", "description": "Simple and consistent geocoding library.", "long_description": "Simple and consistent geocoding library.", "active": true, "categories": ["python"], "maintainers": [{"name": "ra1nb0w", "github": "ra1nb0w", "ports_count": 126}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["py36-future", "py36-ratelim", "python36", "py36-six", "py36-requests", "py36-click"]}], "depends_on": []}, {"name": "py37-geocoder", "portdir": "python/py-geocoder", "version": "1.38.1", "license": "MIT", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/DenisCarriere/geocoder", "description": "Simple and consistent geocoding library.", "long_description": "Simple and consistent geocoding library.", "active": true, "categories": ["python"], "maintainers": [{"name": "ra1nb0w", "github": "ra1nb0w", "ports_count": 126}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-future", "py37-ratelim", "python37", "py37-six", "py37-requests", "py37-click"]}], "depends_on": []}, {"name": "py38-geocoder", "portdir": "python/py-geocoder", "version": "1.38.1", "license": "MIT", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/DenisCarriere/geocoder", "description": "Simple and consistent geocoding library.", "long_description": "Simple and consistent geocoding library.", "active": true, "categories": ["python"], "maintainers": [{"name": "ra1nb0w", "github": "ra1nb0w", "ports_count": 126}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["py38-future", "py38-ratelim", "python38", "py38-six", "py38-requests", "py38-click"]}], "depends_on": []}, {"name": "py39-geocoder", "portdir": "python/py-geocoder", "version": "1.38.1", "license": "MIT", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/DenisCarriere/geocoder", "description": "Simple and consistent geocoding library.", "long_description": "Simple and consistent geocoding library.", "active": true, "categories": ["python"], "maintainers": [{"name": "ra1nb0w", "github": "ra1nb0w", "ports_count": 126}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["py39-future", "py39-ratelim", "python39", "py39-six", "py39-requests", "py39-click"]}], "depends_on": [{"type": "lib", "ports": ["py-geocoder"]}]}, {"name": "py-geographiclib", "portdir": "python/py-geographiclib", "version": "1.50", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://sourceforge.net/projects/geographiclib/", "description": "The geodesic routines from GeographicLib", "long_description": "The module implements algorithms for geodesics (Karney, 2013) for solving the direct and inverse problems for an ellipsoid of revolution.", "active": true, "categories": ["devel", "python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-geographiclib"]}], "depends_on": []}, {"name": "py27-geographiclib", "portdir": "python/py-geographiclib", "version": "1.50", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://sourceforge.net/projects/geographiclib/", "description": "The geodesic routines from GeographicLib", "long_description": "The module implements algorithms for geodesics (Karney, 2013) for solving the direct and inverse problems for an ellipsoid of revolution.", "active": true, "categories": ["devel", "python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-geopy", "py27-obspy"]}]}, {"name": "py35-geographiclib", "portdir": "python/py-geographiclib", "version": "1.50", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://sourceforge.net/projects/geographiclib/", "description": "The geodesic routines from GeographicLib", "long_description": "The module implements algorithms for geodesics (Karney, 2013) for solving the direct and inverse problems for an ellipsoid of revolution.", "active": true, "categories": ["devel", "python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": [{"type": "lib", "ports": ["py35-geopy", "py35-obspy"]}]}]}