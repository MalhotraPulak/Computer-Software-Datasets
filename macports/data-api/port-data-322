{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=323", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=321", "results": [{"name": "py27-pyrfc3339", "portdir": "python/py-pyrfc3339", "version": "1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRFC3339/", "description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "long_description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-tz"]}, {"type": "test", "ports": ["py27-nose"]}], "depends_on": []}, {"name": "py35-pyrfc3339", "portdir": "python/py-pyrfc3339", "version": "1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRFC3339/", "description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "long_description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-tz"]}, {"type": "test", "ports": ["py35-nose"]}], "depends_on": []}, {"name": "py36-pyrfc3339", "portdir": "python/py-pyrfc3339", "version": "1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRFC3339/", "description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "long_description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-tz"]}, {"type": "test", "ports": ["py36-nose"]}], "depends_on": [{"type": "lib", "ports": ["py36-acme"]}]}, {"name": "py36-pyregion", "portdir": "python/py-pyregion", "version": "2.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/pyregion", "description": "pyregion is a Python module to parse ds9 region files", "long_description": "pyregion is a Python module to parse ds9 region files", "active": false, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-numpy"]}, {"type": "lib", "ports": ["python36"]}, {"type": "run", "ports": ["py36-astropy", "py36-matplotlib", "py36-parsing"]}], "depends_on": [{"type": "run", "ports": ["py36-aplpy"]}]}, {"name": "py-pyquery", "portdir": "python/py-pyquery", "version": "1.4.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gawel/pyquery", "description": "A jQuery-like library for Python", "long_description": "Pyquery allows you to make jQuery queries on XML documents.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pyquery"]}], "depends_on": []}, {"name": "py-pyregion", "portdir": "python/py-pyregion", "version": "2.1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/pyregion", "description": "pyregion is a Python module to parse ds9 region files", "long_description": "pyregion is a Python module to parse ds9 region files", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pyregion"]}], "depends_on": []}, {"name": "py-cookiecutter", "portdir": "python/py-cookiecutter", "version": "1.7.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cookiecutter/cookiecutter", "description": "A command-line utility that creates projects from project templates.", "long_description": "A command-line utility that creates projects from project templates., e.g. creating a Python package project from a Python package project template.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-cookiecutter"]}], "depends_on": []}, {"name": "py37-pyregion", "portdir": "python/py-pyregion", "version": "2.1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/pyregion", "description": "pyregion is a Python module to parse ds9 region files", "long_description": "pyregion is a Python module to parse ds9 region files", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-numpy"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-astropy", "py37-matplotlib", "py37-parsing"]}], "depends_on": [{"type": "run", "ports": ["py37-aplpy"]}]}, {"name": "py36-cookiecutter", "portdir": "python/py-cookiecutter", "version": "1.7.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/cookiecutter/cookiecutter", "description": "A command-line utility that creates projects from project templates.", "long_description": "A command-line utility that creates projects from project templates., e.g. creating a Python package project from a Python package project template.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-binaryornot", "py36-click", "py36-jinja2", "py36-jinja2-time", "py36-markupsafe", "python36", "py36-requests", "py36-setuptools", "py36-six", "py36-slugify", "py36-poyo"]}], "depends_on": [{"type": "run", "ports": ["py36-spyder-devel", "py36-spyder"]}]}, {"name": "py35-pyquery", "portdir": "python/py-pyquery", "version": "1.4.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gawel/pyquery", "description": "A jQuery-like library for Python", "long_description": "Pyquery allows you to make jQuery queries on XML documents.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "run", "ports": ["py35-cssselect", "py35-lxml"]}], "depends_on": [{"type": "test", "ports": ["py35-webtest"]}]}, {"name": "py37-pyrfc3339", "portdir": "python/py-pyrfc3339", "version": "1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRFC3339/", "description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "long_description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-tz"]}, {"type": "test", "ports": ["py37-nose"]}], "depends_on": [{"type": "lib", "ports": ["py37-acme"]}]}, {"name": "py38-pyrfc3339", "portdir": "python/py-pyrfc3339", "version": "1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRFC3339/", "description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "long_description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-tz"]}, {"type": "test", "ports": ["py38-nose"]}], "depends_on": [{"type": "lib", "ports": ["py38-acme"]}]}, {"name": "py39-pyrfc3339", "portdir": "python/py-pyrfc3339", "version": "1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRFC3339/", "description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "long_description": "pyRFC3339 parses and generates RFC 3339-compliant timestamps using Python datetime.datetime objects.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-tz"]}, {"type": "test", "ports": ["py39-nose"]}], "depends_on": [{"type": "lib", "ports": ["py-pyrfc3339", "py39-acme", "certbot", "certbot-apache", "certbot-nginx", "certbot-dns-cloudflare", "certbot-dns-cloudxns", "certbot-dns-digitalocean", "certbot-dns-dnsimple", "certbot-dns-dnsmadeeasy", "certbot-dns-gehirn", "certbot-dns-google", "certbot-dns-linode", "certbot-dns-luadns", "certbot-dns-nsone", "certbot-dns-ovh", "certbot-dns-rfc2136", "certbot-dns-route53", "certbot-dns-sakuracloud"]}]}, {"name": "py-pyro", "portdir": "python/py-pyro", "version": "4.77", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/irmen/Pyro4", "description": "Distributed object middleware for Python (RPC)", "long_description": "Pyro means PYthon Remote Objects. It is a library that enables you to build applications in which objects can talk to each other over the network, with minimal programming effort. You can just use normal Python method calls, with almost every possible parameter and return value type, and Pyro takes care of locating the right object on the right computer to execute the method. It is designed to be very easy to use, and to generally stay out of your way. But it also provides a set of powerful features that enables you to build distributed applications rapidly and effortlessly. Pyro is written in 100% pure Python.", "active": true, "categories": ["python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-pyro"]}], "depends_on": []}, {"name": "py27-pyro", "portdir": "python/py-pyro", "version": "4.77", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/irmen/Pyro4", "description": "Distributed object middleware for Python (RPC)", "long_description": "Pyro means PYthon Remote Objects. It is a library that enables you to build applications in which objects can talk to each other over the network, with minimal programming effort. You can just use normal Python method calls, with almost every possible parameter and return value type, and Pyro takes care of locating the right object on the right computer to execute the method. It is designed to be very easy to use, and to generally stay out of your way. But it also provides a set of powerful features that enables you to build distributed applications rapidly and effortlessly. Pyro is written in 100% pure Python.", "active": true, "categories": ["python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-serpent"]}], "depends_on": [{"type": "lib", "ports": ["nMOLDYN"]}]}, {"name": "py35-pyro", "portdir": "python/py-pyro", "version": "4.77", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/irmen/Pyro4", "description": "Distributed object middleware for Python (RPC)", "long_description": "Pyro means PYthon Remote Objects. It is a library that enables you to build applications in which objects can talk to each other over the network, with minimal programming effort. You can just use normal Python method calls, with almost every possible parameter and return value type, and Pyro takes care of locating the right object on the right computer to execute the method. It is designed to be very easy to use, and to generally stay out of your way. But it also provides a set of powerful features that enables you to build distributed applications rapidly and effortlessly. Pyro is written in 100% pure Python.", "active": true, "categories": ["python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-serpent"]}], "depends_on": []}, {"name": "py36-pyro", "portdir": "python/py-pyro", "version": "4.77", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/irmen/Pyro4", "description": "Distributed object middleware for Python (RPC)", "long_description": "Pyro means PYthon Remote Objects. It is a library that enables you to build applications in which objects can talk to each other over the network, with minimal programming effort. You can just use normal Python method calls, with almost every possible parameter and return value type, and Pyro takes care of locating the right object on the right computer to execute the method. It is designed to be very easy to use, and to generally stay out of your way. But it also provides a set of powerful features that enables you to build distributed applications rapidly and effortlessly. Pyro is written in 100% pure Python.", "active": true, "categories": ["python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-serpent"]}], "depends_on": []}, {"name": "py37-pyro", "portdir": "python/py-pyro", "version": "4.77", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/irmen/Pyro4", "description": "Distributed object middleware for Python (RPC)", "long_description": "Pyro means PYthon Remote Objects. It is a library that enables you to build applications in which objects can talk to each other over the network, with minimal programming effort. You can just use normal Python method calls, with almost every possible parameter and return value type, and Pyro takes care of locating the right object on the right computer to execute the method. It is designed to be very easy to use, and to generally stay out of your way. But it also provides a set of powerful features that enables you to build distributed applications rapidly and effortlessly. Pyro is written in 100% pure Python.", "active": true, "categories": ["python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-serpent"]}], "depends_on": []}, {"name": "py38-pyro", "portdir": "python/py-pyro", "version": "4.77", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/irmen/Pyro4", "description": "Distributed object middleware for Python (RPC)", "long_description": "Pyro means PYthon Remote Objects. It is a library that enables you to build applications in which objects can talk to each other over the network, with minimal programming effort. You can just use normal Python method calls, with almost every possible parameter and return value type, and Pyro takes care of locating the right object on the right computer to execute the method. It is designed to be very easy to use, and to generally stay out of your way. But it also provides a set of powerful features that enables you to build distributed applications rapidly and effortlessly. Pyro is written in 100% pure Python.", "active": true, "categories": ["python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-serpent"]}], "depends_on": [{"type": "lib", "ports": ["py-pyro"]}]}, {"name": "py-pyrxp", "portdir": "python/py-pyrxp", "version": "2.2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRXP", "description": "Fast validating XML parser for python", "long_description": "Fast validating XML parser for python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pyrxp"]}], "depends_on": []}, {"name": "py27-pyrxp", "portdir": "python/py-pyrxp", "version": "2.2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRXP", "description": "Fast validating XML parser for python", "long_description": "Fast validating XML parser for python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-lscsoft-glue", "dqsegdb"]}, {"type": "run", "ports": ["lscsoft-deps"]}]}, {"name": "py35-pyrxp", "portdir": "python/py-pyrxp", "version": "2.2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRXP", "description": "Fast validating XML parser for python", "long_description": "Fast validating XML parser for python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-pyrxp", "portdir": "python/py-pyrxp", "version": "2.2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRXP", "description": "Fast validating XML parser for python", "long_description": "Fast validating XML parser for python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-lscsoft-glue"]}]}, {"name": "py37-pyrxp", "portdir": "python/py-pyrxp", "version": "2.2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRXP", "description": "Fast validating XML parser for python", "long_description": "Fast validating XML parser for python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-lscsoft-glue"]}]}, {"name": "py38-pyrxp", "portdir": "python/py-pyrxp", "version": "2.2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRXP", "description": "Fast validating XML parser for python", "long_description": "Fast validating XML parser for python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-lscsoft-glue"]}]}, {"name": "py39-pyrxp", "portdir": "python/py-pyrxp", "version": "2.2.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pyRXP", "description": "Fast validating XML parser for python", "long_description": "Fast validating XML parser for python", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "mcalhoun", "github": "MarcusCalhoun-Lopez", "ports_count": 995}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-pyrxp"]}]}, {"name": "py-pysal", "portdir": "python/py-pysal", "version": "1.14.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysal/pysal", "description": "Python Spatial Analysis Library", "long_description": "PySAL is a Python module providing several spatial analysis tools", "active": true, "categories": ["python", "gis"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-pysal"]}], "depends_on": []}, {"name": "py27-pysal", "portdir": "python/py-pysal", "version": "1.14.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysal/pysal", "description": "Python Spatial Analysis Library", "long_description": "PySAL is a Python module providing several spatial analysis tools", "active": true, "categories": ["python", "gis"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-numpy", "py27-scipy"]}], "depends_on": []}, {"name": "py35-pysal", "portdir": "python/py-pysal", "version": "1.14.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysal/pysal", "description": "Python Spatial Analysis Library", "long_description": "PySAL is a Python module providing several spatial analysis tools", "active": true, "categories": ["python", "gis"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35", "py35-numpy", "py35-scipy"]}], "depends_on": []}, {"name": "py36-pysal", "portdir": "python/py-pysal", "version": "1.14.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysal/pysal", "description": "Python Spatial Analysis Library", "long_description": "PySAL is a Python module providing several spatial analysis tools", "active": true, "categories": ["python", "gis"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-numpy", "py36-scipy"]}], "depends_on": [{"type": "lib", "ports": ["py-pysal"]}]}, {"name": "py-pysam", "portdir": "python/py-pysam", "version": "0.15.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysam-developers/pysam", "description": "Python interface for the SAM/BAM sequence alignment and mapping format", "long_description": "Pysam is a python module for reading and manipulating Samfiles. It's a lightweight wrapper of the samtools C-API.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "git", "github": "SoapZA", "ports_count": 11}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-pysam"]}], "depends_on": []}, {"name": "py27-pysam", "portdir": "python/py-pysam", "version": "0.15.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysam-developers/pysam", "description": "Python interface for the SAM/BAM sequence alignment and mapping format", "long_description": "Pysam is a python module for reading and manipulating Samfiles. It's a lightweight wrapper of the samtools C-API.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "git", "github": "SoapZA", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-cython", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "bzip2", "curl", "xz", "zlib"]}], "depends_on": [{"type": "lib", "ports": ["py27-htseq"]}]}, {"name": "py36-pysam", "portdir": "python/py-pysam", "version": "0.15.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysam-developers/pysam", "description": "Python interface for the SAM/BAM sequence alignment and mapping format", "long_description": "Pysam is a python module for reading and manipulating Samfiles. It's a lightweight wrapper of the samtools C-API.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "git", "github": "SoapZA", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-cython", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "bzip2", "curl", "xz", "zlib"]}], "depends_on": [{"type": "lib", "ports": ["py36-htseq"]}]}, {"name": "py37-pysam", "portdir": "python/py-pysam", "version": "0.15.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysam-developers/pysam", "description": "Python interface for the SAM/BAM sequence alignment and mapping format", "long_description": "Pysam is a python module for reading and manipulating Samfiles. It's a lightweight wrapper of the samtools C-API.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "git", "github": "SoapZA", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-cython", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "bzip2", "curl", "xz", "zlib"]}], "depends_on": [{"type": "lib", "ports": ["py37-htseq"]}]}, {"name": "py38-pysam", "portdir": "python/py-pysam", "version": "0.15.4", "license": "MIT and BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pysam-developers/pysam", "description": "Python interface for the SAM/BAM sequence alignment and mapping format", "long_description": "Pysam is a python module for reading and manipulating Samfiles. It's a lightweight wrapper of the samtools C-API.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "git", "github": "SoapZA", "ports_count": 11}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-cython", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "bzip2", "curl", "xz", "zlib"]}], "depends_on": [{"type": "lib", "ports": ["py38-htseq", "py-pysam"]}]}, {"name": "py-pyshp", "portdir": "python/py-pyshp", "version": "2.1.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/GeospatialPython/pyshp", "description": "Python Shapefile Library", "long_description": "PyShp library provides read and write support for the ESRI shapefile format in pure Python. This format is a popular Geographic Information System vector data format created by ESRI. You can read and write shp, shx, and dbf files with all types of geometry. Everything in the public ESRI shapefile specification is implemented.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pyshp"]}], "depends_on": []}, {"name": "py27-pyshp", "portdir": "python/py-pyshp", "version": "2.1.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/GeospatialPython/pyshp", "description": "Python Shapefile Library", "long_description": "PyShp library provides read and write support for the ESRI shapefile format in pure Python. This format is a popular Geographic Information System vector data format created by ESRI. You can read and write shp, shx, and dbf files with all types of geometry. Everything in the public ESRI shapefile specification is implemented.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-matplotlib-basemap", "py27-cartopy", "py27-obspy"]}]}, {"name": "py35-pyshp", "portdir": "python/py-pyshp", "version": "2.1.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/GeospatialPython/pyshp", "description": "Python Shapefile Library", "long_description": "PyShp library provides read and write support for the ESRI shapefile format in pure Python. This format is a popular Geographic Information System vector data format created by ESRI. You can read and write shp, shx, and dbf files with all types of geometry. Everything in the public ESRI shapefile specification is implemented.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": [{"type": "lib", "ports": ["py35-matplotlib-basemap", "py35-cartopy", "py35-obspy"]}]}, {"name": "py36-pyshp", "portdir": "python/py-pyshp", "version": "2.1.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/GeospatialPython/pyshp", "description": "Python Shapefile Library", "long_description": "PyShp library provides read and write support for the ESRI shapefile format in pure Python. This format is a popular Geographic Information System vector data format created by ESRI. You can read and write shp, shx, and dbf files with all types of geometry. Everything in the public ESRI shapefile specification is implemented.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-matplotlib-basemap", "py36-cartopy", "py36-obspy"]}]}, {"name": "py37-pyshp", "portdir": "python/py-pyshp", "version": "2.1.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/GeospatialPython/pyshp", "description": "Python Shapefile Library", "long_description": "PyShp library provides read and write support for the ESRI shapefile format in pure Python. This format is a popular Geographic Information System vector data format created by ESRI. You can read and write shp, shx, and dbf files with all types of geometry. Everything in the public ESRI shapefile specification is implemented.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-matplotlib-basemap", "py37-cartopy", "py37-obspy"]}]}, {"name": "py38-pyshp", "portdir": "python/py-pyshp", "version": "2.1.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/GeospatialPython/pyshp", "description": "Python Shapefile Library", "long_description": "PyShp library provides read and write support for the ESRI shapefile format in pure Python. This format is a popular Geographic Information System vector data format created by ESRI. You can read and write shp, shx, and dbf files with all types of geometry. Everything in the public ESRI shapefile specification is implemented.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-matplotlib-basemap", "py38-cartopy", "py38-obspy"]}]}, {"name": "py39-pyshp", "portdir": "python/py-pyshp", "version": "2.1.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/GeospatialPython/pyshp", "description": "Python Shapefile Library", "long_description": "PyShp library provides read and write support for the ESRI shapefile format in pure Python. This format is a popular Geographic Information System vector data format created by ESRI. You can read and write shp, shx, and dbf files with all types of geometry. Everything in the public ESRI shapefile specification is implemented.", "active": true, "categories": ["python", "gis"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py39-matplotlib-basemap", "py39-cartopy", "py39-obspy", "py-pyshp"]}]}, {"name": "py37-pytesting-utils", "portdir": "python/py-pytesting-utils", "version": "0.5.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytesting/utils", "description": "Utilities for the PyTesting project", "long_description": "Utilities for the PyTesting project", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-virtualenv"]}], "depends_on": [{"type": "lib", "ports": ["py37-test-runner"]}]}, {"name": "py-pyside", "portdir": "python/py-pyside", "version": "1.2.4", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyside/PySide", "description": "LGPL-licensed Python bindings for Qt", "long_description": "The PySide project provides LGPL-licensed Python bindings for the Qt cross-platform application and UI framework. PySide Qt bindings allow both free open source and proprietary software development and ultimately aim to support all of the platforms as Qt itself.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["debug"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["py27-pyside"]}], "depends_on": []}, {"name": "py27-pyside", "portdir": "python/py-pyside", "version": "1.2.4", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyside/PySide", "description": "LGPL-licensed Python bindings for Qt", "long_description": "The PySide project provides LGPL-licensed Python bindings for the Qt cross-platform application and UI framework. PySide Qt bindings allow both free open source and proprietary software development and ultimately aim to support all of the platforms as Qt itself.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["qt4-mac", "python27", "py27-shiboken"]}], "depends_on": [{"type": "lib", "ports": ["freecad", "py-pyside", "py27-pyside-tools"]}]}, {"name": "py35-pyside", "portdir": "python/py-pyside", "version": "1.2.4", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyside/PySide", "description": "LGPL-licensed Python bindings for Qt", "long_description": "The PySide project provides LGPL-licensed Python bindings for the Qt cross-platform application and UI framework. PySide Qt bindings allow both free open source and proprietary software development and ultimately aim to support all of the platforms as Qt itself.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["qt4-mac", "python35", "py35-shiboken"]}], "depends_on": [{"type": "lib", "ports": ["py35-pyside-tools"]}]}, {"name": "py36-pyside", "portdir": "python/py-pyside", "version": "1.2.4", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyside/PySide", "description": "LGPL-licensed Python bindings for Qt", "long_description": "The PySide project provides LGPL-licensed Python bindings for the Qt cross-platform application and UI framework. PySide Qt bindings allow both free open source and proprietary software development and ultimately aim to support all of the platforms as Qt itself.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["qt4-mac", "python36", "py36-shiboken"]}], "depends_on": [{"type": "lib", "ports": ["py36-pyside-tools"]}]}, {"name": "py37-pyside", "portdir": "python/py-pyside", "version": "1.2.4", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyside/PySide", "description": "LGPL-licensed Python bindings for Qt", "long_description": "The PySide project provides LGPL-licensed Python bindings for the Qt cross-platform application and UI framework. PySide Qt bindings allow both free open source and proprietary software development and ultimately aim to support all of the platforms as Qt itself.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["qt4-mac", "python37", "py37-shiboken"]}], "depends_on": [{"type": "lib", "ports": ["py37-pyside-tools"]}]}, {"name": "py38-pyside", "portdir": "python/py-pyside", "version": "1.2.4", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyside/PySide", "description": "LGPL-licensed Python bindings for Qt", "long_description": "The PySide project provides LGPL-licensed Python bindings for the Qt cross-platform application and UI framework. PySide Qt bindings allow both free open source and proprietary software development and ultimately aim to support all of the platforms as Qt itself.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["qt4-mac", "python38", "py38-shiboken"]}], "depends_on": [{"type": "lib", "ports": ["py38-pyside-tools"]}]}, {"name": "py39-pyside", "portdir": "python/py-pyside", "version": "1.2.4", "license": "LGPL", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pyside/PySide", "description": "LGPL-licensed Python bindings for Qt", "long_description": "The PySide project provides LGPL-licensed Python bindings for the Qt cross-platform application and UI framework. PySide Qt bindings allow both free open source and proprietary software development and ultimately aim to support all of the platforms as Qt itself.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["debug", "universal"], "dependencies": [{"type": "build", "ports": ["cmake", "pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["qt4-mac", "python39", "py39-shiboken"]}], "depends_on": [{"type": "lib", "ports": ["py39-pyside-tools"]}]}]}