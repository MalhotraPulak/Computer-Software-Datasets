{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=270", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=268", "results": [{"name": "py27-errorhandler", "portdir": "python/py-errorhandler", "version": "2.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Simplistix/errorhandler", "description": "Handler for Python error messages", "long_description": "This is a handler for the python standard logging framework that can be used to tell whether messages have been logged at or above a certain level.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py37-errorhandler", "portdir": "python/py-errorhandler", "version": "2.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/Simplistix/errorhandler", "description": "Handler for Python error messages", "long_description": "This is a handler for the python standard logging framework that can be used to tell whether messages have been logged at or above a certain level.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py-errorhandler"]}]}, {"name": "py38-esridump", "portdir": "python/py-esridump", "version": "1.10.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/openaddresses/pyesridump", "description": "Dump geodata from ESRI endpoints to GeoJSON", "long_description": "Dump geodata from ESRI endpoints to GeoJSON", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-requests", "py38-six"]}], "depends_on": []}, {"name": "py39-esridump", "portdir": "python/py-esridump", "version": "1.10.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/openaddresses/pyesridump", "description": "Dump geodata from ESRI endpoints to GeoJSON", "long_description": "Dump geodata from ESRI endpoints to GeoJSON", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-requests", "py39-six"]}], "depends_on": [{"type": "lib", "ports": ["py-esridump"]}]}, {"name": "py-etsproxy", "portdir": "python/py-etsproxy", "version": "0.1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/enthought/etsproxy", "description": "Proxy modules for backwards compatibility", "long_description": "This is the ETS proxy package, it contains the proxy modules for all ETS projects which map the old enthought namespace imports (version 3) to the namespace-refactored ETS packages (version 4).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "jjstickel", "github": "jjstickel", "ports_count": 113}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-etsproxy"]}], "depends_on": []}, {"name": "py27-etsproxy", "portdir": "python/py-etsproxy", "version": "0.1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/enthought/etsproxy", "description": "Proxy modules for backwards compatibility", "long_description": "This is the ETS proxy package, it contains the proxy modules for all ETS projects which map the old enthought namespace imports (version 3) to the namespace-refactored ETS packages (version 4).", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "jjstickel", "github": "jjstickel", "ports_count": 113}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-etsproxy"]}]}, {"name": "py35-expressions", "portdir": "python/py-expressions", "version": "0.2.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://databrewery.org/", "description": "Extensible arithmetic expression parser and compiler", "long_description": "Extensible arithmetic expression parser and compiler", "active": true, "categories": ["devel", "math", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-grako"]}], "depends_on": [{"type": "lib", "ports": ["py35-cubes"]}]}, {"name": "py27-et_xmlfile", "portdir": "python/py-et_xmlfile", "version": "1.0.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://foss.heptapod.net/openpyxl/et_xmlfile", "description": "An implementation of lxml.xmlfile for the standard library", "long_description": "An implementation of lxml.xmlfile for the standard library", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-openpyxl"]}]}, {"name": "py36-et_xmlfile", "portdir": "python/py-et_xmlfile", "version": "1.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://foss.heptapod.net/openpyxl/et_xmlfile", "description": "An implementation of lxml.xmlfile for the standard library", "long_description": "An implementation of lxml.xmlfile for the standard library", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-openpyxl"]}]}, {"name": "py37-et_xmlfile", "portdir": "python/py-et_xmlfile", "version": "1.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://foss.heptapod.net/openpyxl/et_xmlfile", "description": "An implementation of lxml.xmlfile for the standard library", "long_description": "An implementation of lxml.xmlfile for the standard library", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-openpyxl"]}]}, {"name": "py35-flake8", "portdir": "python/py-flake8", "version": "3.9.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://flake8.readthedocs.org/", "description": "The modular source code checker: pep8, pyflakes and Co.", "long_description": "Flake8 runs all the tools by launching the single flake8 script. It is is a wrapper around the following tools: PyFlakes, PEP8 and the McCabe script by Ned Batchelder. It displays the warnings in a per-file, merged output, features Git and Mercurial hook and is extendable through flake8.extension entry points.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py35-codestyle", "py35-entrypoints", "py35-flake8-mccabe", "py35-importlib-metadata", "py35-pyflakes", "py35-setuptools", "python35"]}, {"type": "run", "ports": ["flake8_select"]}, {"type": "test", "ports": ["py35-mock", "py35-pytest"]}], "depends_on": [{"type": "build", "ports": ["py35-getkey"]}, {"type": "lib", "ports": ["py35-language-server", "py35-flake8-polyfill"]}, {"type": "run", "ports": ["py35-obspy"]}]}, {"name": "py38-et_xmlfile", "portdir": "python/py-et_xmlfile", "version": "1.1.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://foss.heptapod.net/openpyxl/et_xmlfile", "description": "An implementation of lxml.xmlfile for the standard library", "long_description": "An implementation of lxml.xmlfile for the standard library", "active": true, "categories": ["devel", "textproc", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py38-openpyxl"]}]}, {"name": "py27-pytest-xdist", "portdir": "python/py-pytest-xdist", "version": "2.2.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/pytest-xdist", "description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "long_description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools_scm"]}, {"type": "lib", "ports": ["py27-pytest", "py27-pytest-forked", "python27", "py27-six", "py27-setuptools", "py27-execnet"]}], "depends_on": []}, {"name": "py37-pytest-xdist", "portdir": "python/py-pytest-xdist", "version": "2.2.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/pytest-xdist", "description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "long_description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools_scm"]}, {"type": "lib", "ports": ["py37-pytest", "py37-pytest-forked", "python37", "py37-six", "py37-setuptools", "py37-execnet"]}], "depends_on": [{"type": "test", "ports": ["py37-apache-beam", "py37-tensorflow-addons", "py37-tensorflow-datasets", "py37-magenta", "py37-note-seq", "py37-typer", "py37-cryptography"]}]}, {"name": "py38-pytest-xdist", "portdir": "python/py-pytest-xdist", "version": "2.2.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/pytest-xdist", "description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "long_description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools_scm"]}, {"type": "lib", "ports": ["py38-pytest", "py38-pytest-forked", "python38", "py38-six", "py38-setuptools", "py38-execnet"]}], "depends_on": [{"type": "test", "ports": ["py38-apache-beam", "py38-tensorflow-addons", "py38-tensorflow-datasets", "py38-transformers", "py38-magenta", "py38-note-seq", "py38-typer", "py38-cryptography"]}]}, {"name": "py39-pytest-xdist", "portdir": "python/py-pytest-xdist", "version": "2.2.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytest-dev/pytest-xdist", "description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "long_description": "The pytest-xdist plugin extends py.test with some unique test execution modes", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools_scm"]}, {"type": "lib", "ports": ["py39-pytest", "py39-pytest-forked", "python39", "py39-six", "py39-setuptools", "py39-execnet"]}], "depends_on": [{"type": "lib", "ports": ["py-pytest-xdist"]}, {"type": "test", "ports": ["py39-tensorflow-addons", "py39-tensorflow-datasets", "py39-transformers", "py39-apache-beam", "py39-note-seq", "py39-typer", "py39-cryptography", "py39-magenta"]}]}, {"name": "py-euca2ools", "portdir": "python/py-euca2ools", "version": "3.0.2", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://www.eucalyptus.com/download/euca2ools", "description": "Command line tools for EC2 and S3 APIs.", "long_description": "Euca2ools are command-line tools for interacting with Web services that export a REST/Query-based API compatible with Amazon EC2 and S3 services.The tools can be used with both Amazon services and with installations of the Eucalyptus open-source cloud-computing infrastructure. The tools were inspired by command-line tools distributed by Amazon (api-tools and ami-tools) and largely accept the same options and environment variables.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-euca2ools"]}], "depends_on": []}, {"name": "py27-eventlet", "portdir": "python/py-eventlet", "version": "0.25.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://eventlet.net/", "description": "Highly concurrent networking library", "long_description": "Eventlet is a networking library written in Python. It achieves high scalability by using non-blocking io while at the same time retaining high programmer usability by using coroutines to make the non-blocking io operations appear blocking at the source code level.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-enum34", "py27-greenlet", "python27", "py27-six", "py27-monotonic", "py27-dnspython"]}], "depends_on": []}, {"name": "py27-euca2ools", "portdir": "python/py-euca2ools", "version": "3.0.2", "license": "MIT", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "https://www.eucalyptus.com/download/euca2ools", "description": "Command line tools for EC2 and S3 APIs.", "long_description": "Euca2ools are command-line tools for interacting with Web services that export a REST/Query-based API compatible with Amazon EC2 and S3 services.The tools can be used with both Amazon services and with installations of the Eucalyptus open-source cloud-computing infrastructure. The tools were inspired by command-line tools distributed by Amazon (api-tools and ami-tools) and largely accept the same options and environment variables.", "active": true, "categories": ["net", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-boto", "py27-m2crypto"]}], "depends_on": [{"type": "lib", "ports": ["py-euca2ools"]}]}, {"name": "py36-eventlet", "portdir": "python/py-eventlet", "version": "0.25.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://eventlet.net/", "description": "Highly concurrent networking library", "long_description": "Eventlet is a networking library written in Python. It achieves high scalability by using non-blocking io while at the same time retaining high programmer usability by using coroutines to make the non-blocking io operations appear blocking at the source code level.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["py36-greenlet", "python36", "py36-six", "py36-monotonic", "py36-dnspython"]}], "depends_on": []}, {"name": "py37-eventlet", "portdir": "python/py-eventlet", "version": "0.25.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://eventlet.net/", "description": "Highly concurrent networking library", "long_description": "Eventlet is a networking library written in Python. It achieves high scalability by using non-blocking io while at the same time retaining high programmer usability by using coroutines to make the non-blocking io operations appear blocking at the source code level.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-greenlet", "python37", "py37-six", "py37-monotonic", "py37-dnspython"]}], "depends_on": []}, {"name": "py-excelrd", "portdir": "python/py-excelrd", "version": "2.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/thombashi/excelrd", "description": "module to extract data from Microsoft Excel spreadsheet files", "long_description": "excelrd is a Python module to extract data from Microsoft Excel spreadsheet files. It is a modified version of xlrd for the latest python versions", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-excelrd"]}], "depends_on": []}, {"name": "py36-excelrd", "portdir": "python/py-excelrd", "version": "2.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/thombashi/excelrd", "description": "module to extract data from Microsoft Excel spreadsheet files", "long_description": "excelrd is a Python module to extract data from Microsoft Excel spreadsheet files. It is a modified version of xlrd for the latest python versions", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": []}, {"name": "py37-excelrd", "portdir": "python/py-excelrd", "version": "2.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/thombashi/excelrd", "description": "module to extract data from Microsoft Excel spreadsheet files", "long_description": "excelrd is a Python module to extract data from Microsoft Excel spreadsheet files. It is a modified version of xlrd for the latest python versions", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py38-excelrd", "portdir": "python/py-excelrd", "version": "2.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/thombashi/excelrd", "description": "module to extract data from Microsoft Excel spreadsheet files", "long_description": "excelrd is a Python module to extract data from Microsoft Excel spreadsheet files. It is a modified version of xlrd for the latest python versions", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": []}, {"name": "py39-excelrd", "portdir": "python/py-excelrd", "version": "2.0.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/thombashi/excelrd", "description": "module to extract data from Microsoft Excel spreadsheet files", "long_description": "excelrd is a Python module to extract data from Microsoft Excel spreadsheet files. It is a modified version of xlrd for the latest python versions", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}], "depends_on": [{"type": "lib", "ports": ["py-excelrd"]}]}, {"name": "py-exifread", "portdir": "python/py-exifread", "version": "2.3.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ianare/exif-py", "description": "EXIF.py - Python interface to the EXIF meta-data", "long_description": "Exchangeable Image File Format for Digital Still Cameras is a meta-information tag that can be embedded in tiff or jpeg image files. EXIF.py is a Python interface to this data.", "active": true, "categories": ["python"], "maintainers": [{"name": "chrischavez", "github": "chrstphrchvz", "ports_count": 60}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-exifread"]}], "depends_on": []}, {"name": "py27-exifread", "portdir": "python/py-exifread", "version": "2.3.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ianare/exif-py", "description": "EXIF.py - Python interface to the EXIF meta-data", "long_description": "Exchangeable Image File Format for Digital Still Cameras is a meta-information tag that can be embedded in tiff or jpeg image files. EXIF.py is a Python interface to this data.", "active": true, "categories": ["python"], "maintainers": [{"name": "chrischavez", "github": "chrstphrchvz", "ports_count": 60}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": []}, {"name": "py37-exifread", "portdir": "python/py-exifread", "version": "2.3.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ianare/exif-py", "description": "EXIF.py - Python interface to the EXIF meta-data", "long_description": "Exchangeable Image File Format for Digital Still Cameras is a meta-information tag that can be embedded in tiff or jpeg image files. EXIF.py is a Python interface to this data.", "active": true, "categories": ["python"], "maintainers": [{"name": "chrischavez", "github": "chrstphrchvz", "ports_count": 60}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py38-exifread", "portdir": "python/py-exifread", "version": "2.3.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ianare/exif-py", "description": "EXIF.py - Python interface to the EXIF meta-data", "long_description": "Exchangeable Image File Format for Digital Still Cameras is a meta-information tag that can be embedded in tiff or jpeg image files. EXIF.py is a Python interface to this data.", "active": true, "categories": ["python"], "maintainers": [{"name": "chrischavez", "github": "chrstphrchvz", "ports_count": 60}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py-exifread"]}]}, {"name": "py-expressions", "portdir": "python/py-expressions", "version": "0.2.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://databrewery.org/", "description": "Extensible arithmetic expression parser and compiler", "long_description": "Extensible arithmetic expression parser and compiler", "active": true, "categories": ["devel", "math", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-expressions"]}], "depends_on": []}, {"name": "py36-expressions", "portdir": "python/py-expressions", "version": "0.2.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://databrewery.org/", "description": "Extensible arithmetic expression parser and compiler", "long_description": "Extensible arithmetic expression parser and compiler", "active": true, "categories": ["devel", "math", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-grako"]}], "depends_on": [{"type": "lib", "ports": ["py36-cubes", "py-expressions"]}]}, {"name": "py-extension-helpers", "portdir": "python/py-extension-helpers", "version": "0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/extension-helpers", "description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "long_description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-extension-helpers"]}], "depends_on": []}, {"name": "py36-extension-helpers", "portdir": "python/py-extension-helpers", "version": "0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/extension-helpers", "description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "long_description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-setuptools"]}], "depends_on": [{"type": "build", "ports": ["py36-astropy", "py36-astropy-healpix", "py36-reproject"]}]}, {"name": "py37-extension-helpers", "portdir": "python/py-extension-helpers", "version": "0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/extension-helpers", "description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "long_description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}], "depends_on": [{"type": "build", "ports": ["py37-reproject", "py37-astropy-healpix", "py37-astropy", "py37-sunpy"]}]}, {"name": "py38-extension-helpers", "portdir": "python/py-extension-helpers", "version": "0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/extension-helpers", "description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "long_description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-setuptools"]}], "depends_on": [{"type": "build", "ports": ["py38-reproject", "py38-astropy-healpix", "py38-astropy", "py38-sunpy"]}]}, {"name": "py39-extension-helpers", "portdir": "python/py-extension-helpers", "version": "0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/extension-helpers", "description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "long_description": "Helpers to assist with building Python packages with compiled C/Cython extensions", "active": true, "categories": ["devel", "science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-setuptools"]}], "depends_on": [{"type": "build", "ports": ["py39-reproject", "py39-astropy-healpix", "py39-astropy", "py39-sunpy"]}, {"type": "lib", "ports": ["py-extension-helpers"]}]}, {"name": "py38-eyed3", "portdir": "python/py-eyed3", "version": "0.9.6", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://eyed3.readthedocs.io", "description": "Python audio data toolkit (ID3 and MP3)", "long_description": "eyeD3 is a Python tool for working with audio files, specifically MP3 files containing ID3 metadata (i.e. song info). It provides a command-line tool (eyeD3) and a Python library (import eyed3) that can be used to write your own applications or plugins that are callable from the command-line tool.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-deprecation", "py38-filetype", "py38-setuptools"]}], "depends_on": []}, {"name": "py-eyed3", "portdir": "python/py-eyed3", "version": "0.9.6", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://eyed3.readthedocs.io", "description": "Python audio data toolkit (ID3 and MP3)", "long_description": "eyeD3 is a Python tool for working with audio files, specifically MP3 files containing ID3 metadata (i.e. song info). It provides a command-line tool (eyeD3) and a Python library (import eyed3) that can be used to write your own applications or plugins that are callable from the command-line tool.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-eyed3"]}], "depends_on": []}, {"name": "py27-eyed3", "portdir": "python/py-eyed3", "version": "0.8.12", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://eyed3.readthedocs.io", "description": "Python audio data toolkit (ID3 and MP3)", "long_description": "eyeD3 is a Python tool for working with audio files, specifically MP3 files containing ID3 metadata (i.e. song info). It provides a command-line tool (eyeD3) and a Python library (import eyed3) that can be used to write your own applications or plugins that are callable from the command-line tool.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-magic", "py27-pathlib2", "py27-setuptools", "py27-six"]}], "depends_on": []}, {"name": "py-ez_setup", "portdir": "python/py-ez_setup", "version": "0.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ez_setup/", "description": "To solve a setuptools problem", "long_description": "To solve a setuptools problem", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-ez_setup"]}], "depends_on": []}, {"name": "py27-ez_setup", "portdir": "python/py-ez_setup", "version": "0.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ez_setup/", "description": "To solve a setuptools problem", "long_description": "To solve a setuptools problem", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "build", "ports": ["py27-fipy"]}, {"type": "lib", "ports": ["py27-robotframework-selenium2library"]}]}, {"name": "py35-ez_setup", "portdir": "python/py-ez_setup", "version": "0.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ez_setup/", "description": "To solve a setuptools problem", "long_description": "To solve a setuptools problem", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": []}, {"name": "py36-ez_setup", "portdir": "python/py-ez_setup", "version": "0.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ez_setup/", "description": "To solve a setuptools problem", "long_description": "To solve a setuptools problem", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "build", "ports": ["py36-fipy"]}]}, {"name": "py37-ez_setup", "portdir": "python/py-ez_setup", "version": "0.9", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/ez_setup/", "description": "To solve a setuptools problem", "long_description": "To solve a setuptools problem", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "build", "ports": ["py37-fipy"]}, {"type": "lib", "ports": ["py-ez_setup"]}]}, {"name": "py37-eyed3", "portdir": "python/py-eyed3", "version": "0.9.6", "license": "GPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://eyed3.readthedocs.io", "description": "Python audio data toolkit (ID3 and MP3)", "long_description": "eyeD3 is a Python tool for working with audio files, specifically MP3 files containing ID3 metadata (i.e. song info). It provides a command-line tool (eyeD3) and a Python library (import eyed3) that can be used to write your own applications or plugins that are callable from the command-line tool.", "active": true, "categories": ["audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-deprecation", "py37-filetype", "py37-setuptools"]}], "depends_on": []}, {"name": "py-ezodf", "portdir": "python/py-ezodf", "version": "0.2.5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/T0ha/ezodf", "description": "Python package to create or open OpenDocument files.", "long_description": "ezodf is a Python package to create new or open existing OpenDocument (ODF) files to extract, add, modify or delete document data.", "active": true, "categories": ["python"], "maintainers": [{"name": "Mathias.Laurin+macports", "github": "Synss", "ports_count": 5}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-ezodf"]}], "depends_on": []}, {"name": "py27-ezodf", "portdir": "python/py-ezodf", "version": "0.2.5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/T0ha/ezodf", "description": "Python package to create or open OpenDocument files.", "long_description": "ezodf is a Python package to create new or open existing OpenDocument (ODF) files to extract, add, modify or delete document data.", "active": true, "categories": ["python"], "maintainers": [{"name": "Mathias.Laurin+macports", "github": "Synss", "ports_count": 5}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27", "py27-lxml"]}], "depends_on": []}, {"name": "py35-ezodf", "portdir": "python/py-ezodf", "version": "0.2.5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/T0ha/ezodf", "description": "Python package to create or open OpenDocument files.", "long_description": "ezodf is a Python package to create new or open existing OpenDocument (ODF) files to extract, add, modify or delete document data.", "active": true, "categories": ["python"], "maintainers": [{"name": "Mathias.Laurin+macports", "github": "Synss", "ports_count": 5}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35", "py35-lxml"]}], "depends_on": []}, {"name": "py36-ezodf", "portdir": "python/py-ezodf", "version": "0.2.5", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/T0ha/ezodf", "description": "Python package to create or open OpenDocument files.", "long_description": "ezodf is a Python package to create new or open existing OpenDocument (ODF) files to extract, add, modify or delete document data.", "active": true, "categories": ["python"], "maintainers": [{"name": "Mathias.Laurin+macports", "github": "Synss", "ports_count": 5}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python36", "py36-lxml"]}], "depends_on": [{"type": "lib", "ports": ["py-ezodf"]}]}]}