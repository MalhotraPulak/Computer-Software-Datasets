{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=271", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=269", "results": [{"name": "py310-kiwisolver", "portdir": "python/py-kiwisolver", "version": "1.3.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/nucleic/kiwi", "description": "Kiwi is an efficient C++ implementation of the Cassowary constraint solving algorithm.", "long_description": "Kiwi is an implementation of the algorithm based on the seminal Cassowary paper. It is not a refactoring of the original C++ solver. Kiwi has been designed from the ground up to be lightweight and fast. Kiwi ranges from 10x to 500x faster than the original Cassowary solver with typical use cases gaining a 40x improvement. Memory savings are consistently > 5x.", "active": true, "categories": ["math", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools", "py310-cppy"]}, {"type": "lib", "ports": ["python310"]}, {"type": "test", "ports": ["py310-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py310-matplotlib"]}]}, {"name": "py27-fabric", "portdir": "python/py-fabric", "version": "2.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://fabfile.org", "description": "Fabric is a simple tool for remote execution and deployment.", "long_description": "Fabric is a simple tool for remote execution and deployment.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["fabric_select", "py27-cryptography", "python27", "py27-paramiko", "py27-setuptools", "py27-invoke"]}], "depends_on": []}, {"name": "py36-fabric", "portdir": "python/py-fabric", "version": "2.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://fabfile.org", "description": "Fabric is a simple tool for remote execution and deployment.", "long_description": "Fabric is a simple tool for remote execution and deployment.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["fabric_select", "py36-cryptography", "python36", "py36-paramiko", "py36-setuptools", "py36-invoke"]}], "depends_on": []}, {"name": "py37-fabric", "portdir": "python/py-fabric", "version": "2.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://fabfile.org", "description": "Fabric is a simple tool for remote execution and deployment.", "long_description": "Fabric is a simple tool for remote execution and deployment.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["fabric_select", "py37-cryptography", "python37", "py37-paramiko", "py37-setuptools", "py37-invoke"]}], "depends_on": []}, {"name": "py38-fabric", "portdir": "python/py-fabric", "version": "2.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://fabfile.org", "description": "Fabric is a simple tool for remote execution and deployment.", "long_description": "Fabric is a simple tool for remote execution and deployment.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["fabric_select", "py38-cryptography", "python38", "py38-paramiko", "py38-setuptools", "py38-invoke"]}], "depends_on": []}, {"name": "py39-fabric", "portdir": "python/py-fabric", "version": "2.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://fabfile.org", "description": "Fabric is a simple tool for remote execution and deployment.", "long_description": "Fabric is a simple tool for remote execution and deployment.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["fabric_select", "py39-cryptography", "python39", "py39-paramiko", "py39-setuptools", "py39-invoke"]}], "depends_on": [{"type": "lib", "ports": ["py-fabric"]}]}, {"name": "py39-fairseq", "portdir": "python/py-fairseq", "version": "0.10.2", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytorch/fairseq", "description": "Facebook AI Research Sequence-to-Sequence Toolkit written in Python.", "long_description": "Fairseq(-py) is a sequence modeling toolkit that allows researchers and developers to train custom models for translation, summarization, language modeling and other text generation tasks.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-setuptools", "python39"]}, {"type": "run", "ports": ["py39-hydra-core", "py39-numpy", "py39-pytorch", "py39-regex", "py39-sacrebleu", "py39-tqdm", "py39-omegaconf", "py39-cffi", "py39-cython"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-fairseq"]}, {"type": "run", "ports": ["py39-transformers"]}]}, {"name": "py-fancycompleter", "portdir": "python/py-fancycompleter", "version": "0.9.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pdbpp/fancycompleter", "description": "colorful TAB completion for Python prompt", "long_description": "colorful TAB completion for Python prompt", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-fancycompleter"]}], "depends_on": []}, {"name": "py27-fancycompleter", "portdir": "python/py-fancycompleter", "version": "0.9.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pdbpp/fancycompleter", "description": "colorful TAB completion for Python prompt", "long_description": "colorful TAB completion for Python prompt", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setupmeta", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-repl"]}], "depends_on": []}, {"name": "py37-fancycompleter", "portdir": "python/py-fancycompleter", "version": "0.9.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pdbpp/fancycompleter", "description": "colorful TAB completion for Python prompt", "long_description": "colorful TAB completion for Python prompt", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setupmeta", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-repl"]}], "depends_on": [{"type": "build", "ports": ["py37-pdbpp"]}]}, {"name": "py38-fancycompleter", "portdir": "python/py-fancycompleter", "version": "0.9.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pdbpp/fancycompleter", "description": "colorful TAB completion for Python prompt", "long_description": "colorful TAB completion for Python prompt", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setupmeta", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-repl"]}], "depends_on": [{"type": "build", "ports": ["py38-pdbpp"]}, {"type": "lib", "ports": ["py-fancycompleter"]}]}, {"name": "py-fann2", "portdir": "python/py-fann2", "version": "1.2.0", "license": "LGPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/FutureLinkCorporation/fann2", "description": "Python bindings for Fast Artificial Neural Networks 2.2.0 (FANN >= 2.2.0).", "long_description": "This is a python binding for Fast Artificial Neural Network Library (FANN >= 2.2.0) that implements multi-layer artificial neural networks with support for both fully-connected and sparsely-connected networks. It includes a framework for easily handling training data sets. It is easy to use, versatile, well- documented, and fast.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-fann2"]}], "depends_on": []}, {"name": "py38-fann2", "portdir": "python/py-fann2", "version": "1.2.0", "license": "LGPL-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/FutureLinkCorporation/fann2", "description": "Python bindings for Fast Artificial Neural Networks 2.2.0 (FANN >= 2.2.0).", "long_description": "This is a python binding for Fast Artificial Neural Network Library (FANN >= 2.2.0) that implements multi-layer artificial neural networks with support for both fully-connected and sparsely-connected networks. It includes a framework for easily handling training data sets. It is easy to use, versatile, well- documented, and fast.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "smithsp", "github": "smithsp", "ports_count": 33}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["swig-python", "clang-9.0", "py38-cython", "py38-setuptools", "fann"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "lib", "ports": ["py-fann2"]}]}, {"name": "py-fastapi", "portdir": "python/py-fastapi", "version": "0.63.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tiangolo/fastapi", "description": "FastAPI framework, high performance, easy to learn, fast to code, ready for production", "long_description": "FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-fastapi"]}], "depends_on": []}, {"name": "py-lazy_object_proxy", "portdir": "python/py-lazy_object_proxy", "version": "1.6.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ionelmc/python-lazy-object-proxy", "description": "A fast and thorough lazy object proxy.", "long_description": "A fast and thorough lazy object proxy.", "active": true, "categories": ["python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-lazy_object_proxy"]}], "depends_on": []}, {"name": "py27-lazy_object_proxy", "portdir": "python/py-lazy_object_proxy", "version": "1.6.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ionelmc/python-lazy-object-proxy", "description": "A fast and thorough lazy object proxy.", "long_description": "A fast and thorough lazy object proxy.", "active": true, "categories": ["python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools", "py27-setuptools_scm"]}, {"type": "lib", "ports": ["python27"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py27-astroid"]}]}, {"name": "py35-lazy_object_proxy", "portdir": "python/py-lazy_object_proxy", "version": "1.6.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ionelmc/python-lazy-object-proxy", "description": "A fast and thorough lazy object proxy.", "long_description": "A fast and thorough lazy object proxy.", "active": true, "categories": ["python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools", "py35-setuptools_scm"]}, {"type": "lib", "ports": ["python35"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py35-astroid"]}]}, {"name": "py36-lazy_object_proxy", "portdir": "python/py-lazy_object_proxy", "version": "1.6.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ionelmc/python-lazy-object-proxy", "description": "A fast and thorough lazy object proxy.", "long_description": "A fast and thorough lazy object proxy.", "active": true, "categories": ["python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools", "py36-setuptools_scm"]}, {"type": "lib", "ports": ["python36"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py36-astroid"]}]}, {"name": "py37-fastapi", "portdir": "python/py-fastapi", "version": "0.63.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tiangolo/fastapi", "description": "FastAPI framework, high performance, easy to learn, fast to code, ready for production", "long_description": "FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["py37-python-install", "py37-wheel", "py37-typing_extensions", "clang-9.0", "py37-flit", "py37-pep517"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-starlette", "py37-pydantic"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": []}, {"name": "py38-fastapi", "portdir": "python/py-fastapi", "version": "0.63.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tiangolo/fastapi", "description": "FastAPI framework, high performance, easy to learn, fast to code, ready for production", "long_description": "FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["py38-python-install", "py38-wheel", "py38-typing_extensions", "clang-9.0", "py38-flit", "py38-pep517"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-starlette", "py38-pydantic"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "run", "ports": ["py38-transformers"]}]}, {"name": "py39-fastapi", "portdir": "python/py-fastapi", "version": "0.63.0", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/tiangolo/fastapi", "description": "FastAPI framework, high performance, easy to learn, fast to code, ready for production", "long_description": "FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["py39-python-install", "py39-wheel", "py39-typing_extensions", "clang-9.0", "py39-flit", "py39-pep517"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-starlette", "py39-pydantic"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-fastapi"]}, {"type": "run", "ports": ["py39-transformers"]}]}, {"name": "py-fastavro", "portdir": "python/py-fastavro", "version": "1.3.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fastavro.readthedocs.org/", "description": "Fast read and write module for AVRO files", "long_description": "Fast read and write module for AVRO files", "active": true, "categories": ["net", "science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-fastavro"]}], "depends_on": []}, {"name": "py37-fastavro", "portdir": "python/py-fastavro", "version": "1.3.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fastavro.readthedocs.org/", "description": "Fast read and write module for AVRO files", "long_description": "Fast read and write module for AVRO files", "active": true, "categories": ["net", "science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python37", "py37-setuptools"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "run", "ports": ["py37-apache-beam"]}]}, {"name": "py38-fastavro", "portdir": "python/py-fastavro", "version": "1.3.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fastavro.readthedocs.org/", "description": "Fast read and write module for AVRO files", "long_description": "Fast read and write module for AVRO files", "active": true, "categories": ["net", "science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python38", "py38-setuptools"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "run", "ports": ["py38-apache-beam"]}]}, {"name": "py39-fastavro", "portdir": "python/py-fastavro", "version": "1.3.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://fastavro.readthedocs.org/", "description": "Fast read and write module for AVRO files", "long_description": "Fast read and write module for AVRO files", "active": true, "categories": ["net", "science", "python", "parallel"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python39", "py39-setuptools"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-fastavro"]}, {"type": "run", "ports": ["py39-apache-beam"]}]}, {"name": "py-fastdtw", "portdir": "python/py-fastdtw", "version": "0.3.4", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/fastdtw/", "description": "Dynamic Time Warping (DTW) algorithm with an O(N) time and memory complexity.", "long_description": "Python implementation of FastDTW, which is an approximate Dynamic Time Warping (DTW) algorithm that provides optimal or near-optimal alignments with an O(N) time and memory complexity.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-fastdtw"]}], "depends_on": []}, {"name": "py37-fastdtw", "portdir": "python/py-fastdtw", "version": "0.3.4", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/fastdtw/", "description": "Dynamic Time Warping (DTW) algorithm with an O(N) time and memory complexity.", "long_description": "Python implementation of FastDTW, which is an approximate Dynamic Time Warping (DTW) algorithm that provides optimal or near-optimal alignments with an O(N) time and memory complexity.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-requests", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-numpy"]}], "depends_on": []}, {"name": "py38-fastdtw", "portdir": "python/py-fastdtw", "version": "0.3.4", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/fastdtw/", "description": "Dynamic Time Warping (DTW) algorithm with an O(N) time and memory complexity.", "long_description": "Python implementation of FastDTW, which is an approximate Dynamic Time Warping (DTW) algorithm that provides optimal or near-optimal alignments with an O(N) time and memory complexity.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-requests", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-numpy"]}], "depends_on": []}, {"name": "py39-fastdtw", "portdir": "python/py-fastdtw", "version": "0.3.4", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/fastdtw/", "description": "Dynamic Time Warping (DTW) algorithm with an O(N) time and memory complexity.", "long_description": "Python implementation of FastDTW, which is an approximate Dynamic Time Warping (DTW) algorithm that provides optimal or near-optimal alignments with an O(N) time and memory complexity.", "active": true, "categories": ["science", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-requests", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-fastdtw"]}]}, {"name": "py-fastprogress", "portdir": "python/py-fastprogress", "version": "1.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/fastai/fastprogress", "description": "A nested progress with plotting options for fastai", "long_description": "A nested progress with plotting options for fastai", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-fastprogress"]}], "depends_on": []}, {"name": "py36-fastprogress", "portdir": "python/py-fastprogress", "version": "1.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/fastai/fastprogress", "description": "A nested progress with plotting options for fastai", "long_description": "A nested progress with plotting options for fastai", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py36-pymc3"]}]}, {"name": "py37-fastprogress", "portdir": "python/py-fastprogress", "version": "1.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/fastai/fastprogress", "description": "A nested progress with plotting options for fastai", "long_description": "A nested progress with plotting options for fastai", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py37-pymc3"]}]}, {"name": "py38-fastprogress", "portdir": "python/py-fastprogress", "version": "1.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/fastai/fastprogress", "description": "A nested progress with plotting options for fastai", "long_description": "A nested progress with plotting options for fastai", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py38-pymc3"]}, {"type": "run", "ports": ["py38-transformers"]}]}, {"name": "py39-fastprogress", "portdir": "python/py-fastprogress", "version": "1.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/fastai/fastprogress", "description": "A nested progress with plotting options for fastai", "long_description": "A nested progress with plotting options for fastai", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py39-pymc3", "py-fastprogress"]}, {"type": "run", "ports": ["py39-transformers"]}]}, {"name": "py-fastimport", "portdir": "python/py-fastimport", "version": "0.9.2", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://launchpad.net/python-fastimport", "description": "Python parser for the fastimport format", "long_description": "A Python parser for the fastimport format, split out from bzr-fastimport.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "raimue", "github": "raimue", "ports_count": 93}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-fastimport"]}], "depends_on": []}, {"name": "py27-fastimport", "portdir": "python/py-fastimport", "version": "0.9.2", "license": "GPL-2+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://launchpad.net/python-fastimport", "description": "Python parser for the fastimport format", "long_description": "A Python parser for the fastimport format, split out from bzr-fastimport.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "raimue", "github": "raimue", "ports_count": 93}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-fastimport"]}, {"type": "run", "ports": ["bzr-fastimport"]}]}, {"name": "py-ffc", "portdir": "python/py-ffc", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/ffc", "description": "FEniCS Form Compiler", "long_description": "FFC works as a compiler for multilinear forms by generating code (C or C++) for the evaluation of a multilinear form given in mathematical notation. This new approach to form evaluation makes it possible to combine generality with efficiency, the form can be given in mathematical notation and the generated code is as efficient as hand-optimized code.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-ffc", "boost176"]}], "depends_on": []}, {"name": "py36-async-timeout", "portdir": "python/py-async-timeout", "version": "4.0.1", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/aio-libs/async-timeout", "description": "asyncio-compatible timeout context manager.", "long_description": "asyncio-compatible is useful in cases when you want to apply timeout logic around block of code or in cases when asyncio.wait_for() is not suitable. Also it's much faster than asyncio.wait_for() because timeout doesn't create a new task.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "miguel", "github": "ipglider", "ports_count": 59}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-typing_extensions"]}], "depends_on": [{"type": "lib", "ports": ["py36-aiohttp"]}]}, {"name": "py-faulthandler", "portdir": "python/py-faulthandler", "version": "3.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://faulthandler.readthedocs.io/", "description": "Display the Python traceback on a crash", "long_description": "This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. It's part of python 3.3 onward so is only useful on MacPort for python 2.7.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-faulthandler"]}], "depends_on": []}, {"name": "py27-faulthandler", "portdir": "python/py-faulthandler", "version": "3.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://faulthandler.readthedocs.io/", "description": "Display the Python traceback on a crash", "long_description": "This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. It's part of python 3.3 onward so is only useful on MacPort for python 2.7.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-faulthandler"]}]}, {"name": "pianod", "portdir": "audio/pianod", "version": "343", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://deviousfish.com/Pianod", "description": "Music playing daemon with Pandora support", "long_description": "Client/server Pandora & local music daemon controllable via telnet or WebSocket. Includes web client and a shell script for command-line control. Supports multiple listeners with adjustable privileges, automatic station selection, script to run programmed station sequences.", "active": true, "categories": ["audio"], "maintainers": [{"name": "perette", "github": "perette", "ports_count": 1}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0"]}, {"type": "lib", "ports": ["zlib", "taglib", "curl"]}], "depends_on": []}, {"name": "py27-flaky", "portdir": "python/py-flaky", "version": "3.7.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/box/flaky", "description": "Plugin for nose or py.test that automatically reruns flaky tests.", "long_description": "Plugin for nose or py.test that automatically reruns flaky tests.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}, {"type": "test", "ports": ["py27-tox"]}], "depends_on": [{"type": "test", "ports": ["py27-language-server", "py27-watchdog"]}]}, {"name": "py37-lazy_object_proxy", "portdir": "python/py-lazy_object_proxy", "version": "1.6.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/ionelmc/python-lazy-object-proxy", "description": "A fast and thorough lazy object proxy.", "long_description": "A fast and thorough lazy object proxy.", "active": true, "categories": ["python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools", "py37-setuptools_scm"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-pytest", "py37-pytest-benchmark"]}], "depends_on": [{"type": "lib", "ports": ["py37-astroid"]}]}, {"name": "py36-ffc", "portdir": "python/py-ffc", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/ffc", "description": "FEniCS Form Compiler", "long_description": "FFC works as a compiler for multilinear forms by generating code (C or C++) for the evaluation of a multilinear form given in mathematical notation. This new approach to form evaluation makes it possible to combine generality with efficiency, the form can be given in mathematical notation and the generated code is as efficient as hand-optimized code.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["swig-python", "py36-dijitso", "py36-fiat", "py36-ufl", "boost176"]}], "depends_on": [{"type": "lib", "ports": ["dolfin", "py36-dolfin"]}]}, {"name": "py37-ffc", "portdir": "python/py-ffc", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/ffc", "description": "FEniCS Form Compiler", "long_description": "FFC works as a compiler for multilinear forms by generating code (C or C++) for the evaluation of a multilinear form given in mathematical notation. This new approach to form evaluation makes it possible to combine generality with efficiency, the form can be given in mathematical notation and the generated code is as efficient as hand-optimized code.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["swig-python", "py37-dijitso", "py37-fiat", "py37-ufl", "boost176"]}], "depends_on": []}, {"name": "py38-ffc", "portdir": "python/py-ffc", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/ffc", "description": "FEniCS Form Compiler", "long_description": "FFC works as a compiler for multilinear forms by generating code (C or C++) for the evaluation of a multilinear form given in mathematical notation. This new approach to form evaluation makes it possible to combine generality with efficiency, the form can be given in mathematical notation and the generated code is as efficient as hand-optimized code.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["swig-python", "py38-dijitso", "py38-fiat", "py38-ufl", "boost176"]}], "depends_on": [{"type": "lib", "ports": ["py-ffc"]}]}, {"name": "py-fiat", "portdir": "python/py-fiat", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/fiat", "description": "FInite element Automatic Tabulator", "long_description": "The FInite element Automatic Tabulator FIAT supports generation of arbitrary order instances of the Lagrange elements on lines, triangles, and tetrahedra. It is also capable of generating arbitrary order instances of Jacobi-type quadrature rules on the same element shapes. Further, H(div) and H(curl) conforming finite element spaces such as the families of Raviart-Thomas, Brezzi-Douglas-Marini and Nedelec are supported on triangles and tetrahedra.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-fiat"]}], "depends_on": []}, {"name": "py36-fiat", "portdir": "python/py-fiat", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/fiat", "description": "FInite element Automatic Tabulator", "long_description": "The FInite element Automatic Tabulator FIAT supports generation of arbitrary order instances of the Lagrange elements on lines, triangles, and tetrahedra. It is also capable of generating arbitrary order instances of Jacobi-type quadrature rules on the same element shapes. Further, H(div) and H(curl) conforming finite element spaces such as the families of Raviart-Thomas, Brezzi-Douglas-Marini and Nedelec are supported on triangles and tetrahedra.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py36-numpy", "py36-sympy"]}], "depends_on": [{"type": "lib", "ports": ["py36-ffc"]}]}, {"name": "py37-fiat", "portdir": "python/py-fiat", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/fiat", "description": "FInite element Automatic Tabulator", "long_description": "The FInite element Automatic Tabulator FIAT supports generation of arbitrary order instances of the Lagrange elements on lines, triangles, and tetrahedra. It is also capable of generating arbitrary order instances of Jacobi-type quadrature rules on the same element shapes. Further, H(div) and H(curl) conforming finite element spaces such as the families of Raviart-Thomas, Brezzi-Douglas-Marini and Nedelec are supported on triangles and tetrahedra.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-numpy", "py37-sympy"]}], "depends_on": [{"type": "lib", "ports": ["py37-ffc"]}]}, {"name": "py38-fiat", "portdir": "python/py-fiat", "version": "2018.1.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://bitbucket.org/fenics-project/fiat", "description": "FInite element Automatic Tabulator", "long_description": "The FInite element Automatic Tabulator FIAT supports generation of arbitrary order instances of the Lagrange elements on lines, triangles, and tetrahedra. It is also capable of generating arbitrary order instances of Jacobi-type quadrature rules on the same element shapes. Further, H(div) and H(curl) conforming finite element spaces such as the families of Raviart-Thomas, Brezzi-Douglas-Marini and Nedelec are supported on triangles and tetrahedra.", "active": true, "categories": ["science", "math", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-numpy", "py38-sympy"]}], "depends_on": [{"type": "lib", "ports": ["py38-ffc", "py-fiat"]}]}]}