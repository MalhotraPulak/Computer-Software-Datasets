{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=248", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=246", "results": [{"name": "py-astropy-healpix", "portdir": "python/py-astropy-healpix", "version": "0.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "BSD-licensed HEALPix for Astropy", "long_description": "BSD-licensed HEALPix for Astropy", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-astropy-healpix"]}], "depends_on": []}, {"name": "py36-astroplan", "portdir": "python/py-astroplan", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroplan.readthedocs.io/", "description": "Observation planning package for astronomers", "long_description": "astroplan is an open source Python package to help astronomers plan observations. The goal of astroplan is to make a flexible toolbox for observation planning and scheduling. When complete, the goal is to be easy for Python beginners and new observers to to pick up, but powerful enough for observatories preparing nightly and long-term schedules.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-astropy-helpers", "py36-setuptools"]}, {"type": "lib", "ports": ["python36", "py36-tz", "py36-astropy", "py36-numpy"]}], "depends_on": []}, {"name": "py37-astroplan", "portdir": "python/py-astroplan", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroplan.readthedocs.io/", "description": "Observation planning package for astronomers", "long_description": "astroplan is an open source Python package to help astronomers plan observations. The goal of astroplan is to make a flexible toolbox for observation planning and scheduling. When complete, the goal is to be easy for Python beginners and new observers to to pick up, but powerful enough for observatories preparing nightly and long-term schedules.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-astropy-helpers", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-tz", "py37-astropy", "py37-numpy"]}], "depends_on": []}, {"name": "xorg-libXdmcp", "portdir": "x11/xorg-libXdmcp", "version": "1.1.3", "license": "X11", "platforms": "darwin macosx", "epoch": 0, "replaced_by": null, "homepage": "https://www.x.org", "description": "X.org libXdmcp", "long_description": "X Display Manager Control Protocol routines", "active": true, "categories": ["devel", "x11"], "maintainers": [{"name": "jeremyhu", "github": "jeremyhu", "ports_count": 260}], "variants": ["docs", "universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0", "xorg-xorgproto"]}], "depends_on": [{"type": "lib", "ports": ["xorg-libX11", "magicspp", "geomview", "miriad", "icewm", "xforms", "xorg-libxcb", "pspp", "gdm"]}]}, {"name": "py38-astroplan", "portdir": "python/py-astroplan", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroplan.readthedocs.io/", "description": "Observation planning package for astronomers", "long_description": "astroplan is an open source Python package to help astronomers plan observations. The goal of astroplan is to make a flexible toolbox for observation planning and scheduling. When complete, the goal is to be easy for Python beginners and new observers to to pick up, but powerful enough for observatories preparing nightly and long-term schedules.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-astropy-helpers", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-tz", "py38-astropy", "py38-numpy"]}], "depends_on": []}, {"name": "py39-astroplan", "portdir": "python/py-astroplan", "version": "0.7", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroplan.readthedocs.io/", "description": "Observation planning package for astronomers", "long_description": "astroplan is an open source Python package to help astronomers plan observations. The goal of astroplan is to make a flexible toolbox for observation planning and scheduling. When complete, the goal is to be easy for Python beginners and new observers to to pick up, but powerful enough for observatories preparing nightly and long-term schedules.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-astropy-helpers", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-tz", "py39-astropy", "py39-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-astroplan"]}]}, {"name": "py39-astropy-healpix", "portdir": "python/py-astropy-healpix", "version": "0.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "BSD-licensed HEALPix for Astropy", "long_description": "BSD-licensed HEALPix for Astropy", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-extension-helpers", "py39-setuptools_scm"]}, {"type": "lib", "ports": ["python39", "py39-astropy", "py39-numpy"]}], "depends_on": [{"type": "lib", "ports": ["py-astropy-healpix"]}, {"type": "run", "ports": ["py39-reproject"]}]}, {"name": "py36-astropy", "portdir": "python/py-astropy", "version": "4.1", "license": "BSD", "platforms": "darwin", "epoch": 1, "replaced_by": null, "homepage": "http://www.astropy.org", "description": "A Community Python Library for Astronomy", "long_description": "The Astropy project is a common effort to develop a single core package for Astronomy.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0", "py36-extension-helpers", "py36-jinja2", "py36-setuptools", "py36-setuptools_scm", "py36-toml"]}, {"type": "lib", "ports": ["python36", "expat", "py36-numpy", "py36-pyerfa", "py36-pyobjc", "cfitsio", "erfa", "wcslib"]}], "depends_on": [{"type": "lib", "ports": ["py36-lalpulsar", "py36-astlib", "py36-astroML", "py36-astroplan", "py36-astropy-healpix", "py36-astroquery", "py36-astroscrappy", "py36-gwpy", "py36-healpy", "py36-photutils", "py36-vo", "py36-lalinference"]}, {"type": "run", "ports": ["py36-aplpy", "py36-pyregion", "py36-atpy", "py36-gammapy", "py36-regions", "py36-reproject", "py36-montage"]}]}, {"name": "py35-astropy", "portdir": "python/py-astropy", "version": "3.2.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.astropy.org", "description": "A Community Python Library for Astronomy", "long_description": "The Astropy project is a common effort to develop a single core package for Astronomy.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "mps", "github": "Schamschula", "ports_count": 394}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["pkgconfig", "clang-9.0", "py35-jinja2", "py35-setuptools"]}, {"type": "lib", "ports": ["wcslib", "python35", "expat", "py35-numpy", "cfitsio", "erfa"]}], "depends_on": [{"type": "lib", "ports": ["py35-astroML", "py35-healpy", "py35-astroplan", "py35-astropy-healpix", "py35-astroquery", "py35-vo", "py35-astroscrappy", "py35-astlib"]}, {"type": "run", "ports": ["py35-atpy", "py35-aplpy", "py35-gammapy", "py35-montage", "py35-pyregion", "py35-regions"]}]}, {"name": "py-astropy-helpers", "portdir": "python/py-astropy-helpers", "version": "4.0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astropy-helpers", "description": "Helpers for Astropy and Affiliated packages", "long_description": "This project provides a Python package, astropy_helpers, which includes many build, installation, and documentation-related tools used by the Astropy project, but packaged separately for use by other projects that wish to leverage this work.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-astropy-helpers"]}], "depends_on": []}, {"name": "py-astroscrappy", "portdir": "python/py-astroscrappy", "version": "1.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astroscrappy", "description": "Speedy Cosmic Ray Annihilation Package in Python", "long_description": "Astro-SCRAPPY is designed to detect cosmic rays in images (numpy arrays), originally based on Pieter van Dokkum\u2019s L.A.Cosmic algorithm.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-astroscrappy"]}], "depends_on": []}, {"name": "py27-astropy-helpers", "portdir": "python/py-astropy-helpers", "version": "2.0.11", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astropy-helpers", "description": "Helpers for Astropy and Affiliated packages", "long_description": "This project provides a Python package, astropy_helpers, which includes many build, installation, and documentation-related tools used by the Astropy project, but packaged separately for use by other projects that wish to leverage this work.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "build", "ports": ["py27-astroplan", "py27-astropy-healpix", "py27-astroquery", "py27-astroscrappy"]}]}, {"name": "py35-astropy-helpers", "portdir": "python/py-astropy-helpers", "version": "4.0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astropy-helpers", "description": "Helpers for Astropy and Affiliated packages", "long_description": "This project provides a Python package, astropy_helpers, which includes many build, installation, and documentation-related tools used by the Astropy project, but packaged separately for use by other projects that wish to leverage this work.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": [{"type": "build", "ports": ["py35-astroplan", "py35-astropy-healpix", "py35-astroquery", "py35-astroscrappy", "py35-vo"]}]}, {"name": "py36-astropy-helpers", "portdir": "python/py-astropy-helpers", "version": "4.0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astropy-helpers", "description": "Helpers for Astropy and Affiliated packages", "long_description": "This project provides a Python package, astropy_helpers, which includes many build, installation, and documentation-related tools used by the Astropy project, but packaged separately for use by other projects that wish to leverage this work.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "build", "ports": ["py36-astroplan", "py36-astroquery", "py36-astroscrappy", "py36-photutils", "py36-vo"]}]}, {"name": "py35-astropy-healpix", "portdir": "python/py-astropy-healpix", "version": "0.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astropy-healpix", "description": "BSD-licensed HEALPix for Astropy", "long_description": "BSD-licensed HEALPix for Astropy", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py35-wheel", "py35-astropy-helpers", "py35-pip", "py35-setuptools", "clang-9.0"]}, {"type": "lib", "ports": ["py35-astropy", "py35-numpy", "python35"]}], "depends_on": []}, {"name": "py36-astropy-healpix", "portdir": "python/py-astropy-healpix", "version": "0.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "BSD-licensed HEALPix for Astropy", "long_description": "BSD-licensed HEALPix for Astropy", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-extension-helpers"]}, {"type": "lib", "ports": ["python36", "py36-astropy", "py36-numpy"]}], "depends_on": [{"type": "run", "ports": ["py36-reproject"]}]}, {"name": "py27-astropy-healpix", "portdir": "python/py-astropy-healpix", "version": "0.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astropy-healpix", "description": "BSD-licensed HEALPix for Astropy", "long_description": "BSD-licensed HEALPix for Astropy", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py27-wheel", "py27-astropy-helpers", "py27-pip", "py27-setuptools", "clang-9.0"]}, {"type": "lib", "ports": ["py27-astropy", "py27-numpy", "python27"]}], "depends_on": []}, {"name": "py37-astropy-healpix", "portdir": "python/py-astropy-healpix", "version": "0.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "BSD-licensed HEALPix for Astropy", "long_description": "BSD-licensed HEALPix for Astropy", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-extension-helpers", "py37-setuptools_scm"]}, {"type": "lib", "ports": ["python37", "py37-astropy", "py37-numpy"]}], "depends_on": [{"type": "run", "ports": ["py37-reproject"]}]}, {"name": "py38-astropy-healpix", "portdir": "python/py-astropy-healpix", "version": "0.6", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "", "description": "BSD-licensed HEALPix for Astropy", "long_description": "BSD-licensed HEALPix for Astropy", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-extension-helpers", "py38-setuptools_scm"]}, {"type": "lib", "ports": ["python38", "py38-astropy", "py38-numpy"]}], "depends_on": [{"type": "run", "ports": ["py38-reproject"]}]}, {"name": "py37-astropy-helpers", "portdir": "python/py-astropy-helpers", "version": "4.0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astropy-helpers", "description": "Helpers for Astropy and Affiliated packages", "long_description": "This project provides a Python package, astropy_helpers, which includes many build, installation, and documentation-related tools used by the Astropy project, but packaged separately for use by other projects that wish to leverage this work.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "build", "ports": ["py37-astroplan", "py37-astroquery", "py37-astroscrappy", "py37-photutils", "py37-vo"]}]}, {"name": "py35-astroquery", "portdir": "python/py-astroquery", "version": "0.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroquery.readthedocs.io/", "description": "Accessing Online Astronomical Data", "long_description": "Astroquery is an astropy affiliated package that contains a collection of tools to access online Astronomical data. Each web service has its own sub-package.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-astropy-helpers", "py35-setuptools"]}, {"type": "lib", "ports": ["py35-html5lib", "py35-keyring", "python35", "py35-six", "py35-requests", "py35-astropy", "py35-beautifulsoup4"]}], "depends_on": []}, {"name": "py38-astropy-helpers", "portdir": "python/py-astropy-helpers", "version": "4.0.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astropy-helpers", "description": "Helpers for Astropy and Affiliated packages", "long_description": "This project provides a Python package, astropy_helpers, which includes many build, installation, and documentation-related tools used by the Astropy project, but packaged separately for use by other projects that wish to leverage this work.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}], "depends_on": [{"type": "build", "ports": ["py38-astroplan", "py38-astroquery", "py38-astroscrappy", "py38-photutils", "py38-vo"]}]}, {"name": "py36-astroquery", "portdir": "python/py-astroquery", "version": "0.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroquery.readthedocs.io/", "description": "Accessing Online Astronomical Data", "long_description": "Astroquery is an astropy affiliated package that contains a collection of tools to access online Astronomical data. Each web service has its own sub-package.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-astropy-helpers", "py36-setuptools"]}, {"type": "lib", "ports": ["py36-html5lib", "py36-keyring", "python36", "py36-six", "py36-requests", "py36-astropy", "py36-beautifulsoup4"]}], "depends_on": []}, {"name": "py-astroquery", "portdir": "python/py-astroquery", "version": "0.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroquery.readthedocs.io/", "description": "Accessing Online Astronomical Data", "long_description": "Astroquery is an astropy affiliated package that contains a collection of tools to access online Astronomical data. Each web service has its own sub-package.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-astroquery"]}], "depends_on": []}, {"name": "py37-astroquery", "portdir": "python/py-astroquery", "version": "0.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroquery.readthedocs.io/", "description": "Accessing Online Astronomical Data", "long_description": "Astroquery is an astropy affiliated package that contains a collection of tools to access online Astronomical data. Each web service has its own sub-package.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-astropy-helpers", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-html5lib", "py37-keyring", "python37", "py37-six", "py37-requests", "py37-astropy", "py37-beautifulsoup4"]}], "depends_on": []}, {"name": "py38-astroquery", "portdir": "python/py-astroquery", "version": "0.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroquery.readthedocs.io/", "description": "Accessing Online Astronomical Data", "long_description": "Astroquery is an astropy affiliated package that contains a collection of tools to access online Astronomical data. Each web service has its own sub-package.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-astropy-helpers", "py38-setuptools"]}, {"type": "lib", "ports": ["py38-html5lib", "py38-keyring", "python38", "py38-six", "py38-requests", "py38-astropy", "py38-beautifulsoup4"]}], "depends_on": []}, {"name": "py27-astroquery", "portdir": "python/py-astroquery", "version": "0.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://astroquery.readthedocs.io/", "description": "Accessing Online Astronomical Data", "long_description": "Astroquery is an astropy affiliated package that contains a collection of tools to access online Astronomical data. Each web service has its own sub-package.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-astropy-helpers", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-html5lib", "py27-keyring", "python27", "py27-six", "py27-requests", "py27-astropy", "py27-beautifulsoup4"]}], "depends_on": []}, {"name": "py27-astroscrappy", "portdir": "python/py-astroscrappy", "version": "1.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astroscrappy", "description": "Speedy Cosmic Ray Annihilation Package in Python", "long_description": "Astro-SCRAPPY is designed to detect cosmic rays in images (numpy arrays), originally based on Pieter van Dokkum\u2019s L.A.Cosmic algorithm.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-astropy-helpers", "py27-cython"]}, {"type": "lib", "ports": ["python27", "py27-astropy"]}], "depends_on": []}, {"name": "py35-astroscrappy", "portdir": "python/py-astroscrappy", "version": "1.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astroscrappy", "description": "Speedy Cosmic Ray Annihilation Package in Python", "long_description": "Astro-SCRAPPY is designed to detect cosmic rays in images (numpy arrays), originally based on Pieter van Dokkum\u2019s L.A.Cosmic algorithm.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-astropy-helpers", "py35-cython"]}, {"type": "lib", "ports": ["python35", "py35-astropy"]}], "depends_on": []}, {"name": "py36-astroscrappy", "portdir": "python/py-astroscrappy", "version": "1.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astroscrappy", "description": "Speedy Cosmic Ray Annihilation Package in Python", "long_description": "Astro-SCRAPPY is designed to detect cosmic rays in images (numpy arrays), originally based on Pieter van Dokkum\u2019s L.A.Cosmic algorithm.", "active": false, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-astropy-helpers", "py36-cython"]}, {"type": "lib", "ports": ["python36", "py36-astropy"]}], "depends_on": []}, {"name": "py37-astroscrappy", "portdir": "python/py-astroscrappy", "version": "1.0.5", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/astropy/astroscrappy", "description": "Speedy Cosmic Ray Annihilation Package in Python", "long_description": "Astro-SCRAPPY is designed to detect cosmic rays in images (numpy arrays), originally based on Pieter van Dokkum\u2019s L.A.Cosmic algorithm.", "active": true, "categories": ["science", "python"], "maintainers": [{"name": "aronnax", "github": "lpsinger", "ports_count": 371}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-astropy-helpers", "py37-cython"]}, {"type": "lib", "ports": ["python37", "py37-astropy"]}], "depends_on": []}, {"name": "py-astunparse", "portdir": "python/py-astunparse", "version": "1.6.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/simonpercivall/astunparse", "description": "An AST unparser for Python.", "long_description": "An AST unparser for Python.. This is a factored out version of unparse found in the Python source distribution; under Demo/parser in Python 2 and under Tools/parser in Python 3.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-astunparse"]}], "depends_on": []}, {"name": "py37-astunparse", "portdir": "python/py-astunparse", "version": "1.6.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/simonpercivall/astunparse", "description": "An AST unparser for Python.", "long_description": "An AST unparser for Python.. This is a factored out version of unparse found in the Python source distribution; under Demo/parser in Python 2 and under Tools/parser in Python 3.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "test", "ports": ["py37-wheel"]}], "depends_on": [{"type": "lib", "ports": ["py37-tensorflow"]}]}, {"name": "py38-astunparse", "portdir": "python/py-astunparse", "version": "1.6.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/simonpercivall/astunparse", "description": "An AST unparser for Python.", "long_description": "An AST unparser for Python.. This is a factored out version of unparse found in the Python source distribution; under Demo/parser in Python 2 and under Tools/parser in Python 3.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "test", "ports": ["py38-wheel"]}], "depends_on": [{"type": "lib", "ports": ["py38-tensorflow"]}, {"type": "run", "ports": ["py38-tensorflow-macos"]}]}, {"name": "py39-astunparse", "portdir": "python/py-astunparse", "version": "1.6.3", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/simonpercivall/astunparse", "description": "An AST unparser for Python.", "long_description": "An AST unparser for Python.. This is a factored out version of unparse found in the Python source distribution; under Demo/parser in Python 2 and under Tools/parser in Python 3.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "test", "ports": ["py39-wheel"]}], "depends_on": [{"type": "lib", "ports": ["py39-tensorflow", "py-astunparse"]}]}, {"name": "py-async-task", "portdir": "python/py-async-task", "version": "0.6.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gitpython-developers/async", "description": "Framework to process interdependent tasks in a pool of workers", "long_description": "Async is one more attempt to make the definition and execution of asynchronous interdependent operations easy. For that to work, you may define tasks which communicate with each other by channels. Channels transfer items, which is very similar to bytes flowing through pipes uses in inter-process communication. Items will only be generated on demand, that is when you read from the respective output channel.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-async-task"]}], "depends_on": []}, {"name": "py27-async-task", "portdir": "python/py-async-task", "version": "0.6.2", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gitpython-developers/async", "description": "Framework to process interdependent tasks in a pool of workers", "long_description": "Async is one more attempt to make the definition and execution of asynchronous interdependent operations easy. For that to work, you may define tasks which communicate with each other by channels. Channels transfer items, which is very similar to bytes flowing through pipes uses in inter-process communication. Items will only be generated on demand, that is when you read from the respective output channel.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-async-task"]}]}, {"name": "py38-enchant", "portdir": "python/py-enchant", "version": "3.2.2", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pyenchant.github.io/pyenchant/", "description": "Python bindings for the Enchant spellchecking system", "long_description": "PyEnchant is a spellchecking library for Python, based on the excellent Enchant library.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "enchant2"]}], "depends_on": [{"type": "lib", "ports": ["py38-eric-ide"]}]}, {"name": "py39-enchant", "portdir": "python/py-enchant", "version": "3.2.2", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pyenchant.github.io/pyenchant/", "description": "Python bindings for the Enchant spellchecking system", "long_description": "PyEnchant is a spellchecking library for Python, based on the excellent Enchant library.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "enchant2"]}], "depends_on": [{"type": "lib", "ports": ["py-enchant", "py39-eric-ide"]}, {"type": "test", "ports": ["buildbot"]}]}, {"name": "py310-enchant", "portdir": "python/py-enchant", "version": "3.2.2", "license": "LGPL-2.1+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pyenchant.github.io/pyenchant/", "description": "Python bindings for the Enchant spellchecking system", "long_description": "PyEnchant is a spellchecking library for Python, based on the excellent Enchant library.", "active": true, "categories": ["textproc", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools"]}, {"type": "lib", "ports": ["enchant2", "python310"]}], "depends_on": [{"type": "lib", "ports": ["py310-eric-ide"]}]}, {"name": "py35-entrypoints", "portdir": "python/py-entrypoints", "version": "0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/takluyver/entrypoints", "description": "Discover and load entry points from installed packages.", "long_description": "Discover and load entry points from installed packages.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python35"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py35-flake8", "py35-nbconvert"]}]}, {"name": "py310-entrypoints", "portdir": "python/py-entrypoints", "version": "0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/takluyver/entrypoints", "description": "Discover and load entry points from installed packages.", "long_description": "Discover and load entry points from installed packages.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["python310"]}, {"type": "test", "ports": ["py310-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py310-flake8", "py310-nbconvert"]}]}, {"name": "py310-fastprogress", "portdir": "python/py-fastprogress", "version": "1.0.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/fastai/fastprogress", "description": "A nested progress with plotting options for fastai", "long_description": "A nested progress with plotting options for fastai", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "reneeotten", "github": "reneeotten", "ports_count": 693}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools"]}, {"type": "lib", "ports": ["python310", "py310-numpy"]}], "depends_on": []}, {"name": "py-asyncpg", "portdir": "python/py-asyncpg", "version": "0.22.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/MagicStack/asyncpg", "description": "An asyncio PostgreSQL driver", "long_description": "asyncpg is a database interface library designed specifically for PostgreSQL and Python/asyncio. asyncpg is an efficient, clean implementation of PostgreSQL server binary protocol for use with Python's asyncio framework.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "fetch", "ports": ["git"]}, {"type": "lib", "ports": ["py39-asyncpg"]}], "depends_on": []}, {"name": "py37-asyncpg", "portdir": "python/py-asyncpg", "version": "0.22.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/MagicStack/asyncpg", "description": "An asyncio PostgreSQL driver", "long_description": "asyncpg is a database interface library designed specifically for PostgreSQL and Python/asyncio. asyncpg is an efficient, clean implementation of PostgreSQL server binary protocol for use with Python's asyncio framework.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py37-pip", "py37-wheel", "py37-setuptools", "clang-9.0"]}, {"type": "fetch", "ports": ["git"]}, {"type": "lib", "ports": ["py37-cython", "python37"]}, {"type": "run", "ports": ["py37-typing_extensions"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "run", "ports": ["py37-databases"]}]}, {"name": "py38-asyncpg", "portdir": "python/py-asyncpg", "version": "0.22.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/MagicStack/asyncpg", "description": "An asyncio PostgreSQL driver", "long_description": "asyncpg is a database interface library designed specifically for PostgreSQL and Python/asyncio. asyncpg is an efficient, clean implementation of PostgreSQL server binary protocol for use with Python's asyncio framework.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py38-pip", "py38-wheel", "py38-setuptools", "clang-9.0"]}, {"type": "fetch", "ports": ["git"]}, {"type": "lib", "ports": ["py38-cython", "python38"]}, {"type": "run", "ports": ["py38-typing_extensions"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "run", "ports": ["py38-databases"]}]}, {"name": "py39-asyncpg", "portdir": "python/py-asyncpg", "version": "0.22.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/MagicStack/asyncpg", "description": "An asyncio PostgreSQL driver", "long_description": "asyncpg is a database interface library designed specifically for PostgreSQL and Python/asyncio. asyncpg is an efficient, clean implementation of PostgreSQL server binary protocol for use with Python's asyncio framework.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["py39-pip", "py39-wheel", "py39-setuptools", "clang-9.0"]}, {"type": "fetch", "ports": ["git"]}, {"type": "lib", "ports": ["py39-cython", "python39"]}, {"type": "run", "ports": ["py39-typing_extensions"]}, {"type": "test", "ports": ["py39-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-asyncpg"]}, {"type": "run", "ports": ["py39-databases"]}]}, {"name": "py-atomiclong", "portdir": "python/py-atomiclong", "version": "0.1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/dreid/atomiclong", "description": "increment numbers, atomically, in python", "long_description": "Sometimes you need to increment some numbers, atomically, in python. AtomicLong was born out of the need for fast thread-safe counters in python. It uses CFFI to bind GCC's Atomic Builtins. Its value is a C long which can be incremented, decremented, and set atomically. It is inspired by Java's java.util.concurrent.atomic.AtomicLong.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-atomiclong"]}], "depends_on": []}, {"name": "py38-atomiclong", "portdir": "python/py-atomiclong", "version": "0.1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/dreid/atomiclong", "description": "increment numbers, atomically, in python", "long_description": "Sometimes you need to increment some numbers, atomically, in python. AtomicLong was born out of the need for fast thread-safe counters in python. It uses CFFI to bind GCC's Atomic Builtins. Its value is a C long which can be incremented, decremented, and set atomically. It is inspired by Java's java.util.concurrent.atomic.AtomicLong.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-cffi"]}], "depends_on": []}, {"name": "py39-atomiclong", "portdir": "python/py-atomiclong", "version": "0.1.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/dreid/atomiclong", "description": "increment numbers, atomically, in python", "long_description": "Sometimes you need to increment some numbers, atomically, in python. AtomicLong was born out of the need for fast thread-safe counters in python. It uses CFFI to bind GCC's Atomic Builtins. Its value is a C long which can be incremented, decremented, and set atomically. It is inspired by Java's java.util.concurrent.atomic.AtomicLong.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-cffi"]}], "depends_on": [{"type": "lib", "ports": ["py39-gitfs", "py-atomiclong"]}]}]}