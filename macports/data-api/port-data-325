{"count": 29693, "next": "http://ports.macports.org/api/v1/ports/?format=json&page=326", "previous": "http://ports.macports.org/api/v1/ports/?format=json&page=324", "results": [{"name": "py38-pytesting-utils", "portdir": "python/py-pytesting-utils", "version": "0.5.0", "license": "LGPL-3+", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pytesting/utils", "description": "Utilities for the PyTesting project", "long_description": "Utilities for the PyTesting project", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-virtualenv"]}], "depends_on": [{"type": "lib", "ports": ["py-pytesting-utils", "py38-test-runner"]}]}, {"name": "py-python-coveralls", "portdir": "python/py-python-coveralls", "version": "2.9.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/z4r/python-coveralls", "description": "Python API for https://coveralls.io", "long_description": "Python API for https://coveralls.io", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-python-coveralls"]}], "depends_on": []}, {"name": "py37-python-coveralls", "portdir": "python/py-python-coveralls", "version": "2.9.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/z4r/python-coveralls", "description": "Python API for https://coveralls.io", "long_description": "Python API for https://coveralls.io", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-setuptools", "python37"]}, {"type": "run", "ports": ["py37-yaml", "py37-requests", "py37-coverage", "py37-six"]}], "depends_on": [{"type": "test", "ports": ["py37-moviepy"]}]}, {"name": "py38-python-coveralls", "portdir": "python/py-python-coveralls", "version": "2.9.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/z4r/python-coveralls", "description": "Python API for https://coveralls.io", "long_description": "Python API for https://coveralls.io", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-setuptools", "python38"]}, {"type": "run", "ports": ["py38-yaml", "py38-requests", "py38-coverage", "py38-six"]}], "depends_on": [{"type": "test", "ports": ["py38-moviepy"]}]}, {"name": "py39-python-coveralls", "portdir": "python/py-python-coveralls", "version": "2.9.3", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/z4r/python-coveralls", "description": "Python API for https://coveralls.io", "long_description": "Python API for https://coveralls.io", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-setuptools", "python39"]}, {"type": "run", "ports": ["py39-yaml", "py39-requests", "py39-coverage", "py39-six"]}], "depends_on": [{"type": "lib", "ports": ["py-python-coveralls"]}, {"type": "test", "ports": ["py39-moviepy"]}]}, {"name": "py-python-daemon", "portdir": "python/py-python-daemon", "version": "2.2.4", "license": "GPL-3+ and Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pagure.io/python-daemon/", "description": "Library to implement a well-behaved Unix daemon process.", "long_description": "This library implements the well-behaved daemon specification of PEP 3143, \"Standard daemon process library\". A well-behaved Unix daemon process is tricky to get right, but the required steps are much the same for every daemon program. A DaemonContext instance holds the behaviour and configured process environment for the program; use the instance as a context manager to enter a daemon state.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-python-daemon"]}], "depends_on": []}, {"name": "py27-python-dotenv", "portdir": "python/py-python-dotenv", "version": "0.17.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/theskumar/python-dotenv", "description": "Add .env support to your django/flask apps in development and deployments", "long_description": "Add .env support to your django/flask apps in development and deployments Reads the key-value pair from .env file and adds them to environment variable. It is great for managing app settings during development and in production using 12-factor principles.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-click", "py27-typing"]}], "depends_on": []}, {"name": "py27-python-daemon", "portdir": "python/py-python-daemon", "version": "2.2.4", "license": "GPL-3+ and Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pagure.io/python-daemon/", "description": "Library to implement a well-behaved Unix daemon process.", "long_description": "This library implements the well-behaved daemon specification of PEP 3143, \"Standard daemon process library\". A well-behaved Unix daemon process is tricky to get right, but the required steps are much the same for every daemon program. A DaemonContext instance holds the behaviour and configured process environment for the program; use the instance as a context manager to enter a daemon state.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-docutils", "py27-setuptools"]}, {"type": "lib", "ports": ["python27", "py27-lockfile"]}], "depends_on": []}, {"name": "py35-python-dotenv", "portdir": "python/py-python-dotenv", "version": "0.17.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/theskumar/python-dotenv", "description": "Add .env support to your django/flask apps in development and deployments", "long_description": "Add .env support to your django/flask apps in development and deployments Reads the key-value pair from .env file and adds them to environment variable. It is great for managing app settings during development and in production using 12-factor principles.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-click"]}], "depends_on": []}, {"name": "py37-python-daemon", "portdir": "python/py-python-daemon", "version": "2.2.4", "license": "GPL-3+ and Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pagure.io/python-daemon/", "description": "Library to implement a well-behaved Unix daemon process.", "long_description": "This library implements the well-behaved daemon specification of PEP 3143, \"Standard daemon process library\". A well-behaved Unix daemon process is tricky to get right, but the required steps are much the same for every daemon program. A DaemonContext instance holds the behaviour and configured process environment for the program; use the instance as a context manager to enter a daemon state.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-docutils", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-lockfile"]}], "depends_on": []}, {"name": "py38-python-daemon", "portdir": "python/py-python-daemon", "version": "2.2.4", "license": "GPL-3+ and Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pagure.io/python-daemon/", "description": "Library to implement a well-behaved Unix daemon process.", "long_description": "This library implements the well-behaved daemon specification of PEP 3143, \"Standard daemon process library\". A well-behaved Unix daemon process is tricky to get right, but the required steps are much the same for every daemon program. A DaemonContext instance holds the behaviour and configured process environment for the program; use the instance as a context manager to enter a daemon state.", "active": true, "categories": ["devel", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-docutils", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-lockfile"]}], "depends_on": [{"type": "lib", "ports": ["py-python-daemon"]}]}, {"name": "aolserver", "portdir": "www/aolserver", "version": "4.5.1", "license": "MPL-1.1-AOLserver", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://aolserver.github.io/", "description": "America Online's open-source web server", "long_description": "AOLserver is America Online's open-source web server. AOLserver is the backbone of the largest and busiest production environments in the world. AOLserver is a multithreaded, Tcl-enabled web server used for large scale, dynamic web sites.", "active": true, "categories": ["www"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["tcl"]}], "depends_on": []}, {"name": "py-python-dotenv", "portdir": "python/py-python-dotenv", "version": "0.17.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/theskumar/python-dotenv", "description": "Add .env support to your django/flask apps in development and deployments", "long_description": "Add .env support to your django/flask apps in development and deployments Reads the key-value pair from .env file and adds them to environment variable. It is great for managing app settings during development and in production using 12-factor principles.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-python-dotenv"]}], "depends_on": []}, {"name": "py310-flake8-mccabe", "portdir": "python/py-flake8-mccabe", "version": "0.6.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/pycqa/mccabe", "description": "McCabe complexity checker for Python code, flake8 plugin", "long_description": "McCabe complexity checker for Python code, flake8 plugin.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "petr", "github": "petrrr", "ports_count": 384}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py310-setuptools", "py310-pytest-runner"]}, {"type": "lib", "ports": ["python310"]}, {"type": "test", "ports": ["py310-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py310-pylint", "py310-flake8"]}]}, {"name": "py-flaky", "portdir": "python/py-flaky", "version": "3.7.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/box/flaky", "description": "Plugin for nose or py.test that automatically reruns flaky tests.", "long_description": "Plugin for nose or py.test that automatically reruns flaky tests.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-flaky"]}], "depends_on": []}, {"name": "py-python-jenkins", "portdir": "python/py-python-jenkins", "version": "0.3.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://opendev.org/jjb/python-jenkins", "description": "Python bindings for the remote Jenkins API", "long_description": "Python bindings for the remote Jenkins API", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-python-jenkins"]}], "depends_on": []}, {"name": "py37-python-dotenv", "portdir": "python/py-python-dotenv", "version": "0.17.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/theskumar/python-dotenv", "description": "Add .env support to your django/flask apps in development and deployments", "long_description": "Add .env support to your django/flask apps in development and deployments Reads the key-value pair from .env file and adds them to environment variable. It is great for managing app settings during development and in production using 12-factor principles.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37", "py37-click"]}], "depends_on": []}, {"name": "py35-flaky", "portdir": "python/py-flaky", "version": "3.7.0", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/box/flaky", "description": "Plugin for nose or py.test that automatically reruns flaky tests.", "long_description": "Plugin for nose or py.test that automatically reruns flaky tests.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}, {"type": "test", "ports": ["py35-tox"]}], "depends_on": [{"type": "test", "ports": ["py35-language-server", "py35-watchdog"]}]}, {"name": "py38-python-dotenv", "portdir": "python/py-python-dotenv", "version": "0.17.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/theskumar/python-dotenv", "description": "Add .env support to your django/flask apps in development and deployments", "long_description": "Add .env support to your django/flask apps in development and deployments Reads the key-value pair from .env file and adds them to environment variable. It is great for managing app settings during development and in production using 12-factor principles.", "active": true, "categories": ["devel", "python"], "maintainers": [{"name": "emcrisostomo", "github": "emcrisostomo", "ports_count": 112}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-click"]}], "depends_on": []}, {"name": "py27-python-jenkins", "portdir": "python/py-python-jenkins", "version": "0.3.4", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://opendev.org/jjb/python-jenkins", "description": "Python bindings for the remote Jenkins API", "long_description": "Python bindings for the remote Jenkins API", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-jenkins-job-builder", "py-python-jenkins"]}]}, {"name": "py-python-snappy", "portdir": "python/py-python-snappy", "version": "0.6.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://github.com/andrix/python-snappy", "description": "Python library for the snappy compression library from Google", "long_description": "Python library for the snappy compression library from Google", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-python-snappy"]}], "depends_on": []}, {"name": "py38-python-snappy", "portdir": "python/py-python-snappy", "version": "0.6.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://github.com/andrix/python-snappy", "description": "Python library for the snappy compression library from Google", "long_description": "Python library for the snappy compression library from Google", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["snappy", "clang-9.0", "py38-cffi", "py38-setuptools"]}, {"type": "lib", "ports": ["snappy", "python38"]}], "depends_on": [{"type": "run", "ports": ["py38-autobahn"]}]}, {"name": "py39-python-snappy", "portdir": "python/py-python-snappy", "version": "0.6.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://github.com/andrix/python-snappy", "description": "Python library for the snappy compression library from Google", "long_description": "Python library for the snappy compression library from Google", "active": true, "categories": ["python"], "maintainers": [{"name": "herby.gillot", "github": "herbygillot", "ports_count": 445}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["snappy", "clang-9.0", "py39-cffi", "py39-setuptools"]}, {"type": "lib", "ports": ["snappy", "python39"]}], "depends_on": [{"type": "lib", "ports": ["py-python-snappy"]}, {"type": "run", "ports": ["py39-autobahn"]}]}, {"name": "py-pythonutils", "portdir": "python/py-pythonutils", "version": "0.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.voidspace.org.uk/python/pythonutils.html", "description": "General utility modules that simplify common programming in Python", "long_description": "The Voidspace Pythonutils package is a simple way of installing the Voidspace collection of modules. These are currently: ConfigObj 4.4.0 - Easy config file reading/writing validate 0.2.3 - Validation and type conversion system StandOut 3.0.0 - Simple logging and output control object pathutils 0.2.5 - For working with paths and files cgiutils 0.3.5 - CGI helpers urlpath 0.1.0 - Functions for handling URLs odict 0.2.1 - Ordered Dictionary Class Several of the Voidspace Projects depend on these modules. They are also useful in their own right of course. They are primarily general utility modules that simplify common programming tasks in Python.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["py27-pythonutils"]}], "depends_on": []}, {"name": "py27-pythonutils", "portdir": "python/py-pythonutils", "version": "0.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "http://www.voidspace.org.uk/python/pythonutils.html", "description": "General utility modules that simplify common programming in Python", "long_description": "The Voidspace Pythonutils package is a simple way of installing the Voidspace collection of modules. These are currently: ConfigObj 4.4.0 - Easy config file reading/writing validate 0.2.3 - Validation and type conversion system StandOut 3.0.0 - Simple logging and output control object pathutils 0.2.5 - For working with paths and files cgiutils 0.3.5 - CGI helpers urlpath 0.1.0 - Functions for handling URLs odict 0.2.1 - Ordered Dictionary Class Several of the Voidspace Projects depend on these modules. They are also useful in their own right of course. They are primarily general utility modules that simplify common programming tasks in Python.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "extract", "ports": ["unzip"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-pythonutils"]}]}, {"name": "py-pytoml", "portdir": "python/py-pytoml", "version": "0.1.21", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/avakar/pytoml", "description": "A parser for TOML-0.4.0", "long_description": "This project aims at being a specs-conforming and strict parser and writer for TOML files. The library currently supports version 0.4.0 of the specs and runs with Python 2.7+ and 3.5+.", "active": false, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pytoml"]}], "depends_on": []}, {"name": "py-pytimeparse", "portdir": "python/py-pytimeparse", "version": "1.1.8", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pytimeparse", "description": "A small Python module to parse various kinds of time expressions", "long_description": "A small Python module to parse various kinds of time expressions", "active": true, "categories": ["python"], "maintainers": [{"name": "esafak", "github": "esafak", "ports_count": 74}], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py37-pytimeparse"]}], "depends_on": []}, {"name": "py27-pytimeparse", "portdir": "python/py-pytimeparse", "version": "1.1.8", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pytimeparse", "description": "A small Python module to parse various kinds of time expressions", "long_description": "A small Python module to parse various kinds of time expressions", "active": true, "categories": ["python"], "maintainers": [{"name": "esafak", "github": "esafak", "ports_count": 74}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py27-agate"]}]}, {"name": "py35-pytimeparse", "portdir": "python/py-pytimeparse", "version": "1.1.8", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pytimeparse", "description": "A small Python module to parse various kinds of time expressions", "long_description": "A small Python module to parse various kinds of time expressions", "active": true, "categories": ["python"], "maintainers": [{"name": "esafak", "github": "esafak", "ports_count": 74}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["python35"]}], "depends_on": [{"type": "lib", "ports": ["py35-agate"]}]}, {"name": "py36-pytimeparse", "portdir": "python/py-pytimeparse", "version": "1.1.8", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pytimeparse", "description": "A small Python module to parse various kinds of time expressions", "long_description": "A small Python module to parse various kinds of time expressions", "active": true, "categories": ["python"], "maintainers": [{"name": "esafak", "github": "esafak", "ports_count": 74}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["python36"]}], "depends_on": [{"type": "lib", "ports": ["py36-agate"]}]}, {"name": "py37-pytimeparse", "portdir": "python/py-pytimeparse", "version": "1.1.8", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pypi.python.org/pypi/pytimeparse", "description": "A small Python module to parse various kinds of time expressions", "long_description": "A small Python module to parse various kinds of time expressions", "active": true, "categories": ["python"], "maintainers": [{"name": "esafak", "github": "esafak", "ports_count": 74}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": [{"type": "lib", "ports": ["py37-agate", "py-pytimeparse"]}]}, {"name": "py37-pytoml", "portdir": "python/py-pytoml", "version": "0.1.21", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/avakar/pytoml", "description": "A parser for TOML-0.4.0", "long_description": "This project aims at being a specs-conforming and strict parser and writer for TOML files. The library currently supports version 0.4.0 of the specs and runs with Python 2.7+ and 3.5+.", "active": false, "categories": ["python"], "maintainers": [{"name": "toby", "github": "tobypeterson", "ports_count": 130}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}], "depends_on": []}, {"name": "py37-pytorch", "portdir": "python/py-pytorch", "version": "1.8.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pytorch.org/", "description": "Tensors and dynamic neural networks in Python with strong GPU acceleration", "long_description": "PyTorch is a Python package that provides two high-level features: Tensor computation (like NumPy) with strong GPU acceleration; Deep neural networks built on a tape-based autograd system. You can reuse your favorite Python packages such as NumPy, SciPy and Cython to extend PyTorch when needed.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["clang10", "clang11", "clang12", "clang13", "clang50", "clang60", "clang70", "clang80", "gcc7", "clang90", "gcc8", "clangdevel", "gcc9", "g95", "gccdevel", "gfortran", "gcc10", "mpich", "gcc11", "openmpi", "mkl", "gcc5", "gcc6"], "dependencies": [{"type": "build", "ports": ["doxygen", "cctools", "cmake", "git", "clang-9.0", "py37-mkl-include", "py37-setuptools"]}, {"type": "fetch", "ports": ["git"]}, {"type": "lib", "ports": ["zmq", "opencv4", "libomp", "python37", "OpenBLAS", "eigen3", "py37-cffi", "py37-click", "zstd", "py37-gmpy", "py37-mkl", "py37-numpy", "py37-pybind11", "py37-typing_extensions", "py37-yaml", "py37-future", "leveldb", "lmdb", "gflags", "gmp", "google-glog", "mpfr", "tbb"]}, {"type": "run", "ports": ["py37-onnx"]}], "depends_on": [{"type": "lib", "ports": ["py37-torchaudio", "py37-torchtext", "py37-torchvision"]}, {"type": "run", "ports": ["py37-pytorch-lightning", "py37-fairseq"]}]}, {"name": "py-pytools", "portdir": "python/py-pytools", "version": "2020.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://documen.tician.de/pytools/", "description": "A collection of tools for Python", "long_description": "Pytools is a big bag of things that are 'missing' from the Python standard library.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py38-pytools"]}], "depends_on": []}, {"name": "py27-pytools", "portdir": "python/py-pytools", "version": "2020.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://documen.tician.de/pytools/", "description": "A collection of tools for Python", "long_description": "Pytools is a big bag of things that are 'missing' from the Python standard library.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["py27-decorator", "py27-numpy", "py27-six", "python27", "py27-appdirs"]}, {"type": "test", "ports": ["py27-pytest"]}], "depends_on": [{"type": "run", "ports": ["py27-pyopencl"]}]}, {"name": "py35-pytools", "portdir": "python/py-pytools", "version": "2020.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://documen.tician.de/pytools/", "description": "A collection of tools for Python", "long_description": "Pytools is a big bag of things that are 'missing' from the Python standard library.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-setuptools"]}, {"type": "lib", "ports": ["py35-decorator", "py35-numpy", "py35-six", "python35", "py35-appdirs"]}, {"type": "test", "ports": ["py35-pytest"]}], "depends_on": [{"type": "run", "ports": ["py35-pyopencl"]}]}, {"name": "py36-pytools", "portdir": "python/py-pytools", "version": "2020.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://documen.tician.de/pytools/", "description": "A collection of tools for Python", "long_description": "Pytools is a big bag of things that are 'missing' from the Python standard library.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py36-setuptools"]}, {"type": "lib", "ports": ["py36-decorator", "py36-numpy", "py36-six", "python36", "py36-appdirs"]}, {"type": "test", "ports": ["py36-pytest"]}], "depends_on": [{"type": "run", "ports": ["py36-pyopencl"]}]}, {"name": "py37-pytools", "portdir": "python/py-pytools", "version": "2020.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://documen.tician.de/pytools/", "description": "A collection of tools for Python", "long_description": "Pytools is a big bag of things that are 'missing' from the Python standard library.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["py37-decorator", "py37-numpy", "py37-six", "python37", "py37-appdirs"]}, {"type": "test", "ports": ["py37-pytest"]}], "depends_on": [{"type": "run", "ports": ["py37-pyopencl"]}]}, {"name": "py38-pytools", "portdir": "python/py-pytools", "version": "2020.1", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://documen.tician.de/pytools/", "description": "A collection of tools for Python", "long_description": "Pytools is a big bag of things that are 'missing' from the Python standard library.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["py38-decorator", "py38-numpy", "py38-six", "python38", "py38-appdirs"]}, {"type": "test", "ports": ["py38-pytest"]}], "depends_on": [{"type": "lib", "ports": ["py-pytools"]}]}, {"name": "py-pytorch-lightning", "portdir": "python/py-pytorch-lightning", "version": "1.2.10", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyTorchLightning/pytorch-lightning", "description": "The lightweight PyTorch wrapper for high-performance AI research.", "long_description": "Lightning disentangles PyTorch code to decouple the science from the engineering.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pytorch-lightning"]}], "depends_on": []}, {"name": "py37-pytorch-lightning", "portdir": "python/py-pytorch-lightning", "version": "1.2.10", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyTorchLightning/pytorch-lightning", "description": "The lightweight PyTorch wrapper for high-performance AI research.", "long_description": "Lightning disentangles PyTorch code to decouple the science from the engineering.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py37-setuptools"]}, {"type": "lib", "ports": ["python37"]}, {"type": "run", "ports": ["py37-numpy", "py37-pytorch", "py37-tensorboard", "py37-tqdm", "py37-yaml", "py37-future", "py37-fsspec"]}], "depends_on": []}, {"name": "py38-pytorch-lightning", "portdir": "python/py-pytorch-lightning", "version": "1.2.10", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyTorchLightning/pytorch-lightning", "description": "The lightweight PyTorch wrapper for high-performance AI research.", "long_description": "Lightning disentangles PyTorch code to decouple the science from the engineering.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38"]}, {"type": "run", "ports": ["py38-numpy", "py38-pytorch", "py38-tensorboard", "py38-tqdm", "py38-yaml", "py38-future", "py38-fsspec"]}], "depends_on": [{"type": "run", "ports": ["py38-transformers"]}]}, {"name": "py39-pytorch-lightning", "portdir": "python/py-pytorch-lightning", "version": "1.2.10", "license": "Apache-2", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyTorchLightning/pytorch-lightning", "description": "The lightweight PyTorch wrapper for high-performance AI research.", "long_description": "Lightning disentangles PyTorch code to decouple the science from the engineering.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39"]}, {"type": "run", "ports": ["py39-numpy", "py39-pytorch", "py39-tensorboard", "py39-tqdm", "py39-yaml", "py39-future", "py39-fsspec"]}], "depends_on": [{"type": "lib", "ports": ["py-pytorch-lightning"]}, {"type": "run", "ports": ["py39-transformers"]}]}, {"name": "py-pytrie", "portdir": "python/py-pytrie", "version": "0.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gsakkis/pytrie/", "description": "A pure Python implementation of the trie data structure.", "long_description": "A pure Python implementation of the trie data structure.", "active": true, "categories": ["python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py39-pytrie"]}], "depends_on": []}, {"name": "py38-pytrie", "portdir": "python/py-pytrie", "version": "0.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gsakkis/pytrie/", "description": "A pure Python implementation of the trie data structure.", "long_description": "A pure Python implementation of the trie data structure.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py38-setuptools"]}, {"type": "lib", "ports": ["python38", "py38-sortedcontainers"]}], "depends_on": [{"type": "run", "ports": ["py38-autobahn"]}]}, {"name": "py39-pytrie", "portdir": "python/py-pytrie", "version": "0.4.0", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/gsakkis/pytrie/", "description": "A pure Python implementation of the trie data structure.", "long_description": "A pure Python implementation of the trie data structure.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py39-setuptools"]}, {"type": "lib", "ports": ["python39", "py39-sortedcontainers"]}], "depends_on": [{"type": "lib", "ports": ["py-pytrie"]}, {"type": "run", "ports": ["py39-autobahn"]}]}, {"name": "py-pyttsx", "portdir": "python/py-pyttsx", "version": "1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/parente/pyttsx", "description": "Cross-platform Python wrapper for text-to-speech synthesis", "long_description": "Cross-platform Python wrapper for text-to-speech synthesis", "active": true, "categories": ["devel", "audio", "python"], "maintainers": [], "variants": [], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "lib", "ports": ["py27-pyttsx"]}], "depends_on": []}, {"name": "py35-pywavelets", "portdir": "python/py-pywavelets", "version": "1.0.3", "license": "MIT", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/PyWavelets/pywt", "description": "PyWavelets is a Python wavelet transforms module", "long_description": "PyWavelets is a Python wavelet transforms module.", "active": true, "categories": ["science", "math", "python"], "maintainers": [{"name": "stromnov", "github": "stromnov", "ports_count": 1875}], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py35-cython", "py35-setuptools"]}, {"type": "lib", "ports": ["python35", "py35-numpy"]}], "depends_on": [{"type": "run", "ports": ["py35-scikit-image"]}]}, {"name": "py-pytorch", "portdir": "python/py-pytorch", "version": "1.8.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://pytorch.org/", "description": "Tensors and dynamic neural networks in Python with strong GPU acceleration", "long_description": "PyTorch is a Python package that provides two high-level features: Tensor computation (like NumPy) with strong GPU acceleration; Deep neural networks built on a tape-based autograd system. You can reuse your favorite Python packages such as NumPy, SciPy and Cython to extend PyTorch when needed.", "active": true, "categories": ["python"], "maintainers": [], "variants": ["clang10", "clang11", "clang12", "clang70", "clang80", "clang13", "clang90", "clang50", "clangdevel", "g95", "clang60", "gcc10", "gcc11", "gcc5", "gcc6", "gcc7", "gcc8", "gcc9", "gccdevel", "gfortran", "mpich", "openmpi", "mkl"], "dependencies": [{"type": "build", "ports": ["clang-9.0"]}, {"type": "fetch", "ports": ["git"]}, {"type": "lib", "ports": ["py39-pytorch"]}], "depends_on": []}, {"name": "py27-pyttsx", "portdir": "python/py-pyttsx", "version": "1.1", "license": "BSD", "platforms": "darwin", "epoch": 0, "replaced_by": null, "homepage": "https://github.com/parente/pyttsx", "description": "Cross-platform Python wrapper for text-to-speech synthesis", "long_description": "Cross-platform Python wrapper for text-to-speech synthesis", "active": true, "categories": ["devel", "audio", "python"], "maintainers": [], "variants": ["universal"], "dependencies": [{"type": "build", "ports": ["clang-9.0", "py27-setuptools"]}, {"type": "lib", "ports": ["python27"]}], "depends_on": [{"type": "lib", "ports": ["py-pyttsx"]}]}]}